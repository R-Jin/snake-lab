
Debug/Snake:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
 *
 */
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 f8c8 	bl	20000198 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <input_init>:
#define GPIO_D_ODR      ((unsigned short *) (GPIO_D_BASE + 0x14))
#define GPIO_D_ODR_HIGH ((unsigned char *) (GPIO_D_BASE + 0x15))
#define GPIO_D_IDR_HIGH ((unsigned char *) (GPIO_D_BASE + 0x11))

void input_init(void)
{
20000010:	b580      	push	{r7, lr}
20000012:	af00      	add	r7, sp, #0
  /* starta klockor port D och E */
//   *((unsigned long *) 0x40023830) = 0x18;

  *GPIO_D_MODER = 0x55005555;
20000014:	4b0e      	ldr	r3, [pc, #56]	; (20000050 <input_init+0x40>)
20000016:	4a0f      	ldr	r2, [pc, #60]	; (20000054 <input_init+0x44>)
20000018:	601a      	str	r2, [r3, #0]
  *GPIO_D_OTYPER &= 0xFFFF00FF;
2000001a:	4b0f      	ldr	r3, [pc, #60]	; (20000058 <input_init+0x48>)
2000001c:	881b      	ldrh	r3, [r3, #0]
2000001e:	4a0e      	ldr	r2, [pc, #56]	; (20000058 <input_init+0x48>)
20000020:	21ff      	movs	r1, #255	; 0xff
20000022:	400b      	ands	r3, r1
20000024:	b29b      	uxth	r3, r3
20000026:	8013      	strh	r3, [r2, #0]
  *GPIO_D_OTYPER |= 0x0000;
20000028:	4a0b      	ldr	r2, [pc, #44]	; (20000058 <input_init+0x48>)
2000002a:	4b0b      	ldr	r3, [pc, #44]	; (20000058 <input_init+0x48>)
2000002c:	8812      	ldrh	r2, [r2, #0]
2000002e:	801a      	strh	r2, [r3, #0]
  *GPIO_D_PUPDR &= 0x0000FFFF;
20000030:	4b0a      	ldr	r3, [pc, #40]	; (2000005c <input_init+0x4c>)
20000032:	681a      	ldr	r2, [r3, #0]
20000034:	4b09      	ldr	r3, [pc, #36]	; (2000005c <input_init+0x4c>)
20000036:	0412      	lsls	r2, r2, #16
20000038:	0c12      	lsrs	r2, r2, #16
2000003a:	601a      	str	r2, [r3, #0]
  *GPIO_D_PUPDR |= 0x00AA0000;
2000003c:	4b07      	ldr	r3, [pc, #28]	; (2000005c <input_init+0x4c>)
2000003e:	681a      	ldr	r2, [r3, #0]
20000040:	4b06      	ldr	r3, [pc, #24]	; (2000005c <input_init+0x4c>)
20000042:	21aa      	movs	r1, #170	; 0xaa
20000044:	0409      	lsls	r1, r1, #16
20000046:	430a      	orrs	r2, r1
20000048:	601a      	str	r2, [r3, #0]
}
2000004a:	46c0      	nop			; (mov r8, r8)
2000004c:	46bd      	mov	sp, r7
2000004e:	bd80      	pop	{r7, pc}
20000050:	40020c00 	andmi	r0, r2, r0, lsl #24
20000054:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000058:	40020c04 	andmi	r0, r2, r4, lsl #24
2000005c:	40020c0c 	andmi	r0, r2, ip, lsl #24

20000060 <kbdActivate>:

void kbdActivate(unsigned int row)
{
20000060:	b580      	push	{r7, lr}
20000062:	b082      	sub	sp, #8
20000064:	af00      	add	r7, sp, #0
20000066:	6078      	str	r0, [r7, #4]
	switch (row) {
20000068:	687b      	ldr	r3, [r7, #4]
2000006a:	2b04      	cmp	r3, #4
2000006c:	d01b      	beq.n	200000a6 <kbdActivate+0x46>
2000006e:	687b      	ldr	r3, [r7, #4]
20000070:	2b04      	cmp	r3, #4
20000072:	d81c      	bhi.n	200000ae <kbdActivate+0x4e>
20000074:	687b      	ldr	r3, [r7, #4]
20000076:	2b03      	cmp	r3, #3
20000078:	d011      	beq.n	2000009e <kbdActivate+0x3e>
2000007a:	687b      	ldr	r3, [r7, #4]
2000007c:	2b03      	cmp	r3, #3
2000007e:	d816      	bhi.n	200000ae <kbdActivate+0x4e>
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	2b01      	cmp	r3, #1
20000084:	d003      	beq.n	2000008e <kbdActivate+0x2e>
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	2b02      	cmp	r3, #2
2000008a:	d004      	beq.n	20000096 <kbdActivate+0x36>
2000008c:	e00f      	b.n	200000ae <kbdActivate+0x4e>
    case 1:
      *GPIO_D_ODR_HIGH = 0x10;
2000008e:	4b0c      	ldr	r3, [pc, #48]	; (200000c0 <kbdActivate+0x60>)
20000090:	2210      	movs	r2, #16
20000092:	701a      	strb	r2, [r3, #0]
      break;
20000094:	e00f      	b.n	200000b6 <kbdActivate+0x56>
    case 2:
      *GPIO_D_ODR_HIGH = 0x20;
20000096:	4b0a      	ldr	r3, [pc, #40]	; (200000c0 <kbdActivate+0x60>)
20000098:	2220      	movs	r2, #32
2000009a:	701a      	strb	r2, [r3, #0]
      break;
2000009c:	e00b      	b.n	200000b6 <kbdActivate+0x56>
    case 3:
      *GPIO_D_ODR_HIGH = 0x40;
2000009e:	4b08      	ldr	r3, [pc, #32]	; (200000c0 <kbdActivate+0x60>)
200000a0:	2240      	movs	r2, #64	; 0x40
200000a2:	701a      	strb	r2, [r3, #0]
      break;
200000a4:	e007      	b.n	200000b6 <kbdActivate+0x56>
    case 4:
      *GPIO_D_ODR_HIGH = 0x80;
200000a6:	4b06      	ldr	r3, [pc, #24]	; (200000c0 <kbdActivate+0x60>)
200000a8:	2280      	movs	r2, #128	; 0x80
200000aa:	701a      	strb	r2, [r3, #0]
      break;
200000ac:	e003      	b.n	200000b6 <kbdActivate+0x56>
    default:
      *GPIO_D_ODR_HIGH = 0;
200000ae:	4b04      	ldr	r3, [pc, #16]	; (200000c0 <kbdActivate+0x60>)
200000b0:	2200      	movs	r2, #0
200000b2:	701a      	strb	r2, [r3, #0]
      break;
200000b4:	46c0      	nop			; (mov r8, r8)
	}
}
200000b6:	46c0      	nop			; (mov r8, r8)
200000b8:	46bd      	mov	sp, r7
200000ba:	b002      	add	sp, #8
200000bc:	bd80      	pop	{r7, pc}
200000be:	46c0      	nop			; (mov r8, r8)
200000c0:	40020c15 	andmi	r0, r2, r5, lsl ip

200000c4 <kbdGetCol>:

int kbdGetCol( void )
{
200000c4:	b580      	push	{r7, lr}
200000c6:	b082      	sub	sp, #8
200000c8:	af00      	add	r7, sp, #0
  unsigned char c;
  c = * GPIO_D_IDR_HIGH;
200000ca:	4a12      	ldr	r2, [pc, #72]	; (20000114 <kbdGetCol+0x50>)
200000cc:	1dfb      	adds	r3, r7, #7
200000ce:	7812      	ldrb	r2, [r2, #0]
200000d0:	701a      	strb	r2, [r3, #0]

  if (c & 8) 
200000d2:	1dfb      	adds	r3, r7, #7
200000d4:	781b      	ldrb	r3, [r3, #0]
200000d6:	2208      	movs	r2, #8
200000d8:	4013      	ands	r3, r2
200000da:	d001      	beq.n	200000e0 <kbdGetCol+0x1c>
    return 4;
200000dc:	2304      	movs	r3, #4
200000de:	e015      	b.n	2000010c <kbdGetCol+0x48>
  if (c & 4)
200000e0:	1dfb      	adds	r3, r7, #7
200000e2:	781b      	ldrb	r3, [r3, #0]
200000e4:	2204      	movs	r2, #4
200000e6:	4013      	ands	r3, r2
200000e8:	d001      	beq.n	200000ee <kbdGetCol+0x2a>
    return 3;
200000ea:	2303      	movs	r3, #3
200000ec:	e00e      	b.n	2000010c <kbdGetCol+0x48>
  if (c & 2)
200000ee:	1dfb      	adds	r3, r7, #7
200000f0:	781b      	ldrb	r3, [r3, #0]
200000f2:	2202      	movs	r2, #2
200000f4:	4013      	ands	r3, r2
200000f6:	d001      	beq.n	200000fc <kbdGetCol+0x38>
    return 2;
200000f8:	2302      	movs	r3, #2
200000fa:	e007      	b.n	2000010c <kbdGetCol+0x48>
  if (c & 1)
200000fc:	1dfb      	adds	r3, r7, #7
200000fe:	781b      	ldrb	r3, [r3, #0]
20000100:	2201      	movs	r2, #1
20000102:	4013      	ands	r3, r2
20000104:	d001      	beq.n	2000010a <kbdGetCol+0x46>
    return 1;
20000106:	2301      	movs	r3, #1
20000108:	e000      	b.n	2000010c <kbdGetCol+0x48>

  return 0;
2000010a:	2300      	movs	r3, #0
}
2000010c:	0018      	movs	r0, r3
2000010e:	46bd      	mov	sp, r7
20000110:	b002      	add	sp, #8
20000112:	bd80      	pop	{r7, pc}
20000114:	40020c11 	andmi	r0, r2, r1, lsl ip

20000118 <keyb>:

unsigned char keyb(void)
{
20000118:	b590      	push	{r4, r7, lr}
2000011a:	b087      	sub	sp, #28
2000011c:	af00      	add	r7, sp, #0
  char key[] = {1, 2, 3, 0xA, 4, 5, 6, 0xB, 7, 8, 9, 0xC, 0xE, 0, 0xF, 0xD};
2000011e:	003b      	movs	r3, r7
20000120:	4a16      	ldr	r2, [pc, #88]	; (2000017c <keyb+0x64>)
20000122:	ca13      	ldmia	r2!, {r0, r1, r4}
20000124:	c313      	stmia	r3!, {r0, r1, r4}
20000126:	6812      	ldr	r2, [r2, #0]
20000128:	601a      	str	r2, [r3, #0]
  int row, col;
  for (row = 1; row <= 4; row++)
2000012a:	2301      	movs	r3, #1
2000012c:	617b      	str	r3, [r7, #20]
2000012e:	e019      	b.n	20000164 <keyb+0x4c>
  {
      kbdActivate(row);
20000130:	697b      	ldr	r3, [r7, #20]
20000132:	0018      	movs	r0, r3
20000134:	f7ff ff94 	bl	20000060 <kbdActivate>
      if (col = kbdGetCol())
20000138:	f7ff ffc4 	bl	200000c4 <kbdGetCol>
2000013c:	0003      	movs	r3, r0
2000013e:	613b      	str	r3, [r7, #16]
20000140:	693b      	ldr	r3, [r7, #16]
20000142:	2b00      	cmp	r3, #0
20000144:	d00b      	beq.n	2000015e <keyb+0x46>
      {
        kbdActivate(0);
20000146:	2000      	movs	r0, #0
20000148:	f7ff ff8a 	bl	20000060 <kbdActivate>
        return key[4 * (row - 1) + (col - 1)];
2000014c:	697b      	ldr	r3, [r7, #20]
2000014e:	3b01      	subs	r3, #1
20000150:	009a      	lsls	r2, r3, #2
20000152:	693b      	ldr	r3, [r7, #16]
20000154:	3b01      	subs	r3, #1
20000156:	18d3      	adds	r3, r2, r3
20000158:	003a      	movs	r2, r7
2000015a:	5cd3      	ldrb	r3, [r2, r3]
2000015c:	e009      	b.n	20000172 <keyb+0x5a>
  for (row = 1; row <= 4; row++)
2000015e:	697b      	ldr	r3, [r7, #20]
20000160:	3301      	adds	r3, #1
20000162:	617b      	str	r3, [r7, #20]
20000164:	697b      	ldr	r3, [r7, #20]
20000166:	2b04      	cmp	r3, #4
20000168:	dde2      	ble.n	20000130 <keyb+0x18>
      }
  }
  kbdActivate(0);
2000016a:	2000      	movs	r0, #0
2000016c:	f7ff ff78 	bl	20000060 <kbdActivate>
  return 0xFF;
20000170:	23ff      	movs	r3, #255	; 0xff
20000172:	0018      	movs	r0, r3
20000174:	46bd      	mov	sp, r7
20000176:	b007      	add	sp, #28
20000178:	bd90      	pop	{r4, r7, pc}
2000017a:	46c0      	nop			; (mov r8, r8)
2000017c:	200001a4 	andcs	r0, r0, r4, lsr #3

20000180 <graphic_initialize>:
#include "display.h"

__attribute__((naked))
void graphic_initialize(void)
{
20000180:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
  __asm volatile (" .HWORD  0xDFF0\n");
  __asm volatile (" BX  LR\n");
}
20000184:	46c0      	nop			; (mov r8, r8)

20000186 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void)
{
20000186:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
  __asm volatile (" .HWORD  0xDFF1\n");
  __asm volatile (" BX  LR\n");
}
2000018a:	46c0      	nop			; (mov r8, r8)

2000018c <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(int x, int y)
{
2000018c:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
  __asm volatile (" .HWORD  0xDFF2\n");
  __asm volatile (" BX  LR\n");
}
20000190:	46c0      	nop			; (mov r8, r8)

20000192 <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y)
{
20000192:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
  __asm volatile (" .HWORD  0xDFF3\n");
  __asm volatile (" BX  LR\n");
20000196:	46c0      	nop			; (mov r8, r8)

20000198 <main>:

void main(void)
{
20000198:	b580      	push	{r7, lr}
2000019a:	af00      	add	r7, sp, #0
}
2000019c:	46c0      	nop			; (mov r8, r8)
2000019e:	46bd      	mov	sp, r7
200001a0:	bd80      	pop	{r7, pc}
200001a2:	0000      	movs	r0, r0
200001a4:	0a030201 	beq	200c09b0 <main+0xc0818>
200001a8:	0b060504 	bleq	201815c0 <main+0x181428>
200001ac:	0c090807 	stceq	8, cr0, [r9], {7}
200001b0:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000180 <graphic_initialize>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000f6 	strdeq	r0, [r0], -r6
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000e80c 	andeq	lr, r0, ip, lsl #16
  14:	0000bd00 	andeq	fp, r0, r0, lsl #26
  18:	00001000 	andeq	r1, r0, r0
  1c:	00017020 	andeq	r7, r1, r0, lsr #32
  20:	00000000 	andeq	r0, r0, r0
  24:	00890200 	addeq	r0, r9, r0, lsl #4
  28:	3b010000 	blcc	40030 <startup-0x1ffbffd0>
  2c:	00006d0f 	andeq	r6, r0, pc, lsl #26
  30:	00011800 	andeq	r1, r1, r0, lsl #16
  34:	00006820 	andeq	r6, r0, r0, lsr #16
  38:	6d9c0100 	ldfvss	f0, [ip]
  3c:	03000000 	movweq	r0, #0
  40:	0079656b 	rsbseq	r6, r9, fp, ror #10
  44:	74083d01 	strvc	r3, [r8], #-3329	; 0xfffff2ff
  48:	02000000 	andeq	r0, r0, #0
  4c:	72035891 	andvc	r5, r3, #9502720	; 0x910000
  50:	0100776f 	tsteq	r0, pc, ror #14
  54:	0092073e 	addseq	r0, r2, lr, lsr r7
  58:	91020000 	mrsls	r0, (UNDEF: 2)
  5c:	6f63036c 	svcvs	0x0063036c
  60:	3e01006c 	cdpcc	0, 0, cr0, cr1, cr12, {3}
  64:	0000920c 	andeq	r9, r0, ip, lsl #4
  68:	68910200 	ldmvs	r1, {r9}
  6c:	08010400 	stmdaeq	r1, {sl}
  70:	0000009a 	muleq	r0, sl, r0
  74:	00008b05 	andeq	r8, r0, r5, lsl #22
  78:	00008400 	andeq	r8, r0, r0, lsl #8
  7c:	00840600 	addeq	r0, r4, r0, lsl #12
  80:	000f0000 	andeq	r0, pc, r0
  84:	7c070404 	cfstrsvc	mvf0, [r7], {4}
  88:	04000000 	streq	r0, [r0], #-0
  8c:	00a30801 	adceq	r0, r3, r1, lsl #16
  90:	04070000 	streq	r0, [r7], #-0
  94:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  98:	00b30800 	adcseq	r0, r3, r0, lsl #16
  9c:	2a010000 	bcs	400a4 <startup-0x1ffbff5c>
  a0:	00009205 	andeq	r9, r0, r5, lsl #4
  a4:	0000c400 	andeq	ip, r0, r0, lsl #8
  a8:	00005420 	andeq	r5, r0, r0, lsr #8
  ac:	c19c0100 	orrsgt	r0, ip, r0, lsl #2
  b0:	03000000 	movweq	r0, #0
  b4:	2c010063 	stccs	0, cr0, [r1], {99}	; 0x63
  b8:	00006d11 	andeq	r6, r0, r1, lsl sp
  bc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
  c0:	008e0900 	addeq	r0, lr, r0, lsl #18
  c4:	15010000 	strne	r0, [r1, #-0]
  c8:	00006006 	andeq	r6, r0, r6
  cc:	00006420 	andeq	r6, r0, r0, lsr #8
  d0:	e79c0100 	ldr	r0, [ip, r0, lsl #2]
  d4:	0a000000 	beq	dc <startup-0x1fffff24>
  d8:	00776f72 	rsbseq	r6, r7, r2, ror pc
  dc:	841f1501 	ldrhi	r1, [pc], #-1281	; e4 <startup-0x1fffff1c>
  e0:	02000000 	andeq	r0, r0, #0
  e4:	0b007491 	bleq	1d330 <startup-0x1ffe2cd0>
  e8:	000000a8 	andeq	r0, r0, r8, lsr #1
  ec:	10060901 	andne	r0, r6, r1, lsl #18
  f0:	50200000 	eorpl	r0, r0, r0
  f4:	01000000 	mrseq	r0, (UNDEF: 0)
  f8:	00ab009c 	umlaleq	r0, fp, ip, r0
  fc:	00040000 	andeq	r0, r4, r0
 100:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 104:	00000104 	andeq	r0, r0, r4, lsl #2
 108:	5a0c0000 	bpl	300110 <startup-0x1fcffef0>
 10c:	bd000001 	stclt	0, cr0, [r0, #-4]
 110:	80000000 	andhi	r0, r0, r0
 114:	18200001 	stmdane	r0!, {r0}
 118:	1b000000 	blne	120 <startup-0x1ffffee0>
 11c:	02000001 	andeq	r0, r0, #1
 120:	00000146 	andeq	r0, r0, r6, asr #2
 124:	92061901 	andls	r1, r6, #16384	; 0x4000
 128:	06200001 	strteq	r0, [r0], -r1
 12c:	01000000 	mrseq	r0, (UNDEF: 0)
 130:	0000549c 	muleq	r0, ip, r4
 134:	00780300 	rsbseq	r0, r8, r0, lsl #6
 138:	541e1901 	ldrpl	r1, [lr], #-2305	; 0xfffff6ff
 13c:	01000000 	mrseq	r0, (UNDEF: 0)
 140:	00790350 	rsbseq	r0, r9, r0, asr r3
 144:	54251901 	strtpl	r1, [r5], #-2305	; 0xfffff6ff
 148:	01000000 	mrseq	r0, (UNDEF: 0)
 14c:	04040051 	streq	r0, [r4], #-81	; 0xffffffaf
 150:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 154:	01210200 			; <UNDEFINED> instruction: 0x01210200
 158:	12010000 	andne	r0, r1, #0
 15c:	00018c06 	andeq	r8, r1, r6, lsl #24
 160:	00000620 	andeq	r0, r0, r0, lsr #12
 164:	8a9c0100 	bhi	fe70056c <main+0xde7003d4>
 168:	03000000 	movweq	r0, #0
 16c:	12010078 	andne	r0, r1, #120	; 0x78
 170:	0000541c 	andeq	r5, r0, ip, lsl r4
 174:	03500100 	cmpeq	r0, #0, 2
 178:	12010079 	andne	r0, r1, #121	; 0x79
 17c:	00005423 	andeq	r5, r0, r3, lsr #8
 180:	00510100 	subseq	r0, r1, r0, lsl #2
 184:	00019505 	andeq	r9, r1, r5, lsl #10
 188:	060b0100 	streq	r0, [fp], -r0, lsl #2
 18c:	20000186 	andcs	r0, r0, r6, lsl #3
 190:	00000006 	andeq	r0, r0, r6
 194:	33059c01 	movwcc	r9, #23553	; 0x5c01
 198:	01000001 	tsteq	r0, r1
 19c:	01800604 	orreq	r0, r0, r4, lsl #12
 1a0:	00062000 	andeq	r2, r6, r0
 1a4:	9c010000 	stcls	0, cr0, [r1], {-0}
 1a8:	00004600 	andeq	r4, r0, r0, lsl #12
 1ac:	36000400 	strcc	r0, [r0], -r0, lsl #8
 1b0:	04000001 	streq	r0, [r0], #-1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	01b20c00 			; <UNDEFINED> instruction: 0x01b20c00
 1bc:	00bd0000 	adcseq	r0, sp, r0
	...
 1c8:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
 1cc:	e7020000 	str	r0, [r2, -r0]
 1d0:	01000001 	tsteq	r0, r1
 1d4:	0198060e 	orrseq	r0, r8, lr, lsl #12
 1d8:	000a2000 	andeq	r2, sl, r0
 1dc:	9c010000 	stcls	0, cr0, [r1], {-0}
 1e0:	0001aa02 	andeq	sl, r1, r2, lsl #20
 1e4:	06060100 	streq	r0, [r6], -r0, lsl #2
 1e8:	20000000 	andcs	r0, r0, r0
 1ec:	0000000c 	andeq	r0, r0, ip
 1f0:	Address 0x00000000000001f0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	13491927 	movtne	r1, #39207	; 0x9927
  24:	06120111 			; <UNDEFINED> instruction: 0x06120111
  28:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  2c:	00130119 	andseq	r0, r3, r9, lsl r1
  30:	00340300 	eorseq	r0, r4, r0, lsl #6
  34:	0b3a0803 	bleq	e82048 <startup-0x1f17dfb8>
  38:	0b390b3b 	bleq	e42d2c <startup-0x1f1bd2d4>
  3c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  40:	24040000 	strcs	r0, [r4], #-0
  44:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  48:	000e030b 	andeq	r0, lr, fp, lsl #6
  4c:	01010500 	tsteq	r1, r0, lsl #10
  50:	13011349 	movwne	r1, #4937	; 0x1349
  54:	21060000 	mrscs	r0, (UNDEF: 6)
  58:	2f134900 	svccs	0x00134900
  5c:	0700000b 	streq	r0, [r0, -fp]
  60:	0b0b0024 	bleq	2c00f8 <startup-0x1fd3ff08>
  64:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  68:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
  6c:	03193f01 	tsteq	r9, #1, 30
  70:	3b0b3a0e 	blcc	2ce8b0 <startup-0x1fd31750>
  74:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  78:	11134919 	tstne	r3, r9, lsl r9
  7c:	40061201 	andmi	r1, r6, r1, lsl #4
  80:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  84:	00001301 	andeq	r1, r0, r1, lsl #6
  88:	3f012e09 	svccc	0x00012e09
  8c:	3a0e0319 	bcc	380cf8 <startup-0x1fc7f308>
  90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  94:	1119270b 	tstne	r9, fp, lsl #14
  98:	40061201 	andmi	r1, r6, r1, lsl #4
  9c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
  a0:	00001301 	andeq	r1, r0, r1, lsl #6
  a4:	0300050a 	movweq	r0, #1290	; 0x50a
  a8:	3b0b3a08 	blcc	2ce8d0 <startup-0x1fd31730>
  ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  b0:	00180213 	andseq	r0, r8, r3, lsl r2
  b4:	002e0b00 	eoreq	r0, lr, r0, lsl #22
  b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  bc:	0b3b0b3a 	bleq	ec2dac <startup-0x1f13d254>
  c0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
  c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
  cc:	00000019 	andeq	r0, r0, r9, lsl r0
  d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  d4:	030b130e 	movweq	r1, #45838	; 0xb30e
  d8:	110e1b0e 	tstne	lr, lr, lsl #22
  dc:	10061201 	andne	r1, r6, r1, lsl #4
  e0:	02000017 	andeq	r0, r0, #23
  e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  e8:	0b3a0e03 	bleq	e838fc <startup-0x1f17c704>
  ec:	0b390b3b 	bleq	e42de0 <startup-0x1f1bd220>
  f0:	01111927 	tsteq	r1, r7, lsr #18
  f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  f8:	01194297 			; <UNDEFINED> instruction: 0x01194297
  fc:	03000013 	movweq	r0, #19
 100:	08030005 	stmdaeq	r3, {r0, r2}
 104:	0b3b0b3a 	bleq	ec2df4 <startup-0x1f13d20c>
 108:	13490b39 	movtne	r0, #39737	; 0x9b39
 10c:	00001802 	andeq	r1, r0, r2, lsl #16
 110:	0b002404 	bleq	9128 <startup-0x1fff6ed8>
 114:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 118:	05000008 	streq	r0, [r0, #-8]
 11c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 120:	0b3a0e03 	bleq	e83934 <startup-0x1f17c6cc>
 124:	0b390b3b 	bleq	e42e18 <startup-0x1f1bd1e8>
 128:	01111927 	tsteq	r1, r7, lsr #18
 12c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 130:	00194297 	mulseq	r9, r7, r2
 134:	11010000 	mrsne	r0, (UNDEF: 1)
 138:	130e2501 	movwne	r2, #58625	; 0xe501
 13c:	1b0e030b 	blne	380d70 <startup-0x1fc7f290>
 140:	1117550e 	tstne	r7, lr, lsl #10
 144:	00171001 	andseq	r1, r7, r1
 148:	002e0200 	eoreq	r0, lr, r0, lsl #4
 14c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 150:	0b3b0b3a 	bleq	ec2e40 <startup-0x1f13d1c0>
 154:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 158:	06120111 			; <UNDEFINED> instruction: 0x06120111
 15c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 160:	00000019 	andeq	r0, r0, r9, lsl r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000170 	andeq	r0, r0, r0, ror r1
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00fa0002 	rscseq	r0, sl, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000180 	andcs	r0, r0, r0, lsl #3
  34:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  40:	00000024 	andeq	r0, r0, r4, lsr #32
  44:	01a90002 			; <UNDEFINED> instruction: 0x01a90002
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000198 	mulcs	r0, r8, r1
  54:	0000000a 	andeq	r0, r0, sl
  58:	20000000 	andcs	r0, r0, r0
  5c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000117 	andeq	r0, r0, r7, lsl r1
   4:	004f0003 	subeq	r0, pc, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	746f622f 	strbtvc	r6, [pc], #-559	; 28 <startup-0x1fffffd8>
  24:	2f656c74 	svccs	0x00656c74
  28:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  2c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  30:	646f632f 	strbtvs	r6, [pc], #-815	; 38 <startup-0x1fffffc8>
  34:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  38:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
  3c:	2f656b61 	svccs	0x00656b61
  40:	6b616e53 	blvs	185b994 <startup-0x1e7a466c>
  44:	74752f65 	ldrbtvc	r2, [r5], #-3941	; 0xfffff09b
  48:	00736c69 	rsbseq	r6, r3, r9, ror #24
  4c:	706e6900 	rsbvc	r6, lr, r0, lsl #18
  50:	632e7475 			; <UNDEFINED> instruction: 0x632e7475
  54:	00000100 	andeq	r0, r0, r0, lsl #2
  58:	00010500 	andeq	r0, r1, r0, lsl #10
  5c:	00100205 	andseq	r0, r0, r5, lsl #4
  60:	09032000 	stmdbeq	r3, {sp}
  64:	32030501 	andcc	r0, r3, #4194304	; 0x400000
  68:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
  6c:	05752f12 	ldrbeq	r2, [r5, #-3858]!	; 0xfffff0ee
  70:	05674b11 	strbeq	r4, [r7, #-2833]!	; 0xfffff4ef
  74:	05af7501 	streq	r7, [pc, #1281]!	; 57d <startup-0x1ffffa83>
  78:	07054b02 	streq	r4, [r5, -r2, lsl #22]
  7c:	18053008 	stmdane	r5, {r3, ip, sp}
  80:	2f070520 	svccs	0x00070520
  84:	20180522 	andscs	r0, r8, r2, lsr #10
  88:	222f0705 	eorcs	r0, pc, #1310720	; 0x140000
  8c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
  90:	05222f07 	streq	r2, [r2, #-3847]!	; 0xfffff0f9
  94:	07052018 	smladeq	r5, r8, r0, r2
  98:	1805222f 	stmdane	r5, {r0, r1, r2, r3, r5, r9, sp}
  9c:	2f070520 	svccs	0x00070520
  a0:	77220105 	strvc	r0, [r2, -r5, lsl #2]!
  a4:	053e0705 	ldreq	r0, [lr, #-1797]!	; 0xfffff8fb
  a8:	09052005 	stmdbeq	r5, {r0, r2, sp}
  ac:	4a06053e 	bmi	1815ac <startup-0x1fe7ea54>
  b0:	05210c05 	streq	r0, [r1, #-3077]!	; 0xfffff3fb
  b4:	06052f09 	streq	r2, [r5], -r9, lsl #30
  b8:	210c054a 	tstcs	ip, sl, asr #10
  bc:	052f0905 	streq	r0, [pc, #-2309]!	; fffff7bf <main+0xdffff627>
  c0:	0c054a06 			; <UNDEFINED> instruction: 0x0c054a06
  c4:	2f090521 	svccs	0x00090521
  c8:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
  cc:	0a05210c 	beq	148504 <startup-0x1feb7afc>
  d0:	21010530 	tstcs	r1, r0, lsr r5
  d4:	3d080569 	cfstr32cc	mvfx0, [r8, #-420]	; 0xfffffe5c
  d8:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
  dc:	07052e03 	streq	r2, [r5, -r3, lsl #28]
  e0:	4b110522 	blmi	441570 <startup-0x1fbbea90>
  e4:	054a0a05 	strbeq	r0, [sl, #-2565]	; 0xfffff5fb
  e8:	1d053e09 	stcne	14, cr3, [r5, #-36]	; 0xffffffdc
  ec:	2e16053d 	mrccs	5, 0, r0, cr6, cr13, {1}
  f0:	05202905 	streq	r2, [r0, #-2309]!	; 0xfffff6fb
  f4:	13052e22 	movwne	r2, #24098	; 0x5e22
  f8:	001e0520 	andseq	r0, lr, r0, lsr #10
  fc:	03020402 	movweq	r0, #9218	; 0x2402
 100:	03053c7a 	movweq	r3, #23674	; 0x5c7a
 104:	01040200 	mrseq	r0, R12_usr
 108:	3c09033c 	stccc	3, cr0, [r9], {60}	; 0x3c
 10c:	053d0a05 	ldreq	r0, [sp, #-2565]!	; 0xfffff5fb
 110:	04020001 	streq	r0, [r2], #-1
 114:	07022101 	streq	r2, [r2, -r1, lsl #2]
 118:	85010100 	strhi	r0, [r1, #-256]	; 0xffffff00
 11c:	03000000 	movweq	r0, #0
 120:	00005100 	andeq	r5, r0, r0, lsl #2
 124:	fb010200 	blx	4092e <startup-0x1ffbf6d2>
 128:	01000d0e 	tsteq	r0, lr, lsl #26
 12c:	00010101 	andeq	r0, r1, r1, lsl #2
 130:	00010000 	andeq	r0, r1, r0
 134:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
 138:	2f656d6f 	svccs	0x00656d6f
 13c:	74746f62 	ldrbtvc	r6, [r4], #-3938	; 0xfffff09e
 140:	632f656c 			; <UNDEFINED> instruction: 0x632f656c
 144:	2f65646f 	svccs	0x0065646f
 148:	2f706f6d 	svccs	0x00706f6d
 14c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 150:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 154:	616e532f 	cmnvs	lr, pc, lsr #6
 158:	532f656b 			; <UNDEFINED> instruction: 0x532f656b
 15c:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 160:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
 164:	0000736c 	andeq	r7, r0, ip, ror #6
 168:	70736964 	rsbsvc	r6, r3, r4, ror #18
 16c:	2e79616c 	rpwcsez	f6, f1, #4.0
 170:	00010063 	andeq	r0, r1, r3, rrx
 174:	01050000 	mrseq	r0, (UNDEF: 5)
 178:	80020500 	andhi	r0, r2, r0, lsl #10
 17c:	16200001 	strtne	r0, [r0], -r1
 180:	13210305 			; <UNDEFINED> instruction: 0x13210305
 184:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 188:	13210305 			; <UNDEFINED> instruction: 0x13210305
 18c:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 190:	13210305 			; <UNDEFINED> instruction: 0x13210305
 194:	24210105 	strtcs	r0, [r1], #-261	; 0xfffffefb
 198:	13210305 			; <UNDEFINED> instruction: 0x13210305
 19c:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
 1a0:	01010001 	tsteq	r1, r1
 1a4:	00000077 	andeq	r0, r0, r7, ror r0
 1a8:	004b0003 	subeq	r0, fp, r3
 1ac:	01020000 	mrseq	r0, (UNDEF: 2)
 1b0:	000d0efb 	strdeq	r0, [sp], -fp
 1b4:	01010101 	tsteq	r1, r1, lsl #2
 1b8:	01000000 	mrseq	r0, (UNDEF: 0)
 1bc:	2f010000 	svccs	0x00010000
 1c0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 1c4:	746f622f 	strbtvc	r6, [pc], #-559	; 1cc <startup-0x1ffffe34>
 1c8:	2f656c74 	svccs	0x00656c74
 1cc:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 1d0:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 1d4:	646f632f 	strbtvs	r6, [pc], #-815	; 1dc <startup-0x1ffffe24>
 1d8:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 1dc:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 1e0:	2f656b61 	svccs	0x00656b61
 1e4:	6b616e53 	blvs	185bb38 <startup-0x1e7a44c8>
 1e8:	73000065 	movwvc	r0, #101	; 0x65
 1ec:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 1f0:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
 1f4:	00000100 	andeq	r0, r0, r0, lsl #2
 1f8:	00010500 	andeq	r0, r1, r0, lsl #10
 1fc:	00000205 	andeq	r0, r0, r5, lsl #4
 200:	13182000 	tstne	r8, #0
 204:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
 208:	01000302 	tsteq	r0, r2, lsl #6
 20c:	00010501 	andeq	r0, r1, r1, lsl #10
 210:	01980205 	orrseq	r0, r8, r5, lsl #4
 214:	0e032000 	cdpeq	0, 0, cr2, cr3, cr0, {0}
 218:	03022f01 	movweq	r2, #12033	; 0x2f01
 21c:	Address 0x000000000000021c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  80:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  84:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
  88:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
  8c:	626b0062 	rsbvs	r0, fp, #98	; 0x62
  90:	74634164 	strbtvc	r4, [r3], #-356	; 0xfffffe9c
  94:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
  98:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
  9c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  a0:	63206465 			; <UNDEFINED> instruction: 0x63206465
  a4:	00726168 	rsbseq	r6, r2, r8, ror #2
  a8:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
  ac:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
  b0:	6b007469 	blvs	1d25c <startup-0x1ffe2da4>
  b4:	65476462 	strbvs	r6, [r7, #-1122]	; 0xfffffb9e
  b8:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; fffffef0 <main+0xdffffd58>
  bc:	6f682f00 	svcvs	0x00682f00
  c0:	622f656d 	eorvs	r6, pc, #457179136	; 0x1b400000
  c4:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
  c8:	6f632f65 	svcvs	0x00632f65
  cc:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; ffffff44 <main+0xdffffdac>
  d0:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
  d4:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
  d8:	2f657469 	svccs	0x00657469
  dc:	6b616e53 	blvs	185ba30 <startup-0x1e7a45d0>
  e0:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
  e4:	00656b61 	rsbeq	r6, r5, r1, ror #22
  e8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 34 <startup-0x1fffffcc>
  ec:	6f622f65 	svcvs	0x00622f65
  f0:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
  f4:	646f632f 	strbtvs	r6, [pc], #-815	; fc <startup-0x1fffff04>
  f8:	6f6d2f65 	svcvs	0x006d2f65
  fc:	6f632f70 	svcvs	0x00632f70
 100:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 104:	532f6574 			; <UNDEFINED> instruction: 0x532f6574
 108:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 10c:	616e532f 	cmnvs	lr, pc, lsr #6
 110:	752f656b 	strvc	r6, [pc, #-1387]!	; fffffbad <main+0xdffffa15>
 114:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
 118:	706e692f 	rsbvc	r6, lr, pc, lsr #18
 11c:	632e7475 			; <UNDEFINED> instruction: 0x632e7475
 120:	61726700 	cmnvs	r2, r0, lsl #14
 124:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 128:	7869705f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
 12c:	735f6c65 	cmpvc	pc, #25856	; 0x6500
 130:	67007465 	strvs	r7, [r0, -r5, ror #8]
 134:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 138:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
 13c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
 140:	7a696c61 	bvc	1a5b2cc <startup-0x1e5a4d34>
 144:	72670065 	rsbvc	r0, r7, #101	; 0x65
 148:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 14c:	69705f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 150:	5f6c6578 	svcpl	0x006c6578
 154:	61656c63 	cmnvs	r5, r3, ror #24
 158:	682f0072 	stmdavs	pc!, {r1, r4, r5, r6}	; <UNPREDICTABLE>
 15c:	2f656d6f 	svccs	0x00656d6f
 160:	74746f62 	ldrbtvc	r6, [r4], #-3938	; 0xfffff09e
 164:	632f656c 			; <UNDEFINED> instruction: 0x632f656c
 168:	2f65646f 	svccs	0x0065646f
 16c:	2f706f6d 	svccs	0x00706f6d
 170:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 174:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 178:	616e532f 	cmnvs	lr, pc, lsr #6
 17c:	532f656b 			; <UNDEFINED> instruction: 0x532f656b
 180:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 184:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
 188:	642f736c 	strtvs	r7, [pc], #-876	; 190 <startup-0x1ffffe70>
 18c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 190:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 194:	61726700 	cmnvs	r2, r0, lsl #14
 198:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 19c:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 1a0:	735f7261 	cmpvc	pc, #268435462	; 0x10000006
 1a4:	65657263 	strbvs	r7, [r5, #-611]!	; 0xfffffd9d
 1a8:	7473006e 	ldrbtvc	r0, [r3], #-110	; 0xffffff92
 1ac:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 1b0:	682f0070 	stmdavs	pc!, {r4, r5, r6}	; <UNPREDICTABLE>
 1b4:	2f656d6f 	svccs	0x00656d6f
 1b8:	74746f62 	ldrbtvc	r6, [r4], #-3938	; 0xfffff09e
 1bc:	632f656c 			; <UNDEFINED> instruction: 0x632f656c
 1c0:	2f65646f 	svccs	0x0065646f
 1c4:	2f706f6d 	svccs	0x00706f6d
 1c8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 1cc:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 1d0:	616e532f 	cmnvs	lr, pc, lsr #6
 1d4:	532f656b 			; <UNDEFINED> instruction: 0x532f656b
 1d8:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 1dc:	6174732f 	cmnvs	r4, pc, lsr #6
 1e0:	70757472 	rsbsvc	r7, r5, r2, ror r4
 1e4:	6d00632e 	stcvs	3, cr6, [r0, #-184]	; 0xffffff48
 1e8:	006e6961 	rsbeq	r6, lr, r1, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	00000018 	andeq	r0, r0, r8, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000050 	andeq	r0, r0, r0, asr r0
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0000070d 	andeq	r0, r0, sp, lsl #14
  2c:	0000001c 	andeq	r0, r0, ip, lsl r0
  30:	00000000 	andeq	r0, r0, r0
  34:	20000060 	andcs	r0, r0, r0, rrx
  38:	00000064 	andeq	r0, r0, r4, rrx
  3c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  40:	41018e02 	tstmi	r1, r2, lsl #28
  44:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  48:	00000007 	andeq	r0, r0, r7
  4c:	0000001c 	andeq	r0, r0, ip, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	200000c4 	andcs	r0, r0, r4, asr #1
  58:	00000054 	andeq	r0, r0, r4, asr r0
  5c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  60:	41018e02 	tstmi	r1, r2, lsl #28
  64:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  68:	00000007 	andeq	r0, r0, r7
  6c:	0000001c 	andeq	r0, r0, ip, lsl r0
  70:	00000000 	andeq	r0, r0, r0
  74:	20000118 	andcs	r0, r0, r8, lsl r1
  78:	00000068 	andeq	r0, r0, r8, rrx
  7c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  80:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  84:	280e4101 	stmdacs	lr, {r0, r8, lr}
  88:	00070d41 	andeq	r0, r7, r1, asr #26
  8c:	0000000c 	andeq	r0, r0, ip
  90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  94:	7c020001 	stcvc	0, cr0, [r2], {1}
  98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  9c:	0000000c 	andeq	r0, r0, ip
  a0:	0000008c 	andeq	r0, r0, ip, lsl #1
  a4:	20000180 	andcs	r0, r0, r0, lsl #3
  a8:	00000006 	andeq	r0, r0, r6
  ac:	0000000c 	andeq	r0, r0, ip
  b0:	0000008c 	andeq	r0, r0, ip, lsl #1
  b4:	20000186 	andcs	r0, r0, r6, lsl #3
  b8:	00000006 	andeq	r0, r0, r6
  bc:	0000000c 	andeq	r0, r0, ip
  c0:	0000008c 	andeq	r0, r0, ip, lsl #1
  c4:	2000018c 	andcs	r0, r0, ip, lsl #3
  c8:	00000006 	andeq	r0, r0, r6
  cc:	0000000c 	andeq	r0, r0, ip
  d0:	0000008c 	andeq	r0, r0, ip, lsl #1
  d4:	20000192 	mulcs	r0, r2, r1
  d8:	00000006 	andeq	r0, r0, r6
  dc:	0000000c 	andeq	r0, r0, ip
  e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  e4:	7c020001 	stcvc	0, cr0, [r2], {1}
  e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  ec:	0000000c 	andeq	r0, r0, ip
  f0:	000000dc 	ldrdeq	r0, [r0], -ip
  f4:	20000000 	andcs	r0, r0, r0
  f8:	0000000c 	andeq	r0, r0, ip
  fc:	00000018 	andeq	r0, r0, r8, lsl r0
 100:	000000dc 	ldrdeq	r0, [r0], -ip
 104:	20000198 	mulcs	r0, r8, r1
 108:	0000000a 	andeq	r0, r0, sl
 10c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 110:	41018e02 	tstmi	r1, r2, lsl #28
 114:	0000070d 	andeq	r0, r0, sp, lsl #14

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000198 	mulcs	r0, r8, r1
   4:	200001a2 	andcs	r0, r0, r2, lsr #3
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
