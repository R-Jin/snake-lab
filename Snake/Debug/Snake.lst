
Debug/Snake:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#include "./structs/snake.h"

__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 faac 	bl	20000560 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <graphic_initialize>:
#include "display.h"

__attribute__((naked))
void graphic_initialize(void)
{
20000010:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
  __asm volatile (" .HWORD  0xDFF0\n");
  __asm volatile (" BX  LR\n");
}
20000014:	46c0      	nop			; (mov r8, r8)

20000016 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void)
{
20000016:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
  __asm volatile (" .HWORD  0xDFF1\n");
  __asm volatile (" BX  LR\n");
}
2000001a:	46c0      	nop			; (mov r8, r8)

2000001c <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(int x, int y)
{
2000001c:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
  __asm volatile (" .HWORD  0xDFF2\n");
  __asm volatile (" BX  LR\n");
}
20000020:	46c0      	nop			; (mov r8, r8)

20000022 <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y)
{
20000022:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
  __asm volatile (" .HWORD  0xDFF3\n");
  __asm volatile (" BX  LR\n");
20000026:	46c0      	nop			; (mov r8, r8)

20000028 <input_init>:
#define GPIO_D_ODR      ((unsigned short *) (GPIO_D_BASE + 0x14))
#define GPIO_D_ODR_HIGH ((unsigned char *) (GPIO_D_BASE + 0x15))
#define GPIO_D_IDR_HIGH ((unsigned char *) (GPIO_D_BASE + 0x11))

void input_init(void)
{
20000028:	b580      	push	{r7, lr}
2000002a:	af00      	add	r7, sp, #0
  /* starta klockor port D och E */
//   *((unsigned long *) 0x40023830) = 0x18;

  *GPIO_D_MODER = 0x55005555;
2000002c:	4b0e      	ldr	r3, [pc, #56]	; (20000068 <input_init+0x40>)
2000002e:	4a0f      	ldr	r2, [pc, #60]	; (2000006c <input_init+0x44>)
20000030:	601a      	str	r2, [r3, #0]
  *GPIO_D_OTYPER &= 0xFFFF00FF;
20000032:	4b0f      	ldr	r3, [pc, #60]	; (20000070 <input_init+0x48>)
20000034:	881b      	ldrh	r3, [r3, #0]
20000036:	4a0e      	ldr	r2, [pc, #56]	; (20000070 <input_init+0x48>)
20000038:	21ff      	movs	r1, #255	; 0xff
2000003a:	400b      	ands	r3, r1
2000003c:	b29b      	uxth	r3, r3
2000003e:	8013      	strh	r3, [r2, #0]
  *GPIO_D_OTYPER |= 0x0000;
20000040:	4a0b      	ldr	r2, [pc, #44]	; (20000070 <input_init+0x48>)
20000042:	4b0b      	ldr	r3, [pc, #44]	; (20000070 <input_init+0x48>)
20000044:	8812      	ldrh	r2, [r2, #0]
20000046:	801a      	strh	r2, [r3, #0]
  *GPIO_D_PUPDR &= 0x0000FFFF;
20000048:	4b0a      	ldr	r3, [pc, #40]	; (20000074 <input_init+0x4c>)
2000004a:	681a      	ldr	r2, [r3, #0]
2000004c:	4b09      	ldr	r3, [pc, #36]	; (20000074 <input_init+0x4c>)
2000004e:	0412      	lsls	r2, r2, #16
20000050:	0c12      	lsrs	r2, r2, #16
20000052:	601a      	str	r2, [r3, #0]
  *GPIO_D_PUPDR |= 0x00AA0000;
20000054:	4b07      	ldr	r3, [pc, #28]	; (20000074 <input_init+0x4c>)
20000056:	681a      	ldr	r2, [r3, #0]
20000058:	4b06      	ldr	r3, [pc, #24]	; (20000074 <input_init+0x4c>)
2000005a:	21aa      	movs	r1, #170	; 0xaa
2000005c:	0409      	lsls	r1, r1, #16
2000005e:	430a      	orrs	r2, r1
20000060:	601a      	str	r2, [r3, #0]
}
20000062:	46c0      	nop			; (mov r8, r8)
20000064:	46bd      	mov	sp, r7
20000066:	bd80      	pop	{r7, pc}
20000068:	40020c00 	andmi	r0, r2, r0, lsl #24
2000006c:	55005555 	strpl	r5, [r0, #-1365]	; 0xfffffaab
20000070:	40020c04 	andmi	r0, r2, r4, lsl #24
20000074:	40020c0c 	andmi	r0, r2, ip, lsl #24

20000078 <kbdActivate>:

void kbdActivate(unsigned int row)
{
20000078:	b580      	push	{r7, lr}
2000007a:	b082      	sub	sp, #8
2000007c:	af00      	add	r7, sp, #0
2000007e:	6078      	str	r0, [r7, #4]
	switch (row) {
20000080:	687b      	ldr	r3, [r7, #4]
20000082:	2b04      	cmp	r3, #4
20000084:	d01b      	beq.n	200000be <kbdActivate+0x46>
20000086:	687b      	ldr	r3, [r7, #4]
20000088:	2b04      	cmp	r3, #4
2000008a:	d81c      	bhi.n	200000c6 <kbdActivate+0x4e>
2000008c:	687b      	ldr	r3, [r7, #4]
2000008e:	2b03      	cmp	r3, #3
20000090:	d011      	beq.n	200000b6 <kbdActivate+0x3e>
20000092:	687b      	ldr	r3, [r7, #4]
20000094:	2b03      	cmp	r3, #3
20000096:	d816      	bhi.n	200000c6 <kbdActivate+0x4e>
20000098:	687b      	ldr	r3, [r7, #4]
2000009a:	2b01      	cmp	r3, #1
2000009c:	d003      	beq.n	200000a6 <kbdActivate+0x2e>
2000009e:	687b      	ldr	r3, [r7, #4]
200000a0:	2b02      	cmp	r3, #2
200000a2:	d004      	beq.n	200000ae <kbdActivate+0x36>
200000a4:	e00f      	b.n	200000c6 <kbdActivate+0x4e>
    case 1:
      *GPIO_D_ODR_HIGH = 0x10;
200000a6:	4b0c      	ldr	r3, [pc, #48]	; (200000d8 <kbdActivate+0x60>)
200000a8:	2210      	movs	r2, #16
200000aa:	701a      	strb	r2, [r3, #0]
      break;
200000ac:	e00f      	b.n	200000ce <kbdActivate+0x56>
    case 2:
      *GPIO_D_ODR_HIGH = 0x20;
200000ae:	4b0a      	ldr	r3, [pc, #40]	; (200000d8 <kbdActivate+0x60>)
200000b0:	2220      	movs	r2, #32
200000b2:	701a      	strb	r2, [r3, #0]
      break;
200000b4:	e00b      	b.n	200000ce <kbdActivate+0x56>
    case 3:
      *GPIO_D_ODR_HIGH = 0x40;
200000b6:	4b08      	ldr	r3, [pc, #32]	; (200000d8 <kbdActivate+0x60>)
200000b8:	2240      	movs	r2, #64	; 0x40
200000ba:	701a      	strb	r2, [r3, #0]
      break;
200000bc:	e007      	b.n	200000ce <kbdActivate+0x56>
    case 4:
      *GPIO_D_ODR_HIGH = 0x80;
200000be:	4b06      	ldr	r3, [pc, #24]	; (200000d8 <kbdActivate+0x60>)
200000c0:	2280      	movs	r2, #128	; 0x80
200000c2:	701a      	strb	r2, [r3, #0]
      break;
200000c4:	e003      	b.n	200000ce <kbdActivate+0x56>
    default:
      *GPIO_D_ODR_HIGH = 0;
200000c6:	4b04      	ldr	r3, [pc, #16]	; (200000d8 <kbdActivate+0x60>)
200000c8:	2200      	movs	r2, #0
200000ca:	701a      	strb	r2, [r3, #0]
      break;
200000cc:	46c0      	nop			; (mov r8, r8)
	}
}
200000ce:	46c0      	nop			; (mov r8, r8)
200000d0:	46bd      	mov	sp, r7
200000d2:	b002      	add	sp, #8
200000d4:	bd80      	pop	{r7, pc}
200000d6:	46c0      	nop			; (mov r8, r8)
200000d8:	40020c15 	andmi	r0, r2, r5, lsl ip

200000dc <kbdGetCol>:

int kbdGetCol( void )
{
200000dc:	b580      	push	{r7, lr}
200000de:	b082      	sub	sp, #8
200000e0:	af00      	add	r7, sp, #0
  unsigned char c;
  c = * GPIO_D_IDR_HIGH;
200000e2:	4a12      	ldr	r2, [pc, #72]	; (2000012c <kbdGetCol+0x50>)
200000e4:	1dfb      	adds	r3, r7, #7
200000e6:	7812      	ldrb	r2, [r2, #0]
200000e8:	701a      	strb	r2, [r3, #0]

  if (c & 8) 
200000ea:	1dfb      	adds	r3, r7, #7
200000ec:	781b      	ldrb	r3, [r3, #0]
200000ee:	2208      	movs	r2, #8
200000f0:	4013      	ands	r3, r2
200000f2:	d001      	beq.n	200000f8 <kbdGetCol+0x1c>
    return 4;
200000f4:	2304      	movs	r3, #4
200000f6:	e015      	b.n	20000124 <kbdGetCol+0x48>
  if (c & 4)
200000f8:	1dfb      	adds	r3, r7, #7
200000fa:	781b      	ldrb	r3, [r3, #0]
200000fc:	2204      	movs	r2, #4
200000fe:	4013      	ands	r3, r2
20000100:	d001      	beq.n	20000106 <kbdGetCol+0x2a>
    return 3;
20000102:	2303      	movs	r3, #3
20000104:	e00e      	b.n	20000124 <kbdGetCol+0x48>
  if (c & 2)
20000106:	1dfb      	adds	r3, r7, #7
20000108:	781b      	ldrb	r3, [r3, #0]
2000010a:	2202      	movs	r2, #2
2000010c:	4013      	ands	r3, r2
2000010e:	d001      	beq.n	20000114 <kbdGetCol+0x38>
    return 2;
20000110:	2302      	movs	r3, #2
20000112:	e007      	b.n	20000124 <kbdGetCol+0x48>
  if (c & 1)
20000114:	1dfb      	adds	r3, r7, #7
20000116:	781b      	ldrb	r3, [r3, #0]
20000118:	2201      	movs	r2, #1
2000011a:	4013      	ands	r3, r2
2000011c:	d001      	beq.n	20000122 <kbdGetCol+0x46>
    return 1;
2000011e:	2301      	movs	r3, #1
20000120:	e000      	b.n	20000124 <kbdGetCol+0x48>

  return 0;
20000122:	2300      	movs	r3, #0
}
20000124:	0018      	movs	r0, r3
20000126:	46bd      	mov	sp, r7
20000128:	b002      	add	sp, #8
2000012a:	bd80      	pop	{r7, pc}
2000012c:	40020c11 	andmi	r0, r2, r1, lsl ip

20000130 <keyb>:

unsigned char keyb(void)
{
20000130:	b590      	push	{r4, r7, lr}
20000132:	b087      	sub	sp, #28
20000134:	af00      	add	r7, sp, #0
  char key[] = {1, 2, 3, 0xA, 4, 5, 6, 0xB, 7, 8, 9, 0xC, 0xE, 0, 0xF, 0xD};
20000136:	003b      	movs	r3, r7
20000138:	4a16      	ldr	r2, [pc, #88]	; (20000194 <keyb+0x64>)
2000013a:	ca13      	ldmia	r2!, {r0, r1, r4}
2000013c:	c313      	stmia	r3!, {r0, r1, r4}
2000013e:	6812      	ldr	r2, [r2, #0]
20000140:	601a      	str	r2, [r3, #0]
  int row, col;
  for (row = 1; row <= 4; row++)
20000142:	2301      	movs	r3, #1
20000144:	617b      	str	r3, [r7, #20]
20000146:	e019      	b.n	2000017c <keyb+0x4c>
  {
      kbdActivate(row);
20000148:	697b      	ldr	r3, [r7, #20]
2000014a:	0018      	movs	r0, r3
2000014c:	f7ff ff94 	bl	20000078 <kbdActivate>
      if (col = kbdGetCol())
20000150:	f7ff ffc4 	bl	200000dc <kbdGetCol>
20000154:	0003      	movs	r3, r0
20000156:	613b      	str	r3, [r7, #16]
20000158:	693b      	ldr	r3, [r7, #16]
2000015a:	2b00      	cmp	r3, #0
2000015c:	d00b      	beq.n	20000176 <keyb+0x46>
      {
        kbdActivate(0);
2000015e:	2000      	movs	r0, #0
20000160:	f7ff ff8a 	bl	20000078 <kbdActivate>
        return key[4 * (row - 1) + (col - 1)];
20000164:	697b      	ldr	r3, [r7, #20]
20000166:	3b01      	subs	r3, #1
20000168:	009a      	lsls	r2, r3, #2
2000016a:	693b      	ldr	r3, [r7, #16]
2000016c:	3b01      	subs	r3, #1
2000016e:	18d3      	adds	r3, r2, r3
20000170:	003a      	movs	r2, r7
20000172:	5cd3      	ldrb	r3, [r2, r3]
20000174:	e009      	b.n	2000018a <keyb+0x5a>
  for (row = 1; row <= 4; row++)
20000176:	697b      	ldr	r3, [r7, #20]
20000178:	3301      	adds	r3, #1
2000017a:	617b      	str	r3, [r7, #20]
2000017c:	697b      	ldr	r3, [r7, #20]
2000017e:	2b04      	cmp	r3, #4
20000180:	dde2      	ble.n	20000148 <keyb+0x18>
      }
  }
  kbdActivate(0);
20000182:	2000      	movs	r0, #0
20000184:	f7ff ff78 	bl	20000078 <kbdActivate>
  return 0xFF;
20000188:	23ff      	movs	r3, #255	; 0xff
2000018a:	0018      	movs	r0, r3
2000018c:	46bd      	mov	sp, r7
2000018e:	b007      	add	sp, #28
20000190:	bd90      	pop	{r4, r7, pc}
20000192:	46c0      	nop			; (mov r8, r8)
20000194:	20000b20 	andcs	r0, r0, r0, lsr #22

20000198 <draw_sprite>:
#include "sprite.h"

void draw_sprite(POBJECT o)
{
20000198:	b580      	push	{r7, lr}
2000019a:	b084      	sub	sp, #16
2000019c:	af00      	add	r7, sp, #0
2000019e:	6078      	str	r0, [r7, #4]
  for (int i = 0; i < o -> geo -> numpoints; i++)
200001a0:	2300      	movs	r3, #0
200001a2:	60fb      	str	r3, [r7, #12]
200001a4:	e021      	b.n	200001ea <draw_sprite+0x52>
  {
    graphic_pixel_set(o -> geo -> px[i].x + o -> posx * 8 + 1, o -> geo -> px[i].y + o -> posy * 8 + 1);
200001a6:	687b      	ldr	r3, [r7, #4]
200001a8:	681a      	ldr	r2, [r3, #0]
200001aa:	68fb      	ldr	r3, [r7, #12]
200001ac:	3304      	adds	r3, #4
200001ae:	005b      	lsls	r3, r3, #1
200001b0:	18d3      	adds	r3, r2, r3
200001b2:	3304      	adds	r3, #4
200001b4:	781b      	ldrb	r3, [r3, #0]
200001b6:	001a      	movs	r2, r3
200001b8:	687b      	ldr	r3, [r7, #4]
200001ba:	685b      	ldr	r3, [r3, #4]
200001bc:	00db      	lsls	r3, r3, #3
200001be:	18d3      	adds	r3, r2, r3
200001c0:	1c58      	adds	r0, r3, #1
200001c2:	687b      	ldr	r3, [r7, #4]
200001c4:	681a      	ldr	r2, [r3, #0]
200001c6:	68fb      	ldr	r3, [r7, #12]
200001c8:	3304      	adds	r3, #4
200001ca:	005b      	lsls	r3, r3, #1
200001cc:	18d3      	adds	r3, r2, r3
200001ce:	3305      	adds	r3, #5
200001d0:	781b      	ldrb	r3, [r3, #0]
200001d2:	001a      	movs	r2, r3
200001d4:	687b      	ldr	r3, [r7, #4]
200001d6:	689b      	ldr	r3, [r3, #8]
200001d8:	00db      	lsls	r3, r3, #3
200001da:	18d3      	adds	r3, r2, r3
200001dc:	3301      	adds	r3, #1
200001de:	0019      	movs	r1, r3
200001e0:	f7ff ff1c 	bl	2000001c <graphic_pixel_set>
  for (int i = 0; i < o -> geo -> numpoints; i++)
200001e4:	68fb      	ldr	r3, [r7, #12]
200001e6:	3301      	adds	r3, #1
200001e8:	60fb      	str	r3, [r7, #12]
200001ea:	687b      	ldr	r3, [r7, #4]
200001ec:	681b      	ldr	r3, [r3, #0]
200001ee:	681b      	ldr	r3, [r3, #0]
200001f0:	68fa      	ldr	r2, [r7, #12]
200001f2:	429a      	cmp	r2, r3
200001f4:	dbd7      	blt.n	200001a6 <draw_sprite+0xe>
  }
}
200001f6:	46c0      	nop			; (mov r8, r8)
200001f8:	46c0      	nop			; (mov r8, r8)
200001fa:	46bd      	mov	sp, r7
200001fc:	b004      	add	sp, #16
200001fe:	bd80      	pop	{r7, pc}

20000200 <clear_sprite>:

void clear_sprite(POBJECT o)
{
20000200:	b580      	push	{r7, lr}
20000202:	b084      	sub	sp, #16
20000204:	af00      	add	r7, sp, #0
20000206:	6078      	str	r0, [r7, #4]
  for (int i = 0; i < o -> geo -> numpoints; i++)
20000208:	2300      	movs	r3, #0
2000020a:	60fb      	str	r3, [r7, #12]
2000020c:	e021      	b.n	20000252 <clear_sprite+0x52>
  {
    graphic_pixel_clear(o -> geo -> px[i].x + o -> posx * 8 + 1, o -> geo -> px[i].y + o -> posy * 8 + 1);
2000020e:	687b      	ldr	r3, [r7, #4]
20000210:	681a      	ldr	r2, [r3, #0]
20000212:	68fb      	ldr	r3, [r7, #12]
20000214:	3304      	adds	r3, #4
20000216:	005b      	lsls	r3, r3, #1
20000218:	18d3      	adds	r3, r2, r3
2000021a:	3304      	adds	r3, #4
2000021c:	781b      	ldrb	r3, [r3, #0]
2000021e:	001a      	movs	r2, r3
20000220:	687b      	ldr	r3, [r7, #4]
20000222:	685b      	ldr	r3, [r3, #4]
20000224:	00db      	lsls	r3, r3, #3
20000226:	18d3      	adds	r3, r2, r3
20000228:	1c58      	adds	r0, r3, #1
2000022a:	687b      	ldr	r3, [r7, #4]
2000022c:	681a      	ldr	r2, [r3, #0]
2000022e:	68fb      	ldr	r3, [r7, #12]
20000230:	3304      	adds	r3, #4
20000232:	005b      	lsls	r3, r3, #1
20000234:	18d3      	adds	r3, r2, r3
20000236:	3305      	adds	r3, #5
20000238:	781b      	ldrb	r3, [r3, #0]
2000023a:	001a      	movs	r2, r3
2000023c:	687b      	ldr	r3, [r7, #4]
2000023e:	689b      	ldr	r3, [r3, #8]
20000240:	00db      	lsls	r3, r3, #3
20000242:	18d3      	adds	r3, r2, r3
20000244:	3301      	adds	r3, #1
20000246:	0019      	movs	r1, r3
20000248:	f7ff feeb 	bl	20000022 <graphic_pixel_clear>
  for (int i = 0; i < o -> geo -> numpoints; i++)
2000024c:	68fb      	ldr	r3, [r7, #12]
2000024e:	3301      	adds	r3, #1
20000250:	60fb      	str	r3, [r7, #12]
20000252:	687b      	ldr	r3, [r7, #4]
20000254:	681b      	ldr	r3, [r3, #0]
20000256:	681b      	ldr	r3, [r3, #0]
20000258:	68fa      	ldr	r2, [r7, #12]
2000025a:	429a      	cmp	r2, r3
2000025c:	dbd7      	blt.n	2000020e <clear_sprite+0xe>
  }
2000025e:	46c0      	nop			; (mov r8, r8)
20000260:	46c0      	nop			; (mov r8, r8)
20000262:	46bd      	mov	sp, r7
20000264:	b004      	add	sp, #16
20000266:	bd80      	pop	{r7, pc}

20000268 <delay_250ns>:
#define STK_CTRL        ((unsigned long *) (STK_BASE))
#define STK_LOAD        ((unsigned long *) (STK_BASE + 4))
#define STK_VAL         ((unsigned long *) (STK_BASE + 8))

void delay_250ns( void )
{
20000268:	b580      	push	{r7, lr}
2000026a:	af00      	add	r7, sp, #0
  *STK_CTRL = 0;
2000026c:	4b0c      	ldr	r3, [pc, #48]	; (200002a0 <delay_250ns+0x38>)
2000026e:	2200      	movs	r2, #0
20000270:	601a      	str	r2, [r3, #0]
  *STK_LOAD = ((168 / 4) - 1);
20000272:	4b0c      	ldr	r3, [pc, #48]	; (200002a4 <delay_250ns+0x3c>)
20000274:	2229      	movs	r2, #41	; 0x29
20000276:	601a      	str	r2, [r3, #0]
  *STK_VAL = 0;
20000278:	4b0b      	ldr	r3, [pc, #44]	; (200002a8 <delay_250ns+0x40>)
2000027a:	2200      	movs	r2, #0
2000027c:	601a      	str	r2, [r3, #0]
  *STK_CTRL = 5;
2000027e:	4b08      	ldr	r3, [pc, #32]	; (200002a0 <delay_250ns+0x38>)
20000280:	2205      	movs	r2, #5
20000282:	601a      	str	r2, [r3, #0]
  while ((*STK_CTRL & 0x10000) == 0);
20000284:	46c0      	nop			; (mov r8, r8)
20000286:	4b06      	ldr	r3, [pc, #24]	; (200002a0 <delay_250ns+0x38>)
20000288:	681a      	ldr	r2, [r3, #0]
2000028a:	2380      	movs	r3, #128	; 0x80
2000028c:	025b      	lsls	r3, r3, #9
2000028e:	4013      	ands	r3, r2
20000290:	d0f9      	beq.n	20000286 <delay_250ns+0x1e>
  *STK_CTRL = 0;
20000292:	4b03      	ldr	r3, [pc, #12]	; (200002a0 <delay_250ns+0x38>)
20000294:	2200      	movs	r2, #0
20000296:	601a      	str	r2, [r3, #0]
}
20000298:	46c0      	nop			; (mov r8, r8)
2000029a:	46bd      	mov	sp, r7
2000029c:	bd80      	pop	{r7, pc}
2000029e:	46c0      	nop			; (mov r8, r8)
200002a0:	e000e010 	and	lr, r0, r0, lsl r0
200002a4:	e000e014 	and	lr, r0, r4, lsl r0
200002a8:	e000e018 	and	lr, r0, r8, lsl r0

200002ac <delay_mikro>:

void delay_mikro( unsigned int us )
{
200002ac:	b580      	push	{r7, lr}
200002ae:	b082      	sub	sp, #8
200002b0:	af00      	add	r7, sp, #0
200002b2:	6078      	str	r0, [r7, #4]
#ifdef SIMULATOR
  us = us / 1000;
200002b4:	687b      	ldr	r3, [r7, #4]
200002b6:	22fa      	movs	r2, #250	; 0xfa
200002b8:	0091      	lsls	r1, r2, #2
200002ba:	0018      	movs	r0, r3
200002bc:	f000 f9b0 	bl	20000620 <__udivsi3>
200002c0:	0003      	movs	r3, r0
200002c2:	607b      	str	r3, [r7, #4]
  us++;
200002c4:	687b      	ldr	r3, [r7, #4]
200002c6:	3301      	adds	r3, #1
200002c8:	607b      	str	r3, [r7, #4]
#endif
  while (us > 0)
200002ca:	e00a      	b.n	200002e2 <delay_mikro+0x36>
  {
    delay_250ns();
200002cc:	f7ff ffcc 	bl	20000268 <delay_250ns>
    delay_250ns();
200002d0:	f7ff ffca 	bl	20000268 <delay_250ns>
    delay_250ns();
200002d4:	f7ff ffc8 	bl	20000268 <delay_250ns>
    delay_250ns();
200002d8:	f7ff ffc6 	bl	20000268 <delay_250ns>
    us--;
200002dc:	687b      	ldr	r3, [r7, #4]
200002de:	3b01      	subs	r3, #1
200002e0:	607b      	str	r3, [r7, #4]
  while (us > 0)
200002e2:	687b      	ldr	r3, [r7, #4]
200002e4:	2b00      	cmp	r3, #0
200002e6:	d1f1      	bne.n	200002cc <delay_mikro+0x20>
  }
}
200002e8:	46c0      	nop			; (mov r8, r8)
200002ea:	46c0      	nop			; (mov r8, r8)
200002ec:	46bd      	mov	sp, r7
200002ee:	b002      	add	sp, #8
200002f0:	bd80      	pop	{r7, pc}

200002f2 <delay_milli>:

void delay_milli(unsigned int ms )
{
200002f2:	b580      	push	{r7, lr}
200002f4:	b082      	sub	sp, #8
200002f6:	af00      	add	r7, sp, #0
200002f8:	6078      	str	r0, [r7, #4]
  while (ms > 0)
200002fa:	e007      	b.n	2000030c <delay_milli+0x1a>
  {
    delay_mikro(1000);
200002fc:	23fa      	movs	r3, #250	; 0xfa
200002fe:	009b      	lsls	r3, r3, #2
20000300:	0018      	movs	r0, r3
20000302:	f7ff ffd3 	bl	200002ac <delay_mikro>
    ms--;
20000306:	687b      	ldr	r3, [r7, #4]
20000308:	3b01      	subs	r3, #1
2000030a:	607b      	str	r3, [r7, #4]
  while (ms > 0)
2000030c:	687b      	ldr	r3, [r7, #4]
2000030e:	2b00      	cmp	r3, #0
20000310:	d1f4      	bne.n	200002fc <delay_milli+0xa>
  }
20000312:	46c0      	nop			; (mov r8, r8)
20000314:	46c0      	nop			; (mov r8, r8)
20000316:	46bd      	mov	sp, r7
20000318:	b002      	add	sp, #8
2000031a:	bd80      	pop	{r7, pc}

2000031c <move_snake>:
        {0,0}, {0,1}, {0,2}, {0,3}, {0,4}, {0,5}, {0,6}, {0,7}, {1,0}, {1,1}, {1,2}, {1,3}, {1,4}, {1,5}, {1,6}, {1,7}, {2,0}, {2,1}, {2,2}, {2,3}, {2,4}, {2,5}, {2,6}, {2,7}, {3,0}, {3,1}, {3,2}, {3,3}, {3,4}, {3,5}, {3,6}, {3,7}, {4,0}, {4,1}, {4,2}, {4,3}, {4,4}, {4,5}, {4,6}, {4,7}, {5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {5,5}, {5,6}, {5,7}, {6,0}, {6,1}, {6,2}, {6,3}, {6,4}, {6,5}, {6,6}, {6,7}, {7,0}, {7,1}, {7,2}, {7,3}, {7,4}, {7,5}, {7,6}, {7,7}
    } 
};

void move_snake(PSNAKE snake)
{
2000031c:	b580      	push	{r7, lr}
2000031e:	b08a      	sub	sp, #40	; 0x28
20000320:	af00      	add	r7, sp, #0
20000322:	6078      	str	r0, [r7, #4]
    //skapa ett objekt pos = (head + dir)
    POBJECT head = snake -> snakeParts[0];
20000324:	687b      	ldr	r3, [r7, #4]
20000326:	691b      	ldr	r3, [r3, #16]
20000328:	627b      	str	r3, [r7, #36]	; 0x24
    int posx = head -> posx + snake -> dir[0];
2000032a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
2000032c:	685a      	ldr	r2, [r3, #4]
2000032e:	687b      	ldr	r3, [r7, #4]
20000330:	685b      	ldr	r3, [r3, #4]
20000332:	18d3      	adds	r3, r2, r3
20000334:	623b      	str	r3, [r7, #32]
    int posy = head -> posy + snake -> dir[1];
20000336:	6a7b      	ldr	r3, [r7, #36]	; 0x24
20000338:	689a      	ldr	r2, [r3, #8]
2000033a:	687b      	ldr	r3, [r7, #4]
2000033c:	689b      	ldr	r3, [r3, #8]
2000033e:	18d3      	adds	r3, r2, r3
20000340:	61fb      	str	r3, [r7, #28]
	OBJECT temp = {
20000342:	2108      	movs	r1, #8
20000344:	187b      	adds	r3, r7, r1
20000346:	4a0c      	ldr	r2, [pc, #48]	; (20000378 <move_snake+0x5c>)
20000348:	601a      	str	r2, [r3, #0]
2000034a:	187b      	adds	r3, r7, r1
2000034c:	6a3a      	ldr	r2, [r7, #32]
2000034e:	605a      	str	r2, [r3, #4]
20000350:	187b      	adds	r3, r7, r1
20000352:	69fa      	ldr	r2, [r7, #28]
20000354:	609a      	str	r2, [r3, #8]
20000356:	187b      	adds	r3, r7, r1
20000358:	4a08      	ldr	r2, [pc, #32]	; (2000037c <move_snake+0x60>)
2000035a:	60da      	str	r2, [r3, #12]
2000035c:	187b      	adds	r3, r7, r1
2000035e:	4a08      	ldr	r2, [pc, #32]	; (20000380 <move_snake+0x64>)
20000360:	611a      	str	r2, [r3, #16]
        draw_sprite,
        clear_sprite,
    };   
    
    //pusha objekt in i listan
    push(snake, &temp);
20000362:	187a      	adds	r2, r7, r1
20000364:	687b      	ldr	r3, [r7, #4]
20000366:	0011      	movs	r1, r2
20000368:	0018      	movs	r0, r3
2000036a:	f000 f80b 	bl	20000384 <push>
}
2000036e:	46c0      	nop			; (mov r8, r8)
20000370:	46bd      	mov	sp, r7
20000372:	b00a      	add	sp, #40	; 0x28
20000374:	bd80      	pop	{r7, pc}
20000376:	46c0      	nop			; (mov r8, r8)
20000378:	20000738 	andcs	r0, r0, r8, lsr r7
2000037c:	20000199 	mulcs	r0, r9, r1
20000380:	20000201 	andcs	r0, r0, r1, lsl #4

20000384 <push>:

void push(PSNAKE snake, POBJECT head)
{
20000384:	b580      	push	{r7, lr}
20000386:	4f3b      	ldr	r7, [pc, #236]	; (20000474 <push+0xf0>)
20000388:	44bd      	add	sp, r7
2000038a:	af00      	add	r7, sp, #0
2000038c:	6078      	str	r0, [r7, #4]
2000038e:	6039      	str	r1, [r7, #0]
    POBJECT temp[MAX_LENGTH];
    temp[0] = head;
20000390:	4b39      	ldr	r3, [pc, #228]	; (20000478 <push+0xf4>)
20000392:	2284      	movs	r2, #132	; 0x84
20000394:	0092      	lsls	r2, r2, #2
20000396:	4694      	mov	ip, r2
20000398:	44bc      	add	ip, r7
2000039a:	4463      	add	r3, ip
2000039c:	683a      	ldr	r2, [r7, #0]
2000039e:	601a      	str	r2, [r3, #0]
    for (int i = 1; i <= snake -> size; i++) {
200003a0:	2301      	movs	r3, #1
200003a2:	2283      	movs	r2, #131	; 0x83
200003a4:	0092      	lsls	r2, r2, #2
200003a6:	18ba      	adds	r2, r7, r2
200003a8:	6013      	str	r3, [r2, #0]
200003aa:	e025      	b.n	200003f8 <push+0x74>
        if (i < snake -> size || snake -> onApple){
200003ac:	687b      	ldr	r3, [r7, #4]
200003ae:	68db      	ldr	r3, [r3, #12]
200003b0:	2283      	movs	r2, #131	; 0x83
200003b2:	0092      	lsls	r2, r2, #2
200003b4:	18ba      	adds	r2, r7, r2
200003b6:	6812      	ldr	r2, [r2, #0]
200003b8:	429a      	cmp	r2, r3
200003ba:	db03      	blt.n	200003c4 <push+0x40>
200003bc:	687b      	ldr	r3, [r7, #4]
200003be:	681b      	ldr	r3, [r3, #0]
200003c0:	2b00      	cmp	r3, #0
200003c2:	d012      	beq.n	200003ea <push+0x66>
            temp[i] = snake -> snakeParts[i - 1];
200003c4:	2083      	movs	r0, #131	; 0x83
200003c6:	0080      	lsls	r0, r0, #2
200003c8:	183b      	adds	r3, r7, r0
200003ca:	681b      	ldr	r3, [r3, #0]
200003cc:	1e5a      	subs	r2, r3, #1
200003ce:	687b      	ldr	r3, [r7, #4]
200003d0:	3204      	adds	r2, #4
200003d2:	0092      	lsls	r2, r2, #2
200003d4:	58d1      	ldr	r1, [r2, r3]
200003d6:	4b28      	ldr	r3, [pc, #160]	; (20000478 <push+0xf4>)
200003d8:	2284      	movs	r2, #132	; 0x84
200003da:	0092      	lsls	r2, r2, #2
200003dc:	4694      	mov	ip, r2
200003de:	44bc      	add	ip, r7
200003e0:	4463      	add	r3, ip
200003e2:	183a      	adds	r2, r7, r0
200003e4:	6812      	ldr	r2, [r2, #0]
200003e6:	0092      	lsls	r2, r2, #2
200003e8:	50d1      	str	r1, [r2, r3]
    for (int i = 1; i <= snake -> size; i++) {
200003ea:	2283      	movs	r2, #131	; 0x83
200003ec:	0092      	lsls	r2, r2, #2
200003ee:	18bb      	adds	r3, r7, r2
200003f0:	681b      	ldr	r3, [r3, #0]
200003f2:	3301      	adds	r3, #1
200003f4:	18ba      	adds	r2, r7, r2
200003f6:	6013      	str	r3, [r2, #0]
200003f8:	687b      	ldr	r3, [r7, #4]
200003fa:	68db      	ldr	r3, [r3, #12]
200003fc:	2283      	movs	r2, #131	; 0x83
200003fe:	0092      	lsls	r2, r2, #2
20000400:	18ba      	adds	r2, r7, r2
20000402:	6812      	ldr	r2, [r2, #0]
20000404:	429a      	cmp	r2, r3
20000406:	ddd1      	ble.n	200003ac <push+0x28>
        }
    }
    if (snake -> onApple) 
20000408:	687b      	ldr	r3, [r7, #4]
2000040a:	681b      	ldr	r3, [r3, #0]
2000040c:	2b00      	cmp	r3, #0
2000040e:	d004      	beq.n	2000041a <push+0x96>
    {
        ++snake -> size;
20000410:	687b      	ldr	r3, [r7, #4]
20000412:	68db      	ldr	r3, [r3, #12]
20000414:	1c5a      	adds	r2, r3, #1
20000416:	687b      	ldr	r3, [r7, #4]
20000418:	60da      	str	r2, [r3, #12]
    }
    for (int i = 0; i < snake -> size; i++) {
2000041a:	2300      	movs	r3, #0
2000041c:	2282      	movs	r2, #130	; 0x82
2000041e:	0092      	lsls	r2, r2, #2
20000420:	18ba      	adds	r2, r7, r2
20000422:	6013      	str	r3, [r2, #0]
20000424:	e016      	b.n	20000454 <push+0xd0>
        snake -> snakeParts[i] = temp[i];
20000426:	4b14      	ldr	r3, [pc, #80]	; (20000478 <push+0xf4>)
20000428:	2284      	movs	r2, #132	; 0x84
2000042a:	0092      	lsls	r2, r2, #2
2000042c:	4694      	mov	ip, r2
2000042e:	44bc      	add	ip, r7
20000430:	4463      	add	r3, ip
20000432:	2082      	movs	r0, #130	; 0x82
20000434:	0080      	lsls	r0, r0, #2
20000436:	183a      	adds	r2, r7, r0
20000438:	6812      	ldr	r2, [r2, #0]
2000043a:	0092      	lsls	r2, r2, #2
2000043c:	58d1      	ldr	r1, [r2, r3]
2000043e:	687b      	ldr	r3, [r7, #4]
20000440:	183a      	adds	r2, r7, r0
20000442:	6812      	ldr	r2, [r2, #0]
20000444:	3204      	adds	r2, #4
20000446:	0092      	lsls	r2, r2, #2
20000448:	50d1      	str	r1, [r2, r3]
    for (int i = 0; i < snake -> size; i++) {
2000044a:	183b      	adds	r3, r7, r0
2000044c:	681b      	ldr	r3, [r3, #0]
2000044e:	3301      	adds	r3, #1
20000450:	183a      	adds	r2, r7, r0
20000452:	6013      	str	r3, [r2, #0]
20000454:	687b      	ldr	r3, [r7, #4]
20000456:	68db      	ldr	r3, [r3, #12]
20000458:	2282      	movs	r2, #130	; 0x82
2000045a:	0092      	lsls	r2, r2, #2
2000045c:	18ba      	adds	r2, r7, r2
2000045e:	6812      	ldr	r2, [r2, #0]
20000460:	429a      	cmp	r2, r3
20000462:	dbe0      	blt.n	20000426 <push+0xa2>
    }
}
20000464:	46c0      	nop			; (mov r8, r8)
20000466:	46c0      	nop			; (mov r8, r8)
20000468:	46bd      	mov	sp, r7
2000046a:	2384      	movs	r3, #132	; 0x84
2000046c:	009b      	lsls	r3, r3, #2
2000046e:	449d      	add	sp, r3
20000470:	bd80      	pop	{r7, pc}
20000472:	46c0      	nop			; (mov r8, r8)
20000474:	fffffdf0 			; <UNDEFINED> instruction: 0xfffffdf0
20000478:	fffffdf8 			; <UNDEFINED> instruction: 0xfffffdf8

2000047c <clear_snake>:

void clear_snake(PSNAKE snake)
{
2000047c:	b5b0      	push	{r4, r5, r7, lr}
2000047e:	b088      	sub	sp, #32
20000480:	af00      	add	r7, sp, #0
20000482:	6078      	str	r0, [r7, #4]
    OBJECT snakePart;
    snakePart = *(snake -> snakeParts[0]);
20000484:	687b      	ldr	r3, [r7, #4]
20000486:	691a      	ldr	r2, [r3, #16]
20000488:	210c      	movs	r1, #12
2000048a:	187b      	adds	r3, r7, r1
2000048c:	ca31      	ldmia	r2!, {r0, r4, r5}
2000048e:	c331      	stmia	r3!, {r0, r4, r5}
20000490:	ca11      	ldmia	r2!, {r0, r4}
20000492:	c311      	stmia	r3!, {r0, r4}
    snakePart.clear(&snakePart);
20000494:	187b      	adds	r3, r7, r1
20000496:	691b      	ldr	r3, [r3, #16]
20000498:	187a      	adds	r2, r7, r1
2000049a:	0010      	movs	r0, r2
2000049c:	4798      	blx	r3
}
2000049e:	46c0      	nop			; (mov r8, r8)
200004a0:	46bd      	mov	sp, r7
200004a2:	b008      	add	sp, #32
200004a4:	bdb0      	pop	{r4, r5, r7, pc}

200004a6 <draw_snake>:

void draw_snake(PSNAKE snake) { //draw only first and last?
200004a6:	b5b0      	push	{r4, r5, r7, lr}
200004a8:	b088      	sub	sp, #32
200004aa:	af00      	add	r7, sp, #0
200004ac:	6078      	str	r0, [r7, #4]
    OBJECT snakePart;
    for (int i = 0; i < snake -> size; i++) {
200004ae:	2300      	movs	r3, #0
200004b0:	61fb      	str	r3, [r7, #28]
200004b2:	e012      	b.n	200004da <draw_snake+0x34>
        snakePart = *(snake -> snakeParts[i]);
200004b4:	687b      	ldr	r3, [r7, #4]
200004b6:	69fa      	ldr	r2, [r7, #28]
200004b8:	3204      	adds	r2, #4
200004ba:	0092      	lsls	r2, r2, #2
200004bc:	58d2      	ldr	r2, [r2, r3]
200004be:	2108      	movs	r1, #8
200004c0:	187b      	adds	r3, r7, r1
200004c2:	ca31      	ldmia	r2!, {r0, r4, r5}
200004c4:	c331      	stmia	r3!, {r0, r4, r5}
200004c6:	ca11      	ldmia	r2!, {r0, r4}
200004c8:	c311      	stmia	r3!, {r0, r4}
        snakePart.draw(&snakePart);
200004ca:	187b      	adds	r3, r7, r1
200004cc:	68db      	ldr	r3, [r3, #12]
200004ce:	187a      	adds	r2, r7, r1
200004d0:	0010      	movs	r0, r2
200004d2:	4798      	blx	r3
    for (int i = 0; i < snake -> size; i++) {
200004d4:	69fb      	ldr	r3, [r7, #28]
200004d6:	3301      	adds	r3, #1
200004d8:	61fb      	str	r3, [r7, #28]
200004da:	687b      	ldr	r3, [r7, #4]
200004dc:	68db      	ldr	r3, [r3, #12]
200004de:	69fa      	ldr	r2, [r7, #28]
200004e0:	429a      	cmp	r2, r3
200004e2:	dbe7      	blt.n	200004b4 <draw_snake+0xe>
    }
200004e4:	46c0      	nop			; (mov r8, r8)
200004e6:	46c0      	nop			; (mov r8, r8)
200004e8:	46bd      	mov	sp, r7
200004ea:	b008      	add	sp, #32
200004ec:	bdb0      	pop	{r4, r5, r7, pc}
200004ee:	46c0      	nop			; (mov r8, r8)

200004f0 <draw_grid>:
  draw_snake,
  clear_snake,
  move_snake,
};

void draw_grid(void) {
200004f0:	b580      	push	{r7, lr}
200004f2:	b084      	sub	sp, #16
200004f4:	af00      	add	r7, sp, #0
  for (int y = 1; y <= 64; y +=8) {
200004f6:	2301      	movs	r3, #1
200004f8:	60fb      	str	r3, [r7, #12]
200004fa:	e011      	b.n	20000520 <draw_grid+0x30>
    for (int x = 1; x <= 128; x++) {
200004fc:	2301      	movs	r3, #1
200004fe:	60bb      	str	r3, [r7, #8]
20000500:	e008      	b.n	20000514 <draw_grid+0x24>
      graphic_pixel_set(x, y);
20000502:	68fa      	ldr	r2, [r7, #12]
20000504:	68bb      	ldr	r3, [r7, #8]
20000506:	0011      	movs	r1, r2
20000508:	0018      	movs	r0, r3
2000050a:	f7ff fd87 	bl	2000001c <graphic_pixel_set>
    for (int x = 1; x <= 128; x++) {
2000050e:	68bb      	ldr	r3, [r7, #8]
20000510:	3301      	adds	r3, #1
20000512:	60bb      	str	r3, [r7, #8]
20000514:	68bb      	ldr	r3, [r7, #8]
20000516:	2b80      	cmp	r3, #128	; 0x80
20000518:	ddf3      	ble.n	20000502 <draw_grid+0x12>
  for (int y = 1; y <= 64; y +=8) {
2000051a:	68fb      	ldr	r3, [r7, #12]
2000051c:	3308      	adds	r3, #8
2000051e:	60fb      	str	r3, [r7, #12]
20000520:	68fb      	ldr	r3, [r7, #12]
20000522:	2b40      	cmp	r3, #64	; 0x40
20000524:	ddea      	ble.n	200004fc <draw_grid+0xc>
    }
  }

  for (int x = 1; x <= 128; x +=8) {
20000526:	2301      	movs	r3, #1
20000528:	607b      	str	r3, [r7, #4]
2000052a:	e011      	b.n	20000550 <draw_grid+0x60>
    for (int y = 1; y <= 64; y++) {
2000052c:	2301      	movs	r3, #1
2000052e:	603b      	str	r3, [r7, #0]
20000530:	e008      	b.n	20000544 <draw_grid+0x54>
      graphic_pixel_set(x, y);
20000532:	683a      	ldr	r2, [r7, #0]
20000534:	687b      	ldr	r3, [r7, #4]
20000536:	0011      	movs	r1, r2
20000538:	0018      	movs	r0, r3
2000053a:	f7ff fd6f 	bl	2000001c <graphic_pixel_set>
    for (int y = 1; y <= 64; y++) {
2000053e:	683b      	ldr	r3, [r7, #0]
20000540:	3301      	adds	r3, #1
20000542:	603b      	str	r3, [r7, #0]
20000544:	683b      	ldr	r3, [r7, #0]
20000546:	2b40      	cmp	r3, #64	; 0x40
20000548:	ddf3      	ble.n	20000532 <draw_grid+0x42>
  for (int x = 1; x <= 128; x +=8) {
2000054a:	687b      	ldr	r3, [r7, #4]
2000054c:	3308      	adds	r3, #8
2000054e:	607b      	str	r3, [r7, #4]
20000550:	687b      	ldr	r3, [r7, #4]
20000552:	2b80      	cmp	r3, #128	; 0x80
20000554:	ddea      	ble.n	2000052c <draw_grid+0x3c>
    }
  }
}
20000556:	46c0      	nop			; (mov r8, r8)
20000558:	46c0      	nop			; (mov r8, r8)
2000055a:	46bd      	mov	sp, r7
2000055c:	b004      	add	sp, #16
2000055e:	bd80      	pop	{r7, pc}

20000560 <main>:

void main(void)
{
20000560:	b590      	push	{r4, r7, lr}
20000562:	b085      	sub	sp, #20
20000564:	af00      	add	r7, sp, #0
  char c;
  POBJECT fruit = &fruitObj;
20000566:	4b2b      	ldr	r3, [pc, #172]	; (20000614 <main+0xb4>)
20000568:	60fb      	str	r3, [r7, #12]
  PSNAKE snake = &snakeObj;
2000056a:	4b2b      	ldr	r3, [pc, #172]	; (20000618 <main+0xb8>)
2000056c:	60bb      	str	r3, [r7, #8]
  snake -> snakeParts[0] = &snakePart;
2000056e:	68bb      	ldr	r3, [r7, #8]
20000570:	4a2a      	ldr	r2, [pc, #168]	; (2000061c <main+0xbc>)
20000572:	611a      	str	r2, [r3, #16]
  input_init();
20000574:	f7ff fd58 	bl	20000028 <input_init>
  graphic_initialize();
20000578:	f7ff fd4a 	bl	20000010 <graphic_initialize>
  graphic_clear_screen();
2000057c:	f7ff fd4b 	bl	20000016 <graphic_clear_screen>

  while (1)
  {
    //snake -> clear(snake);  //DOES NOT WORK?!
    graphic_clear_screen();
20000580:	f7ff fd49 	bl	20000016 <graphic_clear_screen>
    snake -> move(snake);
20000584:	68ba      	ldr	r2, [r7, #8]
20000586:	2386      	movs	r3, #134	; 0x86
20000588:	009b      	lsls	r3, r3, #2
2000058a:	58d3      	ldr	r3, [r2, r3]
2000058c:	68ba      	ldr	r2, [r7, #8]
2000058e:	0010      	movs	r0, r2
20000590:	4798      	blx	r3
    snake -> draw(snake);
20000592:	68ba      	ldr	r2, [r7, #8]
20000594:	2384      	movs	r3, #132	; 0x84
20000596:	009b      	lsls	r3, r3, #2
20000598:	58d3      	ldr	r3, [r2, r3]
2000059a:	68ba      	ldr	r2, [r7, #8]
2000059c:	0010      	movs	r0, r2
2000059e:	4798      	blx	r3
    draw_grid();
200005a0:	f7ff ffa6 	bl	200004f0 <draw_grid>
    fruit -> draw(fruit);
200005a4:	68fb      	ldr	r3, [r7, #12]
200005a6:	68db      	ldr	r3, [r3, #12]
200005a8:	68fa      	ldr	r2, [r7, #12]
200005aa:	0010      	movs	r0, r2
200005ac:	4798      	blx	r3
    //delay_milli(20);
    
    c = keyb();
200005ae:	1dfc      	adds	r4, r7, #7
200005b0:	f7ff fdbe 	bl	20000130 <keyb>
200005b4:	0003      	movs	r3, r0
200005b6:	7023      	strb	r3, [r4, #0]
    switch ( c )
200005b8:	1dfb      	adds	r3, r7, #7
200005ba:	781b      	ldrb	r3, [r3, #0]
200005bc:	2b06      	cmp	r3, #6
200005be:	d008      	beq.n	200005d2 <main+0x72>
200005c0:	dc25      	bgt.n	2000060e <main+0xae>
200005c2:	2b05      	cmp	r3, #5
200005c4:	d014      	beq.n	200005f0 <main+0x90>
200005c6:	dc22      	bgt.n	2000060e <main+0xae>
200005c8:	2b02      	cmp	r3, #2
200005ca:	d018      	beq.n	200005fe <main+0x9e>
200005cc:	2b04      	cmp	r3, #4
200005ce:	d007      	beq.n	200005e0 <main+0x80>
        snake -> dir[0] = 0;
        snake -> dir[1] = -1;
        break;

      default:
        break;
200005d0:	e01d      	b.n	2000060e <main+0xae>
        snake -> dir[0] = 1;
200005d2:	68bb      	ldr	r3, [r7, #8]
200005d4:	2201      	movs	r2, #1
200005d6:	605a      	str	r2, [r3, #4]
        snake -> dir[1] = 0;
200005d8:	68bb      	ldr	r3, [r7, #8]
200005da:	2200      	movs	r2, #0
200005dc:	609a      	str	r2, [r3, #8]
        break;
200005de:	e017      	b.n	20000610 <main+0xb0>
        snake -> dir[0] = -1;
200005e0:	68bb      	ldr	r3, [r7, #8]
200005e2:	2201      	movs	r2, #1
200005e4:	4252      	negs	r2, r2
200005e6:	605a      	str	r2, [r3, #4]
        snake -> dir[1] = 0;
200005e8:	68bb      	ldr	r3, [r7, #8]
200005ea:	2200      	movs	r2, #0
200005ec:	609a      	str	r2, [r3, #8]
        break;
200005ee:	e00f      	b.n	20000610 <main+0xb0>
        snake -> dir[0] = 0;
200005f0:	68bb      	ldr	r3, [r7, #8]
200005f2:	2200      	movs	r2, #0
200005f4:	605a      	str	r2, [r3, #4]
        snake -> dir[1] = 1;
200005f6:	68bb      	ldr	r3, [r7, #8]
200005f8:	2201      	movs	r2, #1
200005fa:	609a      	str	r2, [r3, #8]
        break;
200005fc:	e008      	b.n	20000610 <main+0xb0>
        snake -> dir[0] = 0;
200005fe:	68bb      	ldr	r3, [r7, #8]
20000600:	2200      	movs	r2, #0
20000602:	605a      	str	r2, [r3, #4]
        snake -> dir[1] = -1;
20000604:	68bb      	ldr	r3, [r7, #8]
20000606:	2201      	movs	r2, #1
20000608:	4252      	negs	r2, r2
2000060a:	609a      	str	r2, [r3, #8]
        break;
2000060c:	e000      	b.n	20000610 <main+0xb0>
        break;
2000060e:	46c0      	nop			; (mov r8, r8)
    graphic_clear_screen();
20000610:	e7b6      	b.n	20000580 <main+0x20>
20000612:	46c0      	nop			; (mov r8, r8)
20000614:	20000850 	andcs	r0, r0, r0, asr r8
20000618:	20000904 	andcs	r0, r0, r4, lsl #18
2000061c:	200008f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

20000620 <__udivsi3>:
20000620:	2200      	movs	r2, #0
20000622:	0843      	lsrs	r3, r0, #1
20000624:	428b      	cmp	r3, r1
20000626:	d374      	bcc.n	20000712 <__udivsi3+0xf2>
20000628:	0903      	lsrs	r3, r0, #4
2000062a:	428b      	cmp	r3, r1
2000062c:	d35f      	bcc.n	200006ee <__udivsi3+0xce>
2000062e:	0a03      	lsrs	r3, r0, #8
20000630:	428b      	cmp	r3, r1
20000632:	d344      	bcc.n	200006be <__udivsi3+0x9e>
20000634:	0b03      	lsrs	r3, r0, #12
20000636:	428b      	cmp	r3, r1
20000638:	d328      	bcc.n	2000068c <__udivsi3+0x6c>
2000063a:	0c03      	lsrs	r3, r0, #16
2000063c:	428b      	cmp	r3, r1
2000063e:	d30d      	bcc.n	2000065c <__udivsi3+0x3c>
20000640:	22ff      	movs	r2, #255	; 0xff
20000642:	0209      	lsls	r1, r1, #8
20000644:	ba12      	rev	r2, r2
20000646:	0c03      	lsrs	r3, r0, #16
20000648:	428b      	cmp	r3, r1
2000064a:	d302      	bcc.n	20000652 <__udivsi3+0x32>
2000064c:	1212      	asrs	r2, r2, #8
2000064e:	0209      	lsls	r1, r1, #8
20000650:	d065      	beq.n	2000071e <__udivsi3+0xfe>
20000652:	0b03      	lsrs	r3, r0, #12
20000654:	428b      	cmp	r3, r1
20000656:	d319      	bcc.n	2000068c <__udivsi3+0x6c>
20000658:	e000      	b.n	2000065c <__udivsi3+0x3c>
2000065a:	0a09      	lsrs	r1, r1, #8
2000065c:	0bc3      	lsrs	r3, r0, #15
2000065e:	428b      	cmp	r3, r1
20000660:	d301      	bcc.n	20000666 <__udivsi3+0x46>
20000662:	03cb      	lsls	r3, r1, #15
20000664:	1ac0      	subs	r0, r0, r3
20000666:	4152      	adcs	r2, r2
20000668:	0b83      	lsrs	r3, r0, #14
2000066a:	428b      	cmp	r3, r1
2000066c:	d301      	bcc.n	20000672 <__udivsi3+0x52>
2000066e:	038b      	lsls	r3, r1, #14
20000670:	1ac0      	subs	r0, r0, r3
20000672:	4152      	adcs	r2, r2
20000674:	0b43      	lsrs	r3, r0, #13
20000676:	428b      	cmp	r3, r1
20000678:	d301      	bcc.n	2000067e <__udivsi3+0x5e>
2000067a:	034b      	lsls	r3, r1, #13
2000067c:	1ac0      	subs	r0, r0, r3
2000067e:	4152      	adcs	r2, r2
20000680:	0b03      	lsrs	r3, r0, #12
20000682:	428b      	cmp	r3, r1
20000684:	d301      	bcc.n	2000068a <__udivsi3+0x6a>
20000686:	030b      	lsls	r3, r1, #12
20000688:	1ac0      	subs	r0, r0, r3
2000068a:	4152      	adcs	r2, r2
2000068c:	0ac3      	lsrs	r3, r0, #11
2000068e:	428b      	cmp	r3, r1
20000690:	d301      	bcc.n	20000696 <__udivsi3+0x76>
20000692:	02cb      	lsls	r3, r1, #11
20000694:	1ac0      	subs	r0, r0, r3
20000696:	4152      	adcs	r2, r2
20000698:	0a83      	lsrs	r3, r0, #10
2000069a:	428b      	cmp	r3, r1
2000069c:	d301      	bcc.n	200006a2 <__udivsi3+0x82>
2000069e:	028b      	lsls	r3, r1, #10
200006a0:	1ac0      	subs	r0, r0, r3
200006a2:	4152      	adcs	r2, r2
200006a4:	0a43      	lsrs	r3, r0, #9
200006a6:	428b      	cmp	r3, r1
200006a8:	d301      	bcc.n	200006ae <__udivsi3+0x8e>
200006aa:	024b      	lsls	r3, r1, #9
200006ac:	1ac0      	subs	r0, r0, r3
200006ae:	4152      	adcs	r2, r2
200006b0:	0a03      	lsrs	r3, r0, #8
200006b2:	428b      	cmp	r3, r1
200006b4:	d301      	bcc.n	200006ba <__udivsi3+0x9a>
200006b6:	020b      	lsls	r3, r1, #8
200006b8:	1ac0      	subs	r0, r0, r3
200006ba:	4152      	adcs	r2, r2
200006bc:	d2cd      	bcs.n	2000065a <__udivsi3+0x3a>
200006be:	09c3      	lsrs	r3, r0, #7
200006c0:	428b      	cmp	r3, r1
200006c2:	d301      	bcc.n	200006c8 <__udivsi3+0xa8>
200006c4:	01cb      	lsls	r3, r1, #7
200006c6:	1ac0      	subs	r0, r0, r3
200006c8:	4152      	adcs	r2, r2
200006ca:	0983      	lsrs	r3, r0, #6
200006cc:	428b      	cmp	r3, r1
200006ce:	d301      	bcc.n	200006d4 <__udivsi3+0xb4>
200006d0:	018b      	lsls	r3, r1, #6
200006d2:	1ac0      	subs	r0, r0, r3
200006d4:	4152      	adcs	r2, r2
200006d6:	0943      	lsrs	r3, r0, #5
200006d8:	428b      	cmp	r3, r1
200006da:	d301      	bcc.n	200006e0 <__udivsi3+0xc0>
200006dc:	014b      	lsls	r3, r1, #5
200006de:	1ac0      	subs	r0, r0, r3
200006e0:	4152      	adcs	r2, r2
200006e2:	0903      	lsrs	r3, r0, #4
200006e4:	428b      	cmp	r3, r1
200006e6:	d301      	bcc.n	200006ec <__udivsi3+0xcc>
200006e8:	010b      	lsls	r3, r1, #4
200006ea:	1ac0      	subs	r0, r0, r3
200006ec:	4152      	adcs	r2, r2
200006ee:	08c3      	lsrs	r3, r0, #3
200006f0:	428b      	cmp	r3, r1
200006f2:	d301      	bcc.n	200006f8 <__udivsi3+0xd8>
200006f4:	00cb      	lsls	r3, r1, #3
200006f6:	1ac0      	subs	r0, r0, r3
200006f8:	4152      	adcs	r2, r2
200006fa:	0883      	lsrs	r3, r0, #2
200006fc:	428b      	cmp	r3, r1
200006fe:	d301      	bcc.n	20000704 <__udivsi3+0xe4>
20000700:	008b      	lsls	r3, r1, #2
20000702:	1ac0      	subs	r0, r0, r3
20000704:	4152      	adcs	r2, r2
20000706:	0843      	lsrs	r3, r0, #1
20000708:	428b      	cmp	r3, r1
2000070a:	d301      	bcc.n	20000710 <__udivsi3+0xf0>
2000070c:	004b      	lsls	r3, r1, #1
2000070e:	1ac0      	subs	r0, r0, r3
20000710:	4152      	adcs	r2, r2
20000712:	1a41      	subs	r1, r0, r1
20000714:	d200      	bcs.n	20000718 <__udivsi3+0xf8>
20000716:	4601      	mov	r1, r0
20000718:	4152      	adcs	r2, r2
2000071a:	4610      	mov	r0, r2
2000071c:	4770      	bx	lr
2000071e:	e7ff      	b.n	20000720 <__udivsi3+0x100>
20000720:	b501      	push	{r0, lr}
20000722:	2000      	movs	r0, #0
20000724:	f000 f806 	bl	20000734 <__aeabi_idiv0>
20000728:	bd02      	pop	{r1, pc}
2000072a:	46c0      	nop			; (mov r8, r8)

2000072c <__aeabi_uidivmod>:
2000072c:	2900      	cmp	r1, #0
2000072e:	d0f7      	beq.n	20000720 <__udivsi3+0x100>
20000730:	e776      	b.n	20000620 <__udivsi3>
20000732:	4770      	bx	lr

20000734 <__aeabi_idiv0>:
20000734:	4770      	bx	lr
20000736:	46c0      	nop			; (mov r8, r8)

20000738 <snakeGeo>:
20000738:	00000040 	andeq	r0, r0, r0, asr #32
2000073c:	00000008 	andeq	r0, r0, r8
20000740:	00000008 	andeq	r0, r0, r8
20000744:	01000000 	mrseq	r0, (UNDEF: 0)
20000748:	03000200 	movweq	r0, #512	; 0x200
2000074c:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
20000750:	07000600 	streq	r0, [r0, -r0, lsl #12]
20000754:	01010001 	tsteq	r1, r1
20000758:	03010201 	movweq	r0, #4609	; 0x1201
2000075c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
20000760:	07010601 	streq	r0, [r1, -r1, lsl #12]
20000764:	01020002 	tsteq	r2, r2
20000768:	03020202 	movweq	r0, #8706	; 0x2202
2000076c:	05020402 	streq	r0, [r2, #-1026]	; 0xfffffbfe
20000770:	07020602 	streq	r0, [r2, -r2, lsl #12]
20000774:	01030003 	tsteq	r3, r3
20000778:	03030203 	movweq	r0, #12803	; 0x3203
2000077c:	05030403 	streq	r0, [r3, #-1027]	; 0xfffffbfd
20000780:	07030603 	streq	r0, [r3, -r3, lsl #12]
20000784:	01040004 	tsteq	r4, r4
20000788:	03040204 	movweq	r0, #16900	; 0x4204
2000078c:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
20000790:	07040604 	streq	r0, [r4, -r4, lsl #12]
20000794:	01050005 	tsteq	r5, r5
20000798:	03050205 	movweq	r0, #20997	; 0x5205
2000079c:	05050405 	streq	r0, [r5, #-1029]	; 0xfffffbfb
200007a0:	07050605 	streq	r0, [r5, -r5, lsl #12]
200007a4:	01060006 	tsteq	r6, r6
200007a8:	03060206 	movweq	r0, #25094	; 0x6206
200007ac:	05060406 	streq	r0, [r6, #-1030]	; 0xfffffbfa
200007b0:	07060606 	streq	r0, [r6, -r6, lsl #12]
200007b4:	01070007 	tsteq	r7, r7
200007b8:	03070207 	movweq	r0, #29191	; 0x7207
200007bc:	05070407 	streq	r0, [r7, #-1031]	; 0xfffffbf9
200007c0:	07070607 	streq	r0, [r7, -r7, lsl #12]

200007c4 <fruitGeo>:
200007c4:	00000015 	andeq	r0, r0, r5, lsl r0
200007c8:	00000008 	andeq	r0, r0, r8
200007cc:	00000008 	andeq	r0, r0, r8
200007d0:	00060005 	andeq	r0, r6, r5
200007d4:	02010104 	andeq	r0, r1, #4, 2
200007d8:	02030202 	andeq	r0, r3, #536870912	; 0x20000000
200007dc:	02050204 	andeq	r0, r5, #4, 4	; 0x40000000
200007e0:	03000206 	movweq	r0, #518	; 0x206
200007e4:	04000307 	streq	r0, [r0], #-775	; 0xfffffcf9
200007e8:	05000407 	streq	r0, [r0, #-1031]	; 0xfffffbf9
200007ec:	06010507 	streq	r0, [r1], -r7, lsl #10
200007f0:	07020606 	streq	r0, [r2, -r6, lsl #12]
200007f4:	07040703 	streq	r0, [r4, -r3, lsl #14]
200007f8:	00000705 	andeq	r0, r0, r5, lsl #14
	...

20000850 <fruitObj>:
20000850:	200007c4 	andcs	r0, r0, r4, asr #15
20000854:	00000001 	andeq	r0, r0, r1
20000858:	00000001 	andeq	r0, r0, r1
2000085c:	20000199 	mulcs	r0, r9, r1
20000860:	20000201 	andcs	r0, r0, r1, lsl #4

20000864 <snakeGeo>:
20000864:	00000040 	andeq	r0, r0, r0, asr #32
20000868:	00000008 	andeq	r0, r0, r8
2000086c:	00000008 	andeq	r0, r0, r8
20000870:	01000000 	mrseq	r0, (UNDEF: 0)
20000874:	03000200 	movweq	r0, #512	; 0x200
20000878:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
2000087c:	07000600 	streq	r0, [r0, -r0, lsl #12]
20000880:	01010001 	tsteq	r1, r1
20000884:	03010201 	movweq	r0, #4609	; 0x1201
20000888:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
2000088c:	07010601 	streq	r0, [r1, -r1, lsl #12]
20000890:	01020002 	tsteq	r2, r2
20000894:	03020202 	movweq	r0, #8706	; 0x2202
20000898:	05020402 	streq	r0, [r2, #-1026]	; 0xfffffbfe
2000089c:	07020602 	streq	r0, [r2, -r2, lsl #12]
200008a0:	01030003 	tsteq	r3, r3
200008a4:	03030203 	movweq	r0, #12803	; 0x3203
200008a8:	05030403 	streq	r0, [r3, #-1027]	; 0xfffffbfd
200008ac:	07030603 	streq	r0, [r3, -r3, lsl #12]
200008b0:	01040004 	tsteq	r4, r4
200008b4:	03040204 	movweq	r0, #16900	; 0x4204
200008b8:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
200008bc:	07040604 	streq	r0, [r4, -r4, lsl #12]
200008c0:	01050005 	tsteq	r5, r5
200008c4:	03050205 	movweq	r0, #20997	; 0x5205
200008c8:	05050405 	streq	r0, [r5, #-1029]	; 0xfffffbfb
200008cc:	07050605 	streq	r0, [r5, -r5, lsl #12]
200008d0:	01060006 	tsteq	r6, r6
200008d4:	03060206 	movweq	r0, #25094	; 0x6206
200008d8:	05060406 	streq	r0, [r6, #-1030]	; 0xfffffbfa
200008dc:	07060606 	streq	r0, [r6, -r6, lsl #12]
200008e0:	01070007 	tsteq	r7, r7
200008e4:	03070207 	movweq	r0, #29191	; 0x7207
200008e8:	05070407 	streq	r0, [r7, #-1031]	; 0xfffffbf9
200008ec:	07070607 	streq	r0, [r7, -r7, lsl #12]

200008f0 <snakePart>:
200008f0:	20000864 	andcs	r0, r0, r4, ror #16
200008f4:	00000008 	andeq	r0, r0, r8
200008f8:	00000004 	andeq	r0, r0, r4
200008fc:	20000199 	mulcs	r0, r9, r1
20000900:	20000201 	andcs	r0, r0, r1, lsl #4

20000904 <snakeObj>:
20000904:	00000000 	andeq	r0, r0, r0
20000908:	00000001 	andeq	r0, r0, r1
2000090c:	00000000 	andeq	r0, r0, r0
20000910:	00000001 	andeq	r0, r0, r1
	...
20000b14:	200004a7 	andcs	r0, r0, r7, lsr #9
20000b18:	2000047d 	andcs	r0, r0, sp, ror r4
20000b1c:	2000031d 	andcs	r0, r0, sp, lsl r3
20000b20:	0a030201 	beq	200c132c <snakeObj+0xc0a28>
20000b24:	0b060504 	bleq	20181f3c <snakeObj+0x181638>
20000b28:	0c090807 	stceq	8, cr0, [r9], {7}
20000b2c:	0d0f000e 	stceq	0, cr0, [pc, #-56]	; 20000afc <snakeObj+0x1f8>

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000ab 	andeq	r0, r0, fp, lsr #1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0000b50c 	andeq	fp, r0, ip, lsl #10
  14:	0000f000 	andeq	pc, r0, r0
  18:	00001000 	andeq	r1, r0, r0
  1c:	00001820 	andeq	r1, r0, r0, lsr #16
  20:	00000000 	andeq	r0, r0, r0
  24:	00a10200 	adceq	r0, r1, r0, lsl #4
  28:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
  2c:	00002206 	andeq	r2, r0, r6, lsl #4
  30:	00000620 	andeq	r0, r0, r0, lsr #12
  34:	549c0100 	ldrpl	r0, [ip], #256	; 0x100
  38:	03000000 	movweq	r0, #0
  3c:	19010078 	stmdbne	r1, {r3, r4, r5, r6}
  40:	0000541e 	andeq	r5, r0, lr, lsl r4
  44:	03500100 	cmpeq	r0, #0, 2
  48:	19010079 	stmdbne	r1, {r0, r3, r4, r5, r6}
  4c:	00005425 	andeq	r5, r0, r5, lsr #8
  50:	00510100 	subseq	r0, r1, r0, lsl #2
  54:	69050404 	stmdbvs	r5, {r2, sl}
  58:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
  5c:	0000007c 	andeq	r0, r0, ip, ror r0
  60:	1c061201 	sfmne	f1, 4, [r6], {1}
  64:	06200000 	strteq	r0, [r0], -r0
  68:	01000000 	mrseq	r0, (UNDEF: 0)
  6c:	00008a9c 	muleq	r0, ip, sl
  70:	00780300 	rsbseq	r0, r8, r0, lsl #6
  74:	541c1201 	ldrpl	r1, [ip], #-513	; 0xfffffdff
  78:	01000000 	mrseq	r0, (UNDEF: 0)
  7c:	00790350 	rsbseq	r0, r9, r0, asr r3
  80:	54231201 	strtpl	r1, [r3], #-513	; 0xfffffdff
  84:	01000000 	mrseq	r0, (UNDEF: 0)
  88:	1b050051 	blne	1401d4 <startup-0x1febfe2c>
  8c:	01000001 	tsteq	r0, r1
  90:	0016060b 	andseq	r0, r6, fp, lsl #12
  94:	00062000 	andeq	r2, r6, r0
  98:	9c010000 	stcls	0, cr0, [r1], {-0}
  9c:	00008e05 	andeq	r8, r0, r5, lsl #28
  a0:	06040100 	streq	r0, [r4], -r0, lsl #2
  a4:	20000010 	andcs	r0, r0, r0, lsl r0
  a8:	00000006 	andeq	r0, r0, r6
  ac:	f6009c01 			; <UNDEFINED> instruction: 0xf6009c01
  b0:	04000000 	streq	r0, [r0], #-0
  b4:	00006600 	andeq	r6, r0, r0, lsl #12
  b8:	00010400 	andeq	r0, r1, r0, lsl #8
  bc:	0c000000 	stceq	0, cr0, [r0], {-0}
  c0:	00000171 	andeq	r0, r0, r1, ror r1
  c4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  c8:	20000028 	andcs	r0, r0, r8, lsr #32
  cc:	00000170 	andeq	r0, r0, r0, ror r1
  d0:	00000089 	andeq	r0, r0, r9, lsl #1
  d4:	00013d02 	andeq	r3, r1, r2, lsl #26
  d8:	0f3d0100 	svceq	0x003d0100
  dc:	0000006d 	andeq	r0, r0, sp, rrx
  e0:	20000130 	andcs	r0, r0, r0, lsr r1
  e4:	00000068 	andeq	r0, r0, r8, rrx
  e8:	006d9c01 	rsbeq	r9, sp, r1, lsl #24
  ec:	6b030000 	blvs	c00f4 <startup-0x1ff3ff0c>
  f0:	01007965 	tsteq	r0, r5, ror #18
  f4:	0074083f 	rsbseq	r0, r4, pc, lsr r8
  f8:	91020000 	mrsls	r0, (UNDEF: 2)
  fc:	6f720358 	svcvs	0x00720358
 100:	40010077 	andmi	r0, r1, r7, ror r0
 104:	00009207 	andeq	r9, r0, r7, lsl #4
 108:	6c910200 	lfmvs	f0, 4, [r1], {0}
 10c:	6c6f6303 	stclvs	3, cr6, [pc], #-12	; 108 <startup-0x1ffffef8>
 110:	0c400100 	stfeqe	f0, [r0], {-0}
 114:	00000092 	muleq	r0, r2, r0
 118:	00689102 	rsbeq	r9, r8, r2, lsl #2
 11c:	4e080104 	adfmie	f0, f0, f4
 120:	05000001 	streq	r0, [r0, #-1]
 124:	0000008b 	andeq	r0, r0, fp, lsl #1
 128:	00000084 	andeq	r0, r0, r4, lsl #1
 12c:	00008406 	andeq	r8, r0, r6, lsl #8
 130:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
 134:	01300704 	teqeq	r0, r4, lsl #14
 138:	01040000 	mrseq	r0, (UNDEF: 4)
 13c:	00015708 	andeq	r5, r1, r8, lsl #14
 140:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
 144:	00746e69 	rsbseq	r6, r4, r9, ror #28
 148:	00016708 	andeq	r6, r1, r8, lsl #14
 14c:	052c0100 	streq	r0, [ip, #-256]!	; 0xffffff00
 150:	00000092 	muleq	r0, r2, r0
 154:	200000dc 	ldrdcs	r0, [r0], -ip
 158:	00000054 	andeq	r0, r0, r4, asr r0
 15c:	00c19c01 	sbceq	r9, r1, r1, lsl #24
 160:	63030000 	movwvs	r0, #12288	; 0x3000
 164:	112e0100 			; <UNDEFINED> instruction: 0x112e0100
 168:	0000006d 	andeq	r0, r0, sp, rrx
 16c:	00779102 	rsbseq	r9, r7, r2, lsl #2
 170:	00014209 	andeq	r4, r1, r9, lsl #4
 174:	06170100 	ldreq	r0, [r7], -r0, lsl #2
 178:	20000078 	andcs	r0, r0, r8, ror r0
 17c:	00000064 	andeq	r0, r0, r4, rrx
 180:	00e79c01 	rsceq	r9, r7, r1, lsl #24
 184:	720a0000 	andvc	r0, sl, #0
 188:	0100776f 	tsteq	r0, pc, ror #14
 18c:	00841f17 	addeq	r1, r4, r7, lsl pc
 190:	91020000 	mrsls	r0, (UNDEF: 2)
 194:	5c0b0074 	stcpl	0, cr0, [fp], {116}	; 0x74
 198:	01000001 	tsteq	r0, r1
 19c:	0028060b 	eoreq	r0, r8, fp, lsl #12
 1a0:	00502000 	subseq	r2, r0, r0
 1a4:	9c010000 	stcls	0, cr0, [r1], {-0}
 1a8:	0001d600 	andeq	sp, r1, r0, lsl #12
 1ac:	36000400 	strcc	r0, [r0], -r0, lsl #8
 1b0:	04000001 	streq	r0, [r0], #-1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	01bb0c00 			; <UNDEFINED> instruction: 0x01bb0c00
 1bc:	00f00000 	rscseq	r0, r0, r0
 1c0:	01980000 	orrseq	r0, r8, r0
 1c4:	00d02000 	sbcseq	r2, r0, r0
 1c8:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
 1cc:	02020000 	andeq	r0, r2, #0
 1d0:	45090402 	strmi	r0, [r9, #-1026]	; 0xfffffbfe
 1d4:	03000000 	movweq	r0, #0
 1d8:	06020078 			; <UNDEFINED> instruction: 0x06020078
 1dc:	00004508 	andeq	r4, r0, r8, lsl #10
 1e0:	79030000 	stmdbvc	r3, {}	; <UNPREDICTABLE>
 1e4:	0a060200 	beq	1809ec <startup-0x1fe7f614>
 1e8:	00000045 	andeq	r0, r0, r5, asr #32
 1ec:	01040001 	tsteq	r4, r1
 1f0:	00015708 	andeq	r5, r1, r8, lsl #14
 1f4:	02310500 	eorseq	r0, r1, #0, 10
 1f8:	07020000 	streq	r0, [r2, -r0]
 1fc:	00002503 	andeq	r2, r0, r3, lsl #10
 200:	028c0200 	addeq	r0, ip, #0, 4
 204:	0095090b 	addseq	r0, r5, fp, lsl #18
 208:	1f060000 	svcne	0x00060000
 20c:	02000002 	andeq	r0, r0, #2
 210:	0095070d 	addseq	r0, r5, sp, lsl #14
 214:	06000000 	streq	r0, [r0], -r0
 218:	000001f7 	strdeq	r0, [r0], -r7
 21c:	95070e02 	strls	r0, [r7, #-3586]	; 0xfffff1fe
 220:	04000000 	streq	r0, [r0], #-0
 224:	0001fd06 	andeq	pc, r1, r6, lsl #26
 228:	070f0200 	streq	r0, [pc, -r0, lsl #4]
 22c:	00000095 	muleq	r0, r5, r0
 230:	78700308 	ldmdavc	r0!, {r3, r8, r9}^
 234:	09100200 	ldmdbeq	r0, {r9}
 238:	0000009c 	muleq	r0, ip, r0
 23c:	0407000c 	streq	r0, [r7], #-12
 240:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 244:	004c0800 	subeq	r0, ip, r0, lsl #16
 248:	00ac0000 	adceq	r0, ip, r0
 24c:	ac090000 	stcge	0, cr0, [r9], {-0}
 250:	3f000000 	svccc	0x00000000
 254:	07040400 	streq	r0, [r4, -r0, lsl #8]
 258:	00000130 	andeq	r0, r0, r0, lsr r1
 25c:	00020305 	andeq	r0, r2, r5, lsl #6
 260:	0e110200 	cdpeq	2, 1, cr0, cr1, cr0, {0}
 264:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
 268:	0058040a 	subseq	r0, r8, sl, lsl #8
 26c:	470b0000 	strmi	r0, [fp, -r0]
 270:	14000003 	strne	r0, [r0], #-3
 274:	14100603 	ldrne	r0, [r0], #-1539	; 0xfffff9fd
 278:	03000001 	movweq	r0, #1
 27c:	006f6567 	rsbeq	r6, pc, r7, ror #10
 280:	b30d0703 	movwlt	r0, #55043	; 0xd703
 284:	00000000 	andeq	r0, r0, r0
 288:	00023706 	andeq	r3, r2, r6, lsl #14
 28c:	07080300 	streq	r0, [r8, -r0, lsl #6]
 290:	00000095 	muleq	r0, r5, r0
 294:	020d0604 	andeq	r0, sp, #4, 12	; 0x400000
 298:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
 29c:	0000950d 	andeq	r9, r0, sp, lsl #10
 2a0:	aa060800 	bge	1822a8 <startup-0x1fe7dd58>
 2a4:	03000001 	movweq	r0, #1
 2a8:	01250b09 			; <UNDEFINED> instruction: 0x01250b09
 2ac:	060c0000 	streq	r0, [ip], -r0
 2b0:	000000af 	andeq	r0, r0, pc, lsr #1
 2b4:	250b0a03 	strcs	r0, [fp, #-2563]	; 0xfffff5fd
 2b8:	10000001 	andne	r0, r0, r1
 2bc:	011f0c00 	tsteq	pc, r0, lsl #24
 2c0:	1f0d0000 	svcne	0x000d0000
 2c4:	00000001 	andeq	r0, r0, r1
 2c8:	00c5040a 	sbceq	r0, r5, sl, lsl #8
 2cc:	040a0000 	streq	r0, [sl], #-0
 2d0:	00000114 	andeq	r0, r0, r4, lsl r1
 2d4:	00022905 	andeq	r2, r2, r5, lsl #18
 2d8:	0c0b0300 	stceq	3, cr0, [fp], {-0}
 2dc:	0000011f 	andeq	r0, r0, pc, lsl r1
 2e0:	0002120e 	andeq	r1, r2, lr, lsl #4
 2e4:	060b0100 	streq	r0, [fp], -r0, lsl #2
 2e8:	20000200 	andcs	r0, r0, r0, lsl #4
 2ec:	00000068 	andeq	r0, r0, r8, rrx
 2f0:	018a9c01 	orreq	r9, sl, r1, lsl #24
 2f4:	6f0f0000 	svcvs	0x000f0000
 2f8:	1b0b0100 	blne	2c0700 <startup-0x1fd3f900>
 2fc:	0000012b 	andeq	r0, r0, fp, lsr #2
 300:	106c9102 	rsbne	r9, ip, r2, lsl #2
 304:	20000208 	andcs	r0, r0, r8, lsl #4
 308:	00000056 	andeq	r0, r0, r6, asr r0
 30c:	01006911 	tsteq	r0, r1, lsl r9
 310:	00950c0d 	addseq	r0, r5, sp, lsl #24
 314:	91020000 	mrsls	r0, (UNDEF: 2)
 318:	020e1074 	andeq	r1, lr, #116	; 0x74
 31c:	003e2000 	eorseq	r2, lr, r0
 320:	a1120000 	tstge	r2, r0
 324:	01000000 	mrseq	r0, (UNDEF: 0)
 328:	0095050f 	addseq	r0, r5, pc, lsl #10
 32c:	00130000 	andseq	r0, r3, r0
 330:	14000000 	strne	r0, [r0], #-0
 334:	000001af 	andeq	r0, r0, pc, lsr #3
 338:	98060301 	stmdals	r6, {r0, r8, r9}
 33c:	68200001 	stmdavs	r0!, {r0}
 340:	01000000 	mrseq	r0, (UNDEF: 0)
 344:	006f0f9c 	mlseq	pc, ip, pc, r0	; <UNPREDICTABLE>
 348:	2b1a0301 	blcs	680f54 <startup-0x1f97f0ac>
 34c:	02000001 	andeq	r0, r0, #1
 350:	a0106c91 	mulsge	r0, r1, ip
 354:	56200001 	strtpl	r0, [r0], -r1
 358:	11000000 	mrsne	r0, (UNDEF: 0)
 35c:	05010069 	streq	r0, [r1, #-105]	; 0xffffff97
 360:	0000950c 	andeq	r9, r0, ip, lsl #10
 364:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 368:	0001a610 	andeq	sl, r1, r0, lsl r6
 36c:	00003e20 	andeq	r3, r0, r0, lsr #28
 370:	007c1200 	rsbseq	r1, ip, r0, lsl #4
 374:	07010000 	streq	r0, [r1, -r0]
 378:	00009505 	andeq	r9, r0, r5, lsl #10
 37c:	00001300 	andeq	r1, r0, r0, lsl #6
 380:	85000000 	strhi	r0, [r0, #-0]
 384:	04000000 	streq	r0, [r0], #-0
 388:	00025500 	andeq	r5, r2, r0, lsl #10
 38c:	00010400 	andeq	r0, r1, r0, lsl #8
 390:	0c000000 	stceq	0, cr0, [r0], {-0}
 394:	00000248 	andeq	r0, r0, r8, asr #4
 398:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 39c:	20000268 	andcs	r0, r0, r8, ror #4
 3a0:	000000b4 	strheq	r0, [r0], -r4
 3a4:	0000031c 	andeq	r0, r0, ip, lsl r3
 3a8:	00023c02 	andeq	r3, r2, r2, lsl #24
 3ac:	06230100 	strteq	r0, [r3], -r0, lsl #2
 3b0:	200002f2 	strdcs	r0, [r0], -r2
 3b4:	0000002a 	andeq	r0, r0, sl, lsr #32
 3b8:	004a9c01 	subeq	r9, sl, r1, lsl #24
 3bc:	6d030000 	stcvs	0, cr0, [r3, #-0]
 3c0:	23010073 	movwcs	r0, #4211	; 0x1073
 3c4:	00004a1f 	andeq	r4, r0, pc, lsl sl
 3c8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 3cc:	07040400 	streq	r0, [r4, -r0, lsl #8]
 3d0:	00000130 	andeq	r0, r0, r0, lsr r1
 3d4:	00028d02 	andeq	r8, r2, r2, lsl #26
 3d8:	06130100 	ldreq	r0, [r3], -r0, lsl #2
 3dc:	200002ac 	andcs	r0, r0, ip, lsr #5
 3e0:	00000046 	andeq	r0, r0, r6, asr #32
 3e4:	00769c01 	rsbseq	r9, r6, r1, lsl #24
 3e8:	75030000 	strvc	r0, [r3, #-0]
 3ec:	13010073 	movwne	r0, #4211	; 0x1073
 3f0:	00004a20 	andeq	r4, r0, r0, lsr #20
 3f4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
 3f8:	02810500 	addeq	r0, r1, #0, 10
 3fc:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
 400:	00026806 	andeq	r6, r2, r6, lsl #16
 404:	00004420 	andeq	r4, r0, r0, lsr #8
 408:	009c0100 	addseq	r0, ip, r0, lsl #2
 40c:	00000382 	andeq	r0, r0, r2, lsl #7
 410:	02bb0004 	adcseq	r0, fp, #4
 414:	01040000 	mrseq	r0, (UNDEF: 4)
 418:	00000000 	andeq	r0, r0, r0
 41c:	0002d30c 	andeq	sp, r2, ip, lsl #6
 420:	0000f000 	andeq	pc, r0, r0
 424:	00031c00 	andeq	r1, r3, r0, lsl #24
 428:	0001d220 	andeq	sp, r1, r0, lsr #4
 42c:	0003ea00 	andeq	lr, r3, r0, lsl #20
 430:	02020200 	andeq	r0, r2, #0, 4
 434:	00450904 	subeq	r0, r5, r4, lsl #18
 438:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
 43c:	08060200 	stmdaeq	r6, {r9}
 440:	00000045 	andeq	r0, r0, r5, asr #32
 444:	00790300 	rsbseq	r0, r9, r0, lsl #6
 448:	450a0602 	strmi	r0, [sl, #-1538]	; 0xfffff9fe
 44c:	01000000 	mrseq	r0, (UNDEF: 0)
 450:	08010400 	stmdaeq	r1, {sl}
 454:	00000157 	andeq	r0, r0, r7, asr r1
 458:	00023105 	andeq	r3, r2, r5, lsl #2
 45c:	03070200 	movweq	r0, #29184	; 0x7200
 460:	00000025 	andeq	r0, r0, r5, lsr #32
 464:	0b028c02 	bleq	a3474 <startup-0x1ff5cb8c>
 468:	00009509 	andeq	r9, r0, r9, lsl #10
 46c:	021f0600 	andseq	r0, pc, #0, 12
 470:	0d020000 	stceq	0, cr0, [r2, #-0]
 474:	00009507 	andeq	r9, r0, r7, lsl #10
 478:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
 47c:	02000001 	andeq	r0, r0, #1
 480:	0095070e 	addseq	r0, r5, lr, lsl #14
 484:	06040000 	streq	r0, [r4], -r0
 488:	000001fd 	strdeq	r0, [r0], -sp
 48c:	95070f02 	strls	r0, [r7, #-3842]	; 0xfffff0fe
 490:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 494:	00787003 	rsbseq	r7, r8, r3
 498:	9c091002 	stcls	0, cr1, [r9], {2}
 49c:	0c000000 	stceq	0, cr0, [r0], {-0}
 4a0:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
 4a4:	00746e69 	rsbseq	r6, r4, r9, ror #28
 4a8:	00004c08 	andeq	r4, r0, r8, lsl #24
 4ac:	0000ac00 	andeq	sl, r0, r0, lsl #24
 4b0:	00ac0900 	adceq	r0, ip, r0, lsl #18
 4b4:	003f0000 	eorseq	r0, pc, r0
 4b8:	30070404 	andcc	r0, r7, r4, lsl #8
 4bc:	05000001 	streq	r0, [r0, #-1]
 4c0:	00000204 	andeq	r0, r0, r4, lsl #4
 4c4:	58031102 	stmdapl	r3, {r1, r8, ip}
 4c8:	05000000 	streq	r0, [r0, #-0]
 4cc:	00000203 	andeq	r0, r0, r3, lsl #4
 4d0:	cb0e1102 	blgt	3848e0 <startup-0x1fc7b720>
 4d4:	0a000000 	beq	4dc <startup-0x1ffffb24>
 4d8:	00005804 	andeq	r5, r0, r4, lsl #16
 4dc:	03470b00 	movteq	r0, #31488	; 0x7b00
 4e0:	03140000 	tsteq	r4, #0
 4e4:	01201006 			; <UNDEFINED> instruction: 0x01201006
 4e8:	67030000 	strvs	r0, [r3, -r0]
 4ec:	03006f65 	movweq	r6, #3941	; 0xf65
 4f0:	00bf0d07 	adcseq	r0, pc, r7, lsl #26
 4f4:	06000000 	streq	r0, [r0], -r0
 4f8:	00000237 	andeq	r0, r0, r7, lsr r2
 4fc:	95070803 	strls	r0, [r7, #-2051]	; 0xfffff7fd
 500:	04000000 	streq	r0, [r0], #-0
 504:	00020d06 	andeq	r0, r2, r6, lsl #26
 508:	0d080300 	stceq	3, cr0, [r8, #-0]
 50c:	00000095 	muleq	r0, r5, r0
 510:	01aa0608 			; <UNDEFINED> instruction: 0x01aa0608
 514:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
 518:	0001310b 	andeq	r3, r1, fp, lsl #2
 51c:	af060c00 	svcge	0x00060c00
 520:	03000000 	movweq	r0, #0
 524:	01310b0a 	teqeq	r1, sl, lsl #22
 528:	00100000 	andseq	r0, r0, r0
 52c:	00012b0c 	andeq	r2, r1, ip, lsl #22
 530:	012b0d00 			; <UNDEFINED> instruction: 0x012b0d00
 534:	0a000000 	beq	53c <startup-0x1ffffac4>
 538:	0000d104 	andeq	sp, r0, r4, lsl #2
 53c:	20040a00 	andcs	r0, r4, r0, lsl #20
 540:	05000001 	streq	r0, [r0, #-1]
 544:	0000022a 	andeq	r0, r0, sl, lsr #4
 548:	d1030b03 	tstle	r3, r3, lsl #22
 54c:	05000000 	streq	r0, [r0, #-0]
 550:	00000229 	andeq	r0, r0, r9, lsr #4
 554:	2b0c0b03 	blcs	303168 <startup-0x1fcfce98>
 558:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
 55c:	000002a4 	andeq	r0, r0, r4, lsr #5
 560:	0704021c 	smladeq	r4, ip, r2, r0
 564:	0001bc10 	andeq	fp, r1, r0, lsl ip
 568:	02bb0600 	adcseq	r0, fp, #0, 12
 56c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
 570:	00009507 	andeq	r9, r0, r7, lsl #10
 574:	64030000 	strvs	r0, [r3], #-0
 578:	04007269 	streq	r7, [r0], #-617	; 0xfffffd97
 57c:	01bc0709 			; <UNDEFINED> instruction: 0x01bc0709
 580:	06040000 	streq	r0, [r4], -r0
 584:	0000032f 	andeq	r0, r0, pc, lsr #6
 588:	95070a04 	strls	r0, [r7, #-2564]	; 0xfffff5fc
 58c:	0c000000 	stceq	0, cr0, [r0], {-0}
 590:	00031306 	andeq	r1, r3, r6, lsl #6
 594:	0b0b0400 	bleq	2c159c <startup-0x1fd3ea64>
 598:	000001cc 	andeq	r0, r0, ip, asr #3
 59c:	01aa0f10 			; <UNDEFINED> instruction: 0x01aa0f10
 5a0:	0c040000 	stceq	0, cr0, [r4], {-0}
 5a4:	0001ed0b 	andeq	lr, r1, fp, lsl #26
 5a8:	0f021000 	svceq	0x00021000
 5ac:	000000af 	andeq	r0, r0, pc, lsr #1
 5b0:	090b0d04 	stmdbeq	fp, {r2, r8, sl, fp}
 5b4:	14000002 	strne	r0, [r0], #-2
 5b8:	03340f02 	teqeq	r4, #2, 30
 5bc:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
 5c0:	0001ed0b 	andeq	lr, r1, fp, lsl #26
 5c4:	00021800 	andeq	r1, r2, r0, lsl #16
 5c8:	00009508 	andeq	r9, r0, r8, lsl #10
 5cc:	0001cc00 	andeq	ip, r1, r0, lsl #24
 5d0:	00ac0900 	adceq	r0, ip, r0, lsl #18
 5d4:	00010000 	andeq	r0, r1, r0
 5d8:	00014308 	andeq	r4, r1, r8, lsl #6
 5dc:	0001dc00 	andeq	sp, r1, r0, lsl #24
 5e0:	00ac0900 	adceq	r0, ip, r0, lsl #18
 5e4:	007f0000 	rsbseq	r0, pc, r0
 5e8:	0001e70c 	andeq	lr, r1, ip, lsl #14
 5ec:	01e70d00 	mvneq	r0, r0, lsl #26
 5f0:	0a000000 	beq	5f8 <startup-0x1ffffa08>
 5f4:	00014f04 	andeq	r4, r1, r4, lsl #30
 5f8:	dc040a00 			; <UNDEFINED> instruction: 0xdc040a00
 5fc:	0c000001 	stceq	0, cr0, [r0], {1}
 600:	000001fe 	strdeq	r0, [r0], -lr
 604:	0001fe0d 	andeq	pc, r1, sp, lsl #28
 608:	040a0000 	streq	r0, [sl], #-0
 60c:	00000204 	andeq	r0, r0, r4, lsl #4
 610:	0002ac10 	andeq	sl, r2, r0, lsl ip
 614:	f3040a00 	vpmax.u8	d0, d4, d0
 618:	05000001 	streq	r0, [r0, #-1]
 61c:	000002ab 	andeq	r0, r0, fp, lsr #5
 620:	e70b0f04 	str	r0, [fp, -r4, lsl #30]
 624:	11000001 	tstne	r0, r1
 628:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 62c:	b3110601 	tstlt	r1, #1048576	; 0x100000
 630:	05000000 	streq	r0, [r0, #-0]
 634:	00073803 	andeq	r3, r7, r3, lsl #16
 638:	02991220 	addseq	r1, r9, #32, 4
 63c:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
 640:	0004a606 	andeq	sl, r4, r6, lsl #12
 644:	00004820 	andeq	r4, r0, r0, lsr #16
 648:	799c0100 	ldmibvc	ip, {r8}
 64c:	13000002 	movwne	r0, #2
 650:	000002cd 	andeq	r0, r0, sp, asr #5
 654:	0f183901 	svceq	0x00183901
 658:	02000002 	andeq	r0, r0, #2
 65c:	39115491 	ldmdbcc	r1, {r0, r4, r7, sl, ip, lr}
 660:	01000003 	tsteq	r0, r3
 664:	01370c3a 	teqeq	r7, sl, lsr ip
 668:	91020000 	mrsls	r0, (UNDEF: 2)
 66c:	04ae1458 	strteq	r1, [lr], #1112	; 0x458
 670:	00362000 	eorseq	r2, r6, r0
 674:	69150000 	ldmdbvs	r5, {}	; <UNPREDICTABLE>
 678:	0e3b0100 	rsfeqe	f0, f3, f0
 67c:	00000095 	muleq	r0, r5, r0
 680:	006c9102 	rsbeq	r9, ip, r2, lsl #2
 684:	031e1200 	tsteq	lr, #0, 4
 688:	32010000 	andcc	r0, r1, #0
 68c:	00047c06 	andeq	r7, r4, r6, lsl #24
 690:	00002a20 	andeq	r2, r0, r0, lsr #20
 694:	ae9c0100 	fmlgee	f0, f4, f0
 698:	13000002 	movwne	r0, #2
 69c:	000002cd 	andeq	r0, r0, sp, asr #5
 6a0:	0f193201 	svceq	0x00193201
 6a4:	02000002 	andeq	r0, r0, #2
 6a8:	39115491 	ldmdbcc	r1, {r0, r4, r7, sl, ip, lr}
 6ac:	01000003 	tsteq	r0, r3
 6b0:	01370c34 	teqeq	r7, r4, lsr ip
 6b4:	91020000 	mrsls	r0, (UNDEF: 2)
 6b8:	c316005c 	tstgt	r6, #92	; 0x5c
 6bc:	01000002 	tsteq	r0, r2
 6c0:	03840620 	orreq	r0, r4, #32, 12	; 0x2000000
 6c4:	00f82000 	rscseq	r2, r8, r0
 6c8:	9c010000 	stcls	0, cr0, [r1], {-0}
 6cc:	00000327 	andeq	r0, r0, r7, lsr #6
 6d0:	0002cd13 	andeq	ip, r2, r3, lsl sp
 6d4:	12200100 	eorne	r0, r0, #0, 2
 6d8:	0000020f 	andeq	r0, r0, pc, lsl #4
 6dc:	7bec9103 	blvc	ffb24af0 <snakeObj+0xdfb241ec>
 6e0:	00032a13 	andeq	r2, r3, r3, lsl sl
 6e4:	21200100 			; <UNDEFINED> instruction: 0x21200100
 6e8:	00000143 	andeq	r0, r0, r3, asr #2
 6ec:	7be89103 	blvc	ffa24b00 <snakeObj+0xdfa241fc>
 6f0:	00030e11 	andeq	r0, r3, r1, lsl lr
 6f4:	0d220100 	stfeqs	f0, [r2, #-0]
 6f8:	000001cc 	andeq	r0, r0, ip, asr #3
 6fc:	7bf09103 	blvc	ffc24b10 <snakeObj+0xdfc2420c>
 700:	0003a017 	andeq	sl, r3, r7, lsl r0
 704:	00006820 	andeq	r6, r0, r0, lsr #16
 708:	00030f00 	andeq	r0, r3, r0, lsl #30
 70c:	00691500 	rsbeq	r1, r9, r0, lsl #10
 710:	950e2401 	strls	r2, [lr, #-1025]	; 0xfffffbff
 714:	02000000 	andeq	r0, r0, #0
 718:	14007491 	strne	r7, [r0], #-1169	; 0xfffffb6f
 71c:	2000041a 	andcs	r0, r0, sl, lsl r4
 720:	0000004a 	andeq	r0, r0, sl, asr #32
 724:	01006915 	tsteq	r0, r5, lsl r9
 728:	00950e2d 	addseq	r0, r5, sp, lsr #28
 72c:	91020000 	mrsls	r0, (UNDEF: 2)
 730:	18000070 	stmdane	r0, {r4, r5, r6}
 734:	000002c8 	andeq	r0, r0, r8, asr #5
 738:	1c060f01 	stcne	15, cr0, [r6], {1}
 73c:	68200003 	stmdavs	r0!, {r0, r1}
 740:	01000000 	mrseq	r0, (UNDEF: 0)
 744:	02cd139c 	sbceq	r1, sp, #156, 6	; 0x70000002
 748:	0f010000 	svceq	0x00010000
 74c:	00020f18 	andeq	r0, r2, r8, lsl pc
 750:	54910200 	ldrpl	r0, [r1], #512	; 0x200
 754:	00032a11 	andeq	r2, r3, r1, lsl sl
 758:	0d120100 	ldfeqs	f0, [r2, #-0]
 75c:	00000143 	andeq	r0, r0, r3, asr #2
 760:	11749102 	cmnne	r4, r2, lsl #2
 764:	00000237 	andeq	r0, r0, r7, lsr r2
 768:	95091301 	strls	r1, [r9, #-769]	; 0xfffffcff
 76c:	02000000 	andeq	r0, r0, #0
 770:	0d117091 	ldceq	0, cr7, [r1, #-580]	; 0xfffffdbc
 774:	01000002 	tsteq	r0, r2
 778:	00950914 	addseq	r0, r5, r4, lsl r9
 77c:	91020000 	mrsls	r0, (UNDEF: 2)
 780:	030e116c 	movweq	r1, #57708	; 0xe16c
 784:	15010000 	strne	r0, [r1, #-0]
 788:	00013709 	andeq	r3, r1, r9, lsl #14
 78c:	58910200 	ldmpl	r1, {r9}
 790:	03490000 	movteq	r0, #36864	; 0x9000
 794:	00040000 	andeq	r0, r4, r0
 798:	00000425 	andeq	r0, r0, r5, lsr #8
 79c:	00000104 	andeq	r0, r0, r4, lsl #2
 7a0:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
 7a4:	f0000003 			; <UNDEFINED> instruction: 0xf0000003
	...
 7b0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
 7b4:	02000005 	andeq	r0, r0, #5
 7b8:	09040202 	stmdbeq	r4, {r1, r9}
 7bc:	00000045 	andeq	r0, r0, r5, asr #32
 7c0:	02007803 	andeq	r7, r0, #196608	; 0x30000
 7c4:	00450806 	subeq	r0, r5, r6, lsl #16
 7c8:	03000000 	movweq	r0, #0
 7cc:	06020079 			; <UNDEFINED> instruction: 0x06020079
 7d0:	0000450a 	andeq	r4, r0, sl, lsl #10
 7d4:	04000100 	streq	r0, [r0], #-256	; 0xffffff00
 7d8:	01570801 	cmpeq	r7, r1, lsl #16
 7dc:	31050000 	mrscc	r0, (UNDEF: 5)
 7e0:	02000002 	andeq	r0, r0, #2
 7e4:	00250307 	eoreq	r0, r5, r7, lsl #6
 7e8:	8c020000 	stchi	0, cr0, [r2], {-0}
 7ec:	95090b02 	strls	r0, [r9, #-2818]	; 0xfffff4fe
 7f0:	06000000 	streq	r0, [r0], -r0
 7f4:	0000021f 	andeq	r0, r0, pc, lsl r2
 7f8:	95070d02 	strls	r0, [r7, #-3330]	; 0xfffff2fe
 7fc:	00000000 	andeq	r0, r0, r0
 800:	0001f706 	andeq	pc, r1, r6, lsl #14
 804:	070e0200 	streq	r0, [lr, -r0, lsl #4]
 808:	00000095 	muleq	r0, r5, r0
 80c:	01fd0604 	mvnseq	r0, r4, lsl #12
 810:	0f020000 	svceq	0x00020000
 814:	00009507 	andeq	r9, r0, r7, lsl #10
 818:	70030800 	andvc	r0, r3, r0, lsl #16
 81c:	10020078 	andne	r0, r2, r8, ror r0
 820:	00009c09 	andeq	r9, r0, r9, lsl #24
 824:	07000c00 	streq	r0, [r0, -r0, lsl #24]
 828:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
 82c:	4c080074 	stcmi	0, cr0, [r8], {116}	; 0x74
 830:	ac000000 	stcge	0, cr0, [r0], {-0}
 834:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 838:	000000ac 	andeq	r0, r0, ip, lsr #1
 83c:	0404003f 	streq	r0, [r4], #-63	; 0xffffffc1
 840:	00013007 	andeq	r3, r1, r7
 844:	02040500 	andeq	r0, r4, #0, 10
 848:	11020000 	mrsne	r0, (UNDEF: 2)
 84c:	00005803 	andeq	r5, r0, r3, lsl #16
 850:	02030500 	andeq	r0, r3, #0, 10
 854:	11020000 	mrsne	r0, (UNDEF: 2)
 858:	0000cb0e 	andeq	ip, r0, lr, lsl #22
 85c:	58040a00 	stmdapl	r4, {r9, fp}
 860:	0b000000 	bleq	868 <startup-0x1ffff798>
 864:	00000347 	andeq	r0, r0, r7, asr #6
 868:	10060314 	andne	r0, r6, r4, lsl r3
 86c:	00000120 	andeq	r0, r0, r0, lsr #2
 870:	6f656703 	svcvs	0x00656703
 874:	0d070300 	stceq	3, cr0, [r7, #-0]
 878:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
 87c:	02370600 	eorseq	r0, r7, #0, 12
 880:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
 884:	00009507 	andeq	r9, r0, r7, lsl #10
 888:	0d060400 	cfstrseq	mvf0, [r6, #-0]
 88c:	03000002 	movweq	r0, #2
 890:	00950d08 	addseq	r0, r5, r8, lsl #26
 894:	06080000 	streq	r0, [r8], -r0
 898:	000001aa 	andeq	r0, r0, sl, lsr #3
 89c:	310b0903 	tstcc	fp, r3, lsl #18
 8a0:	0c000001 	stceq	0, cr0, [r0], {1}
 8a4:	0000af06 	andeq	sl, r0, r6, lsl #30
 8a8:	0b0a0300 	bleq	2814b0 <startup-0x1fd7eb50>
 8ac:	00000131 	andeq	r0, r0, r1, lsr r1
 8b0:	2b0c0010 	blcs	3008f8 <startup-0x1fcff708>
 8b4:	0d000001 	stceq	0, cr0, [r0, #-4]
 8b8:	0000012b 	andeq	r0, r0, fp, lsr #2
 8bc:	d1040a00 	tstle	r4, r0, lsl #20
 8c0:	0a000000 	beq	8c8 <startup-0x1ffff738>
 8c4:	00012004 	andeq	r2, r1, r4
 8c8:	022a0500 	eoreq	r0, sl, #0, 10
 8cc:	0b030000 	bleq	c08d4 <startup-0x1ff3f72c>
 8d0:	0000d103 	andeq	sp, r0, r3, lsl #2
 8d4:	02290500 	eoreq	r0, r9, #0, 10
 8d8:	0b030000 	bleq	c08e0 <startup-0x1ff3f720>
 8dc:	00012b0c 	andeq	r2, r1, ip, lsl #22
 8e0:	02a40e00 	adceq	r0, r4, #0, 28
 8e4:	021c0000 	andseq	r0, ip, #0
 8e8:	bc100704 	ldclt	7, cr0, [r0], {4}
 8ec:	06000001 	streq	r0, [r0], -r1
 8f0:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
 8f4:	95070804 	strls	r0, [r7, #-2052]	; 0xfffff7fc
 8f8:	00000000 	andeq	r0, r0, r0
 8fc:	72696403 	rsbvc	r6, r9, #50331648	; 0x3000000
 900:	07090400 	streq	r0, [r9, -r0, lsl #8]
 904:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
 908:	032f0604 			; <UNDEFINED> instruction: 0x032f0604
 90c:	0a040000 	beq	100914 <startup-0x1feff6ec>
 910:	00009507 	andeq	r9, r0, r7, lsl #10
 914:	13060c00 	movwne	r0, #27648	; 0x6c00
 918:	04000003 	streq	r0, [r0], #-3
 91c:	01cc0b0b 	biceq	r0, ip, fp, lsl #22
 920:	0f100000 	svceq	0x00100000
 924:	000001aa 	andeq	r0, r0, sl, lsr #3
 928:	ed0b0c04 	stc	12, cr0, [fp, #-16]
 92c:	10000001 	andne	r0, r0, r1
 930:	00af0f02 	adceq	r0, pc, r2, lsl #30
 934:	0d040000 	stceq	0, cr0, [r4, #-0]
 938:	0002090b 	andeq	r0, r2, fp, lsl #18
 93c:	0f021400 	svceq	0x00021400
 940:	00000334 	andeq	r0, r0, r4, lsr r3
 944:	ed0b0e04 	stc	14, cr0, [fp, #-16]
 948:	18000001 	stmdane	r0, {r0}
 94c:	95080002 	strls	r0, [r8, #-2]
 950:	cc000000 	stcgt	0, cr0, [r0], {-0}
 954:	09000001 	stmdbeq	r0, {r0}
 958:	000000ac 	andeq	r0, r0, ip, lsr #1
 95c:	43080001 	movwmi	r0, #32769	; 0x8001
 960:	dc000001 	stcle	0, cr0, [r0], {1}
 964:	09000001 	stmdbeq	r0, {r0}
 968:	000000ac 	andeq	r0, r0, ip, lsr #1
 96c:	e70c007f 	smlsdx	ip, pc, r0, r0	; <UNPREDICTABLE>
 970:	0d000001 	stceq	0, cr0, [r0, #-4]
 974:	000001e7 	andeq	r0, r0, r7, ror #3
 978:	4f040a00 	svcmi	0x00040a00
 97c:	0a000001 	beq	988 <startup-0x1ffff678>
 980:	0001dc04 	andeq	sp, r1, r4, lsl #24
 984:	01fe0c00 	mvnseq	r0, r0, lsl #24
 988:	fe0d0000 	cdp2	0, 0, cr0, cr13, cr0, {0}
 98c:	00000001 	andeq	r0, r0, r1
 990:	0204040a 	andeq	r0, r4, #167772160	; 0xa000000
 994:	ac100000 	ldcge	0, cr0, [r0], {-0}
 998:	0a000002 	beq	9a8 <startup-0x1ffff658>
 99c:	0001f304 	andeq	pc, r1, r4, lsl #6
 9a0:	02ac0500 	adceq	r0, ip, #0, 10
 9a4:	0f040000 	svceq	0x00040000
 9a8:	00014f03 	andeq	r4, r1, r3, lsl #30
 9ac:	02ab0500 	adceq	r0, fp, #0, 10
 9b0:	0f040000 	svceq	0x00040000
 9b4:	0001e70b 	andeq	lr, r1, fp, lsl #14
 9b8:	03911100 	orrseq	r1, r1, #0, 2
 9bc:	14010000 	strne	r0, [r1], #-0
 9c0:	0000b311 	andeq	fp, r0, r1, lsl r3
 9c4:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
 9c8:	11200007 			; <UNDEFINED> instruction: 0x11200007
 9cc:	00000343 	andeq	r0, r0, r3, asr #6
 9d0:	370f1d01 	strcc	r1, [pc, -r1, lsl #26]
 9d4:	05000001 	streq	r0, [r0, #-1]
 9d8:	00085003 	andeq	r5, r8, r3
 9dc:	02b21120 	adcseq	r1, r2, #32, 2
 9e0:	24010000 	strcs	r0, [r1], #-0
 9e4:	0000b311 	andeq	fp, r0, r1, lsl r3
 9e8:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
 9ec:	11200008 			; <UNDEFINED> instruction: 0x11200008
 9f0:	00000339 	andeq	r0, r0, r9, lsr r3
 9f4:	370f2d01 	strcc	r2, [pc, -r1, lsl #26]
 9f8:	05000001 	streq	r0, [r0, #-1]
 9fc:	0008f003 	andeq	pc, r8, r3
 a00:	039a1120 	orrseq	r1, sl, #32, 2
 a04:	34010000 	strcc	r0, [r1], #-0
 a08:	00020f0e 	andeq	r0, r2, lr, lsl #30
 a0c:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
 a10:	12200009 	eorne	r0, r0, #9
 a14:	000003ab 	andeq	r0, r0, fp, lsr #7
 a18:	60064c01 	andvs	r4, r6, r1, lsl #24
 a1c:	c0200005 	eorgt	r0, r0, r5
 a20:	01000000 	mrseq	r0, (UNDEF: 0)
 a24:	0002c39c 	muleq	r2, ip, r3
 a28:	00631300 	rsbeq	r1, r3, r0, lsl #6
 a2c:	45084e01 	strmi	r4, [r8, #-3585]	; 0xfffff1ff
 a30:	02000000 	andeq	r0, r0, #0
 a34:	8b116791 	blhi	45a880 <startup-0x1fba5780>
 a38:	01000003 	tsteq	r0, r3
 a3c:	01430b4f 	cmpeq	r3, pc, asr #22
 a40:	91020000 	mrsls	r0, (UNDEF: 2)
 a44:	02cd116c 	sbceq	r1, sp, #108, 2
 a48:	50010000 	andpl	r0, r1, r0
 a4c:	00021b0a 	andeq	r1, r2, sl, lsl #22
 a50:	68910200 	ldmvs	r1, {r9}
 a54:	03811200 	orreq	r1, r1, #0, 4
 a58:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
 a5c:	0004f006 	andeq	pc, r4, r6
 a60:	00007020 	andeq	r7, r0, r0, lsr #32
 a64:	3a9c0100 	bcc	fe700e6c <snakeObj+0xde700568>
 a68:	14000003 	strne	r0, [r0], #-3
 a6c:	200004f6 	strdcs	r0, [r0], -r6
 a70:	00000030 	andeq	r0, r0, r0, lsr r0
 a74:	0000030b 	andeq	r0, r0, fp, lsl #6
 a78:	01007913 	tsteq	r0, r3, lsl r9
 a7c:	00950c3f 	addseq	r0, r5, pc, lsr ip
 a80:	91020000 	mrsls	r0, (UNDEF: 2)
 a84:	04fc1574 	ldrbteq	r1, [ip], #1396	; 0x574
 a88:	001e2000 	andseq	r2, lr, r0
 a8c:	78130000 	ldmdavc	r3, {}	; <UNPREDICTABLE>
 a90:	0e400100 	dvfeqs	f0, f0, f0
 a94:	00000095 	muleq	r0, r5, r0
 a98:	00709102 	rsbseq	r9, r0, r2, lsl #2
 a9c:	05261500 	streq	r1, [r6, #-1280]!	; 0xfffffb00
 aa0:	00302000 	eorseq	r2, r0, r0
 aa4:	78130000 	ldmdavc	r3, {}	; <UNPREDICTABLE>
 aa8:	0c450100 	stfeqe	f0, [r5], {-0}
 aac:	00000095 	muleq	r0, r5, r0
 ab0:	156c9102 	strbne	r9, [ip, #-258]!	; 0xfffffefe
 ab4:	2000052c 	andcs	r0, r0, ip, lsr #10
 ab8:	0000001e 	andeq	r0, r0, lr, lsl r0
 abc:	01007913 	tsteq	r0, r3, lsl r9
 ac0:	00950e46 	addseq	r0, r5, r6, asr #28
 ac4:	91020000 	mrsls	r0, (UNDEF: 2)
 ac8:	00000068 	andeq	r0, r0, r8, rrx
 acc:	0003a316 	andeq	sl, r3, r6, lsl r3
 ad0:	060c0100 	streq	r0, [ip], -r0, lsl #2
 ad4:	20000000 	andcs	r0, r0, r0
 ad8:	0000000c 	andeq	r0, r0, ip
 adc:	Address 0x0000000000000adc is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  18:	0b3a0e03 	bleq	e8382c <startup-0x1f17c7d4>
  1c:	0b390b3b 	bleq	e42d10 <startup-0x1f1bd2f0>
  20:	01111927 	tsteq	r1, r7, lsr #18
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  28:	01194297 			; <UNDEFINED> instruction: 0x01194297
  2c:	03000013 	movweq	r0, #19
  30:	08030005 	stmdaeq	r3, {r0, r2}
  34:	0b3b0b3a 	bleq	ec2d24 <startup-0x1f13d2dc>
  38:	13490b39 	movtne	r0, #39737	; 0x9b39
  3c:	00001802 	andeq	r1, r0, r2, lsl #16
  40:	0b002404 	bleq	9058 <startup-0x1fff6fa8>
  44:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  48:	05000008 	streq	r0, [r0, #-8]
  4c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  50:	0b3a0e03 	bleq	e83864 <startup-0x1f17c79c>
  54:	0b390b3b 	bleq	e42d48 <startup-0x1f1bd2b8>
  58:	01111927 	tsteq	r1, r7, lsr #18
  5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  60:	00194297 	mulseq	r9, r7, r2
  64:	11010000 	mrsne	r0, (UNDEF: 1)
  68:	130e2501 	movwne	r2, #58625	; 0xe501
  6c:	1b0e030b 	blne	380ca0 <startup-0x1fc7f360>
  70:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
  74:	00171006 	andseq	r1, r7, r6
  78:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
  7c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  80:	0b3b0b3a 	bleq	ec2d70 <startup-0x1f13d290>
  84:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  88:	01111349 	tsteq	r1, r9, asr #6
  8c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
  90:	01194296 			; <UNDEFINED> instruction: 0x01194296
  94:	03000013 	movweq	r0, #19
  98:	08030034 	stmdaeq	r3, {r2, r4, r5}
  9c:	0b3b0b3a 	bleq	ec2d8c <startup-0x1f13d274>
  a0:	13490b39 	movtne	r0, #39737	; 0x9b39
  a4:	00001802 	andeq	r1, r0, r2, lsl #16
  a8:	0b002404 	bleq	90c0 <startup-0x1fff6f40>
  ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  b0:	0500000e 	streq	r0, [r0, #-14]
  b4:	13490101 	movtne	r0, #37121	; 0x9101
  b8:	00001301 	andeq	r1, r0, r1, lsl #6
  bc:	49002106 	stmdbmi	r0, {r1, r2, r8, sp}
  c0:	000b2f13 	andeq	r2, fp, r3, lsl pc
  c4:	00240700 	eoreq	r0, r4, r0, lsl #14
  c8:	0b3e0b0b 	bleq	f82cfc <startup-0x1f07d304>
  cc:	00000803 	andeq	r0, r0, r3, lsl #16
  d0:	3f012e08 	svccc	0x00012e08
  d4:	3a0e0319 	bcc	380d40 <startup-0x1fc7f2c0>
  d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  dc:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  e0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  e4:	97184006 	ldrls	r4, [r8, -r6]
  e8:	13011942 	movwne	r1, #6466	; 0x1942
  ec:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
  f0:	03193f01 	tsteq	r9, #1, 30
  f4:	3b0b3a0e 	blcc	2ce934 <startup-0x1fd316cc>
  f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  fc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 100:	97184006 	ldrls	r4, [r8, -r6]
 104:	13011942 	movwne	r1, #6466	; 0x1942
 108:	050a0000 	streq	r0, [sl, #-0]
 10c:	3a080300 	bcc	200d14 <startup-0x1fdff2ec>
 110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 114:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 118:	0b000018 	bleq	180 <startup-0x1ffffe80>
 11c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 120:	0b3a0e03 	bleq	e83934 <startup-0x1f17c6cc>
 124:	0b390b3b 	bleq	e42e18 <startup-0x1f1bd1e8>
 128:	01111927 	tsteq	r1, r7, lsr #18
 12c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 130:	00194297 	mulseq	r9, r7, r2
 134:	11010000 	mrsne	r0, (UNDEF: 1)
 138:	130e2501 	movwne	r2, #58625	; 0xe501
 13c:	1b0e030b 	blne	380d70 <startup-0x1fc7f290>
 140:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 144:	00171006 	andseq	r1, r7, r6
 148:	01130200 	tsteq	r3, r0, lsl #4
 14c:	0b3a0b0b 	bleq	e82d80 <startup-0x1f17d280>
 150:	0b390b3b 	bleq	e42e44 <startup-0x1f1bd1bc>
 154:	00001301 	andeq	r1, r0, r1, lsl #6
 158:	03000d03 	movweq	r0, #3331	; 0xd03
 15c:	3b0b3a08 	blcc	2ce984 <startup-0x1fd3167c>
 160:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 164:	000b3813 	andeq	r3, fp, r3, lsl r8
 168:	00240400 	eoreq	r0, r4, r0, lsl #8
 16c:	0b3e0b0b 	bleq	f82da0 <startup-0x1f07d260>
 170:	00000e03 	andeq	r0, r0, r3, lsl #28
 174:	03001605 	movweq	r1, #1541	; 0x605
 178:	3b0b3a0e 	blcc	2ce9b8 <startup-0x1fd31648>
 17c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 180:	06000013 			; <UNDEFINED> instruction: 0x06000013
 184:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 188:	0b3b0b3a 	bleq	ec2e78 <startup-0x1f13d188>
 18c:	13490b39 	movtne	r0, #39737	; 0x9b39
 190:	00000b38 	andeq	r0, r0, r8, lsr fp
 194:	0b002407 	bleq	91b8 <startup-0x1fff6e48>
 198:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 19c:	08000008 	stmdaeq	r0, {r3}
 1a0:	13490101 	movtne	r0, #37121	; 0x9101
 1a4:	00001301 	andeq	r1, r0, r1, lsl #6
 1a8:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
 1ac:	000b2f13 	andeq	r2, fp, r3, lsl pc
 1b0:	000f0a00 	andeq	r0, pc, r0, lsl #20
 1b4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 1b8:	130b0000 	movwne	r0, #45056	; 0xb000
 1bc:	0b0e0301 	bleq	380dc8 <startup-0x1fc7f238>
 1c0:	3b0b3a0b 	blcc	2ce9f4 <startup-0x1fd3160c>
 1c4:	010b390b 	tsteq	fp, fp, lsl #18
 1c8:	0c000013 	stceq	0, cr0, [r0], {19}
 1cc:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
 1d0:	00001301 	andeq	r1, r0, r1, lsl #6
 1d4:	4900050d 	stmdbmi	r0, {r0, r2, r3, r8, sl}
 1d8:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
 1dc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 1e0:	0b3a0e03 	bleq	e839f4 <startup-0x1f17c60c>
 1e4:	0b390b3b 	bleq	e42ed8 <startup-0x1f1bd128>
 1e8:	01111927 	tsteq	r1, r7, lsr #18
 1ec:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1f0:	01194296 			; <UNDEFINED> instruction: 0x01194296
 1f4:	0f000013 	svceq	0x00000013
 1f8:	08030005 	stmdaeq	r3, {r0, r2}
 1fc:	0b3b0b3a 	bleq	ec2eec <startup-0x1f13d114>
 200:	13490b39 	movtne	r0, #39737	; 0x9b39
 204:	00001802 	andeq	r1, r0, r2, lsl #16
 208:	11010b10 	tstne	r1, r0, lsl fp
 20c:	00061201 	andeq	r1, r6, r1, lsl #4
 210:	00341100 	eorseq	r1, r4, r0, lsl #2
 214:	0b3a0803 	bleq	e82228 <startup-0x1f17ddd8>
 218:	0b390b3b 	bleq	e42f0c <startup-0x1f1bd0f4>
 21c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 220:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 224:	03193f01 	tsteq	r9, #1, 30
 228:	3b0b3a0e 	blcc	2cea68 <startup-0x1fd31598>
 22c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 230:	00193c13 	andseq	r3, r9, r3, lsl ip
 234:	00181300 	andseq	r1, r8, r0, lsl #6
 238:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
 23c:	03193f01 	tsteq	r9, #1, 30
 240:	3b0b3a0e 	blcc	2cea80 <startup-0x1fd31580>
 244:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 248:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 24c:	96184006 	ldrls	r4, [r8], -r6
 250:	00001942 	andeq	r1, r0, r2, asr #18
 254:	01110100 	tsteq	r1, r0, lsl #2
 258:	0b130e25 	bleq	4c3af4 <startup-0x1fb3c50c>
 25c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 260:	06120111 			; <UNDEFINED> instruction: 0x06120111
 264:	00001710 	andeq	r1, r0, r0, lsl r7
 268:	3f012e02 	svccc	0x00012e02
 26c:	3a0e0319 	bcc	380ed8 <startup-0x1fc7f128>
 270:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 274:	1119270b 	tstne	r9, fp, lsl #14
 278:	40061201 	andmi	r1, r6, r1, lsl #4
 27c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 280:	00001301 	andeq	r1, r0, r1, lsl #6
 284:	03000503 	movweq	r0, #1283	; 0x503
 288:	3b0b3a08 	blcc	2ceab0 <startup-0x1fd31550>
 28c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 290:	00180213 	andseq	r0, r8, r3, lsl r2
 294:	00240400 	eoreq	r0, r4, r0, lsl #8
 298:	0b3e0b0b 	bleq	f82ecc <startup-0x1f07d134>
 29c:	00000e03 	andeq	r0, r0, r3, lsl #28
 2a0:	3f002e05 	svccc	0x00002e05
 2a4:	3a0e0319 	bcc	380f10 <startup-0x1fc7f0f0>
 2a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2ac:	1119270b 	tstne	r9, fp, lsl #14
 2b0:	40061201 	andmi	r1, r6, r1, lsl #4
 2b4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 2b8:	01000000 	mrseq	r0, (UNDEF: 0)
 2bc:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 2c0:	0e030b13 	vmoveq.32	d3[0], r0
 2c4:	01110e1b 	tsteq	r1, fp, lsl lr
 2c8:	17100612 			; <UNDEFINED> instruction: 0x17100612
 2cc:	13020000 	movwne	r0, #8192	; 0x2000
 2d0:	3a0b0b01 	bcc	2c2edc <startup-0x1fd3d124>
 2d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2d8:	0013010b 	andseq	r0, r3, fp, lsl #2
 2dc:	000d0300 	andeq	r0, sp, r0, lsl #6
 2e0:	0b3a0803 	bleq	e822f4 <startup-0x1f17dd0c>
 2e4:	0b390b3b 	bleq	e42fd8 <startup-0x1f1bd028>
 2e8:	0b381349 	bleq	e05014 <startup-0x1f1fafec>
 2ec:	24040000 	strcs	r0, [r4], #-0
 2f0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2f4:	000e030b 	andeq	r0, lr, fp, lsl #6
 2f8:	00160500 	andseq	r0, r6, r0, lsl #10
 2fc:	0b3a0e03 	bleq	e83b10 <startup-0x1f17c4f0>
 300:	0b390b3b 	bleq	e42ff4 <startup-0x1f1bd00c>
 304:	00001349 	andeq	r1, r0, r9, asr #6
 308:	03000d06 	movweq	r0, #3334	; 0xd06
 30c:	3b0b3a0e 	blcc	2ceb4c <startup-0x1fd314b4>
 310:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 314:	000b3813 	andeq	r3, fp, r3, lsl r8
 318:	00240700 	eoreq	r0, r4, r0, lsl #14
 31c:	0b3e0b0b 	bleq	f82f50 <startup-0x1f07d0b0>
 320:	00000803 	andeq	r0, r0, r3, lsl #16
 324:	49010108 	stmdbmi	r1, {r3, r8}
 328:	00130113 	andseq	r0, r3, r3, lsl r1
 32c:	00210900 	eoreq	r0, r1, r0, lsl #18
 330:	0b2f1349 	bleq	bc505c <startup-0x1f43afa4>
 334:	0f0a0000 	svceq	0x000a0000
 338:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 33c:	0b000013 	bleq	390 <startup-0x1ffffc70>
 340:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 344:	0b3a0b0b 	bleq	e82f78 <startup-0x1f17d088>
 348:	0b390b3b 	bleq	e4303c <startup-0x1f1bcfc4>
 34c:	00001301 	andeq	r1, r0, r1, lsl #6
 350:	2701150c 	strcs	r1, [r1, -ip, lsl #10]
 354:	00130119 	andseq	r0, r3, r9, lsl r1
 358:	00050d00 	andeq	r0, r5, r0, lsl #26
 35c:	00001349 	andeq	r1, r0, r9, asr #6
 360:	0301130e 	movweq	r1, #4878	; 0x130e
 364:	3a050b0e 	bcc	142fa4 <startup-0x1febd05c>
 368:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 36c:	0013010b 	andseq	r0, r3, fp, lsl #2
 370:	000d0f00 	andeq	r0, sp, r0, lsl #30
 374:	0b3a0e03 	bleq	e83b88 <startup-0x1f17c478>
 378:	0b390b3b 	bleq	e4306c <startup-0x1f1bcf94>
 37c:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 380:	13100000 	tstne	r0, #0
 384:	3c0e0300 	stccc	3, cr0, [lr], {-0}
 388:	11000019 	tstne	r0, r9, lsl r0
 38c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 390:	0b3b0b3a 	bleq	ec3080 <startup-0x1f13cf80>
 394:	13490b39 	movtne	r0, #39737	; 0x9b39
 398:	00001802 	andeq	r1, r0, r2, lsl #16
 39c:	3f012e12 	svccc	0x00012e12
 3a0:	3a0e0319 	bcc	38100c <startup-0x1fc7eff4>
 3a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3a8:	1119270b 	tstne	r9, fp, lsl #14
 3ac:	40061201 	andmi	r1, r6, r1, lsl #4
 3b0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 3b4:	00001301 	andeq	r1, r0, r1, lsl #6
 3b8:	03000513 	movweq	r0, #1299	; 0x513
 3bc:	3b0b3a0e 	blcc	2cebfc <startup-0x1fd31404>
 3c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c4:	00180213 	andseq	r0, r8, r3, lsl r2
 3c8:	010b1400 	tsteq	fp, r0, lsl #8
 3cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3d0:	34150000 	ldrcc	r0, [r5], #-0
 3d4:	3a080300 	bcc	200fdc <startup-0x1fdff024>
 3d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 3dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 3e0:	16000018 			; <UNDEFINED> instruction: 0x16000018
 3e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 3e8:	0b3a0e03 	bleq	e83bfc <startup-0x1f17c404>
 3ec:	0b390b3b 	bleq	e430e0 <startup-0x1f1bcf20>
 3f0:	01111927 	tsteq	r1, r7, lsr #18
 3f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 3f8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 3fc:	17000013 	smladne	r0, r3, r0, r0
 400:	0111010b 	tsteq	r1, fp, lsl #2
 404:	13010612 	movwne	r0, #5650	; 0x1612
 408:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
 40c:	03193f01 	tsteq	r9, #1, 30
 410:	3b0b3a0e 	blcc	2cec50 <startup-0x1fd313b0>
 414:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 418:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 41c:	96184006 	ldrls	r4, [r8], -r6
 420:	00001942 	andeq	r1, r0, r2, asr #18
 424:	01110100 	tsteq	r1, r0, lsl #2
 428:	0b130e25 	bleq	4c3cc4 <startup-0x1fb3c33c>
 42c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 430:	01111755 	tsteq	r1, r5, asr r7
 434:	00001710 	andeq	r1, r0, r0, lsl r7
 438:	0b011302 	bleq	45048 <startup-0x1ffbafb8>
 43c:	3b0b3a0b 	blcc	2cec70 <startup-0x1fd31390>
 440:	010b390b 	tsteq	fp, fp, lsl #18
 444:	03000013 	movweq	r0, #19
 448:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 44c:	0b3b0b3a 	bleq	ec313c <startup-0x1f13cec4>
 450:	13490b39 	movtne	r0, #39737	; 0x9b39
 454:	00000b38 	andeq	r0, r0, r8, lsr fp
 458:	0b002404 	bleq	9470 <startup-0x1fff6b90>
 45c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 460:	0500000e 	streq	r0, [r0, #-14]
 464:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 468:	0b3b0b3a 	bleq	ec3158 <startup-0x1f13cea8>
 46c:	13490b39 	movtne	r0, #39737	; 0x9b39
 470:	0d060000 	stceq	0, cr0, [r6, #-0]
 474:	3a0e0300 	bcc	38107c <startup-0x1fc7ef84>
 478:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 47c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 480:	0700000b 	streq	r0, [r0, -fp]
 484:	0b0b0024 	bleq	2c051c <startup-0x1fd3fae4>
 488:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 48c:	01080000 	mrseq	r0, (UNDEF: 8)
 490:	01134901 	tsteq	r3, r1, lsl #18
 494:	09000013 	stmdbeq	r0, {r0, r1, r4}
 498:	13490021 	movtne	r0, #36897	; 0x9021
 49c:	00000b2f 	andeq	r0, r0, pc, lsr #22
 4a0:	0b000f0a 	bleq	40d0 <startup-0x1fffbf30>
 4a4:	0013490b 	andseq	r4, r3, fp, lsl #18
 4a8:	01130b00 	tsteq	r3, r0, lsl #22
 4ac:	0b0b0e03 	bleq	2c3cc0 <startup-0x1fd3c340>
 4b0:	0b3b0b3a 	bleq	ec31a0 <startup-0x1f13ce60>
 4b4:	13010b39 	movwne	r0, #6969	; 0x1b39
 4b8:	150c0000 	strne	r0, [ip, #-0]
 4bc:	01192701 	tsteq	r9, r1, lsl #14
 4c0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 4c4:	13490005 	movtne	r0, #36869	; 0x9005
 4c8:	130e0000 	movwne	r0, #57344	; 0xe000
 4cc:	0b0e0301 	bleq	3810d8 <startup-0x1fc7ef28>
 4d0:	3b0b3a05 	blcc	2cecec <startup-0x1fd31314>
 4d4:	010b390b 	tsteq	fp, fp, lsl #18
 4d8:	0f000013 	svceq	0x00000013
 4dc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 4e0:	0b3b0b3a 	bleq	ec31d0 <startup-0x1f13ce30>
 4e4:	13490b39 	movtne	r0, #39737	; 0x9b39
 4e8:	00000538 	andeq	r0, r0, r8, lsr r5
 4ec:	03001310 	movweq	r1, #784	; 0x310
 4f0:	00193c0e 	andseq	r3, r9, lr, lsl #24
 4f4:	00341100 	eorseq	r1, r4, r0, lsl #2
 4f8:	0b3a0e03 	bleq	e83d0c <startup-0x1f17c2f4>
 4fc:	0b390b3b 	bleq	e431f0 <startup-0x1f1bce10>
 500:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 504:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 508:	03193f01 	tsteq	r9, #1, 30
 50c:	3b0b3a0e 	blcc	2ced4c <startup-0x1fd312b4>
 510:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 514:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 518:	96184006 	ldrls	r4, [r8], -r6
 51c:	13011942 	movwne	r1, #6466	; 0x1942
 520:	34130000 	ldrcc	r0, [r3], #-0
 524:	3a080300 	bcc	20112c <startup-0x1fdfeed4>
 528:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 52c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 530:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
 534:	0111010b 	tsteq	r1, fp, lsl #2
 538:	13010612 	movwne	r0, #5650	; 0x1612
 53c:	0b150000 	bleq	540544 <startup-0x1fabfabc>
 540:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 544:	16000006 	strne	r0, [r0], -r6
 548:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 54c:	0b3a0e03 	bleq	e83d60 <startup-0x1f17c2a0>
 550:	0b390b3b 	bleq	e43244 <startup-0x1f1bcdbc>
 554:	01111927 	tsteq	r1, r7, lsr #18
 558:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 55c:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00af0002 	adceq	r0, pc, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	20000028 	andcs	r0, r0, r8, lsr #32
  34:	00000170 	andeq	r0, r0, r0, ror r1
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	01a90002 			; <UNDEFINED> instruction: 0x01a90002
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000198 	mulcs	r0, r8, r1
  54:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	03830002 	orreq	r0, r3, #2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	20000268 	andcs	r0, r0, r8, ror #4
  74:	000000b4 	strheq	r0, [r0], -r4
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	040c0002 	streq	r0, [ip], #-2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	2000031c 	andcs	r0, r0, ip, lsl r3
  94:	000001d2 	ldrdeq	r0, [r0], -r2
	...
  a0:	00000024 	andeq	r0, r0, r4, lsr #32
  a4:	07920002 	ldreq	r0, [r2, r2]
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  b4:	00000130 	andeq	r0, r0, r0, lsr r1
  b8:	20000000 	andcs	r0, r0, r0
  bc:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000085 	andeq	r0, r0, r5, lsl #1
   4:	00510003 	subseq	r0, r1, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	2f010000 	svccs	0x00010000
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
  20:	746f622f 	strbtvc	r6, [pc], #-559	; 28 <startup-0x1fffffd8>
  24:	2f656c74 	svccs	0x00656c74
  28:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
  2c:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
  30:	646f632f 	strbtvs	r6, [pc], #-815	; 38 <startup-0x1fffffc8>
  34:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
  38:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
  3c:	2f656b61 	svccs	0x00656b61
  40:	6b616e53 	blvs	185b994 <startup-0x1e7a466c>
  44:	74752f65 	ldrbtvc	r2, [r5], #-3941	; 0xfffff09b
  48:	00736c69 	rsbseq	r6, r3, r9, ror #24
  4c:	73696400 	cmnvc	r9, #0, 8
  50:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
  54:	0100632e 	tsteq	r0, lr, lsr #6
  58:	05000000 	streq	r0, [r0, #-0]
  5c:	02050001 	andeq	r0, r5, #1
  60:	20000010 	andcs	r0, r0, r0, lsl r0
  64:	21030516 	tstcs	r3, r6, lsl r5
  68:	21010513 	tstcs	r1, r3, lsl r5
  6c:	21030524 	tstcs	r3, r4, lsr #10
  70:	21010513 	tstcs	r1, r3, lsl r5
  74:	21030524 	tstcs	r3, r4, lsr #10
  78:	21010513 	tstcs	r1, r3, lsl r5
  7c:	21030524 	tstcs	r3, r4, lsr #10
  80:	21010513 	tstcs	r1, r3, lsl r5
  84:	01000102 	tsteq	r0, r2, lsl #2
  88:	00011701 	andeq	r1, r1, r1, lsl #14
  8c:	4f000300 	svcmi	0x00000300
  90:	02000000 	andeq	r0, r0, #0
  94:	0d0efb01 	vstreq	d15, [lr, #-4]
  98:	01010100 	mrseq	r0, (UNDEF: 17)
  9c:	00000001 	andeq	r0, r0, r1
  a0:	01000001 	tsteq	r0, r1
  a4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; fffffff0 <snakeObj+0xdffff6ec>
  a8:	6f622f65 	svcvs	0x00622f65
  ac:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
  b0:	646f632f 	strbtvs	r6, [pc], #-815	; b8 <startup-0x1fffff48>
  b4:	6f6d2f65 	svcvs	0x006d2f65
  b8:	6f632f70 	svcvs	0x00632f70
  bc:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
  c0:	532f6574 			; <UNDEFINED> instruction: 0x532f6574
  c4:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
  c8:	616e532f 	cmnvs	lr, pc, lsr #6
  cc:	752f656b 	strvc	r6, [pc, #-1387]!	; fffffb69 <snakeObj+0xdffff265>
  d0:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
  d4:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
  d8:	2e747570 	mrccs	5, 3, r7, cr4, cr0, {3}
  dc:	00010063 	andeq	r0, r1, r3, rrx
  e0:	01050000 	mrseq	r0, (UNDEF: 5)
  e4:	28020500 	stmdacs	r2, {r8, sl}
  e8:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
  ec:	0305010b 	movweq	r0, #20747	; 0x510b
  f0:	20110532 	andscs	r0, r1, r2, lsr r5
  f4:	752f1205 	strvc	r1, [pc, #-517]!	; fffffef7 <snakeObj+0xdffff5f3>
  f8:	674b1105 	strbvs	r1, [fp, -r5, lsl #2]
  fc:	af750105 	svcge	0x00750105
 100:	054b0205 	strbeq	r0, [fp, #-517]	; 0xfffffdfb
 104:	05300807 	ldreq	r0, [r0, #-2055]!	; 0xfffff7f9
 108:	07052018 	smladeq	r5, r8, r0, r2
 10c:	1805222f 	stmdane	r5, {r0, r1, r2, r3, r5, r9, sp}
 110:	2f070520 	svccs	0x00070520
 114:	20180522 	andscs	r0, r8, r2, lsr #10
 118:	222f0705 	eorcs	r0, pc, #1310720	; 0x140000
 11c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
 120:	05222f07 	streq	r2, [r2, #-3847]!	; 0xfffff0f9
 124:	07052018 	smladeq	r5, r8, r0, r2
 128:	2201052f 	andcs	r0, r1, #197132288	; 0xbc00000
 12c:	3e070577 	cfrshl64cc	mvdx7, mvdx7, r0
 130:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
 134:	06053e09 	streq	r3, [r5], -r9, lsl #28
 138:	210c054a 	tstcs	ip, sl, asr #10
 13c:	052f0905 	streq	r0, [pc, #-2309]!	; fffff83f <snakeObj+0xdfffef3b>
 140:	0c054a06 			; <UNDEFINED> instruction: 0x0c054a06
 144:	2f090521 	svccs	0x00090521
 148:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
 14c:	0905210c 	stmdbeq	r5, {r2, r3, r8, sp}
 150:	4a06052f 	bmi	181614 <startup-0x1fe7e9ec>
 154:	05210c05 	streq	r0, [r1, #-3077]!	; 0xfffff3fb
 158:	0105300a 	tsteq	r5, sl
 15c:	08056921 	stmdaeq	r5, {r0, r5, r8, fp, sp, lr}
 160:	680c053d 	stmdavs	ip, {r0, r2, r3, r4, r5, r8, sl}
 164:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 168:	11052207 	tstne	r5, r7, lsl #4
 16c:	4a0a054b 	bmi	2816a0 <startup-0x1fd7e960>
 170:	053e0905 	ldreq	r0, [lr, #-2309]!	; 0xfffff6fb
 174:	16053d1d 			; <UNDEFINED> instruction: 0x16053d1d
 178:	2029052e 	eorcs	r0, r9, lr, lsr #10
 17c:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
 180:	1e052013 	mcrne	0, 0, r2, cr5, cr3, {0}
 184:	02040200 	andeq	r0, r4, #0, 4
 188:	053c7a03 	ldreq	r7, [ip, #-2563]!	; 0xfffff5fd
 18c:	04020003 	streq	r0, [r2], #-3
 190:	09033c01 	stmdbeq	r3, {r0, sl, fp, ip, sp}
 194:	3d0a053c 	cfstr32cc	mvfx0, [sl, #-240]	; 0xffffff10
 198:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
 19c:	02210104 	eoreq	r0, r1, #4, 2
 1a0:	01010007 	tsteq	r1, r7
 1a4:	00000174 	andeq	r0, r0, r4, ror r1
 1a8:	006c0003 	rsbeq	r0, ip, r3
 1ac:	01020000 	mrseq	r0, (UNDEF: 2)
 1b0:	000d0efb 	strdeq	r0, [sp], -fp
 1b4:	01010101 	tsteq	r1, r1, lsl #2
 1b8:	01000000 	mrseq	r0, (UNDEF: 0)
 1bc:	2f010000 	svccs	0x00010000
 1c0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 1c4:	746f622f 	strbtvc	r6, [pc], #-559	; 1cc <startup-0x1ffffe34>
 1c8:	2f656c74 	svccs	0x00656c74
 1cc:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 1d0:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 1d4:	646f632f 	strbtvs	r6, [pc], #-815	; 1dc <startup-0x1ffffe24>
 1d8:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 1dc:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 1e0:	2f656b61 	svccs	0x00656b61
 1e4:	6b616e53 	blvs	185bb38 <startup-0x1e7a44c8>
 1e8:	74732f65 	ldrbtvc	r2, [r3], #-3941	; 0xfffff09b
 1ec:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
 1f0:	73000073 	movwvc	r0, #115	; 0x73
 1f4:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 1f8:	00632e65 	rsbeq	r2, r3, r5, ror #28
 1fc:	67000001 	strvs	r0, [r0, -r1]
 200:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 204:	2e736369 	cdpcs	3, 7, cr6, cr3, cr9, {3}
 208:	00010068 	andeq	r0, r1, r8, rrx
 20c:	72707300 	rsbsvc	r7, r0, #0, 6
 210:	2e657469 	cdpcs	4, 6, cr7, cr5, cr9, {3}
 214:	00010068 	andeq	r0, r1, r8, rrx
 218:	01050000 	mrseq	r0, (UNDEF: 5)
 21c:	98020500 	stmdals	r2, {r8, sl}
 220:	15200001 	strne	r0, [r0, #-1]!
 224:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
 228:	19052e03 	stmdbne	r5, {r0, r1, r9, sl, fp, sp}
 22c:	03040200 	movweq	r0, #16896	; 0x4200
 230:	00280522 	eoreq	r0, r8, r2, lsr #10
 234:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 238:	02002f05 	andeq	r2, r0, #5, 30
 23c:	05740304 	ldrbeq	r0, [r4, #-772]!	; 0xfffffcfc
 240:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
 244:	2b052e03 	blcs	14ba58 <startup-0x1feb45a8>
 248:	03040200 	movweq	r0, #16896	; 0x4200
 24c:	00050520 	andeq	r0, r5, r0, lsr #10
 250:	20030402 	andcs	r0, r3, r2, lsl #8
 254:	02004205 	andeq	r4, r0, #1342177280	; 0x50000000
 258:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 25c:	04020051 	streq	r0, [r2], #-81	; 0xffffffaf
 260:	58052e03 	stmdapl	r5, {r0, r1, r9, sl, fp, sp}
 264:	03040200 	movweq	r0, #16896	; 0x4200
 268:	00600574 	rsbeq	r0, r0, r4, ror r5
 26c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 270:	02005405 	andeq	r5, r0, #83886080	; 0x5000000
 274:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 278:	04020005 	streq	r0, [r2], #-5
 27c:	2f052003 	svccs	0x00052003
 280:	03040200 	movweq	r0, #16896	; 0x4200
 284:	00190548 	andseq	r0, r9, r8, asr #10
 288:	3c010402 	cfstrscc	mvf0, [r1], {2}
 28c:	02002005 	andeq	r2, r0, #5
 290:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 294:	04020003 	streq	r0, [r2], #-3
 298:	01052001 	tsteq	r5, r1
 29c:	0c055b40 			; <UNDEFINED> instruction: 0x0c055b40
 2a0:	2e03054b 	cfsh32cs	mvfx0, mvfx3, #43
 2a4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
 2a8:	05220304 	streq	r0, [r2, #-772]!	; 0xfffffcfc
 2ac:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
 2b0:	31052e03 	tstcc	r5, r3, lsl #28
 2b4:	03040200 	movweq	r0, #16896	; 0x4200
 2b8:	00390574 	eorseq	r0, r9, r4, ror r5
 2bc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 2c0:	02002d05 	andeq	r2, r0, #320	; 0x140
 2c4:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
 2c8:	04020005 	streq	r0, [r2], #-5
 2cc:	44052003 	strmi	r2, [r5], #-3
 2d0:	03040200 	movweq	r0, #16896	; 0x4200
 2d4:	00530520 	subseq	r0, r3, r0, lsr #10
 2d8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 2dc:	02005a05 	andeq	r5, r0, #20480	; 0x5000
 2e0:	05740304 	ldrbeq	r0, [r4, #-772]!	; 0xfffffcfc
 2e4:	04020062 	streq	r0, [r2], #-98	; 0xffffff9e
 2e8:	56052e03 	strpl	r2, [r5], -r3, lsl #28
 2ec:	03040200 	movweq	r0, #16896	; 0x4200
 2f0:	00050520 	andeq	r0, r5, r0, lsr #10
 2f4:	20030402 	andcs	r0, r3, r2, lsl #8
 2f8:	02002f05 	andeq	r2, r0, #5, 30
 2fc:	05480304 	strbeq	r0, [r8, #-772]	; 0xfffffcfc
 300:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
 304:	20053c01 	andcs	r3, r5, r1, lsl #24
 308:	01040200 	mrseq	r0, R12_usr
 30c:	0003052e 	andeq	r0, r3, lr, lsr #10
 310:	20010402 	andcs	r0, r1, r2, lsl #8
 314:	02400105 	subeq	r0, r0, #1073741825	; 0x40000001
 318:	01010005 	tsteq	r1, r5
 31c:	000000ca 	andeq	r0, r0, sl, asr #1
 320:	004f0003 	subeq	r0, pc, r3
 324:	01020000 	mrseq	r0, (UNDEF: 2)
 328:	000d0efb 	strdeq	r0, [sp], -fp
 32c:	01010101 	tsteq	r1, r1, lsl #2
 330:	01000000 	mrseq	r0, (UNDEF: 0)
 334:	2f010000 	svccs	0x00010000
 338:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 33c:	746f622f 	strbtvc	r6, [pc], #-559	; 344 <startup-0x1ffffcbc>
 340:	2f656c74 	svccs	0x00656c74
 344:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 348:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 34c:	646f632f 	strbtvs	r6, [pc], #-815	; 354 <startup-0x1ffffcac>
 350:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 354:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 358:	2f656b61 	svccs	0x00656b61
 35c:	6b616e53 	blvs	185bcb0 <startup-0x1e7a4350>
 360:	74752f65 	ldrbtvc	r2, [r5], #-3941	; 0xfffff09b
 364:	00736c69 	rsbseq	r6, r3, r9, ror #24
 368:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 36c:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 370:	00000100 	andeq	r0, r0, r0, lsl #2
 374:	00010500 	andeq	r0, r1, r0, lsl #10
 378:	02680205 	rsbeq	r0, r8, #1342177280	; 0x50000000
 37c:	09032000 	stmdbeq	r3, {sp}
 380:	2f030501 	svccs	0x00030501
 384:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
 388:	0d052f03 	stceq	15, cr2, [r5, #-12]
 38c:	2f030520 	svccs	0x00030520
 390:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
 394:	0d052f03 	stceq	15, cr2, [r5, #-12]
 398:	2f090520 	svccs	0x00090520
 39c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
 3a0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 3a4:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
 3a8:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
 3ac:	01040200 	mrseq	r0, R12_usr
 3b0:	2103053c 	tstcs	r3, ip, lsr r5
 3b4:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
 3b8:	05a12f01 	streq	r2, [r1, #3841]!	; 0xf01
 3bc:	05054c06 	streq	r4, [r5, #-3078]	; 0xfffff3fa
 3c0:	3e090583 	cfsh32cc	mvfx0, mvfx9, #-61
 3c4:	2f220505 	svccs	0x00220505
 3c8:	07052f2f 	streq	r2, [r5, -pc, lsr #30]
 3cc:	0309052f 	movweq	r0, #38191	; 0x952f
 3d0:	01053c7a 	tsteq	r5, sl, ror ip
 3d4:	09055b44 	stmdbeq	r5, {r2, r6, r8, r9, fp, ip, lr}
 3d8:	2205054b 	andcs	r0, r5, #314572800	; 0x12c00000
 3dc:	05590705 	ldrbeq	r0, [r9, #-1797]	; 0xfffff8fb
 3e0:	01053909 	tsteq	r5, r9, lsl #18
 3e4:	00050241 	andeq	r0, r5, r1, asr #4
 3e8:	016a0101 	cmneq	sl, r1, lsl #2
 3ec:	00030000 	andeq	r0, r3, r0
 3f0:	00000076 	andeq	r0, r0, r6, ror r0
 3f4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 3f8:	0101000d 	tsteq	r1, sp
 3fc:	00000101 	andeq	r0, r0, r1, lsl #2
 400:	00000100 	andeq	r0, r0, r0, lsl #2
 404:	6f682f01 	svcvs	0x00682f01
 408:	622f656d 	eorvs	r6, pc, #457179136	; 0x1b400000
 40c:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 410:	6f632f65 	svcvs	0x00632f65
 414:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 28c <startup-0x1ffffd74>
 418:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
 41c:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
 420:	2f657469 	svccs	0x00657469
 424:	6b616e53 	blvs	185bd78 <startup-0x1e7a4288>
 428:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 42c:	2f656b61 	svccs	0x00656b61
 430:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
 434:	00737463 	rsbseq	r7, r3, r3, ror #8
 438:	616e7300 	cmnvs	lr, r0, lsl #6
 43c:	632e656b 			; <UNDEFINED> instruction: 0x632e656b
 440:	00000100 	andeq	r0, r0, r0, lsl #2
 444:	70617267 	rsbvc	r7, r1, r7, ror #4
 448:	73636968 	cmnvc	r3, #104, 18	; 0x1a0000
 44c:	0100682e 	tsteq	r0, lr, lsr #16
 450:	70730000 	rsbsvc	r0, r3, r0
 454:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 458:	0100682e 	tsteq	r0, lr, lsr #16
 45c:	6e730000 	cdpvs	0, 7, cr0, cr3, cr0, {0}
 460:	2e656b61 	vnmulcs.f64	d22, d5, d17
 464:	00010068 	andeq	r0, r1, r8, rrx
 468:	01050000 	mrseq	r0, (UNDEF: 5)
 46c:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
 470:	03200003 			; <UNDEFINED> instruction: 0x03200003
 474:	0d05010f 	stfeqs	f0, [r5, #-60]	; 0xffffffc4
 478:	3d15054c 	cfldr32cc	mvfx0, [r5, #-304]	; 0xfffffed0
 47c:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
 480:	15052e09 	strne	r2, [r5, #-3593]	; 0xfffff1f7
 484:	2e2b052f 	cfsh64cs	mvdx0, mvdx11, #31
 488:	2f2e0905 	svccs	0x002e0905
 48c:	05fa0505 	ldrbeq	r0, [sl, #1285]!	; 0x505
 490:	05af6701 	streq	r6, [pc, #1793]!	; b99 <startup-0x1ffff467>
 494:	0e05680d 	cdpeq	8, 0, cr6, cr5, cr13, {0}
 498:	58050583 	stmdapl	r5, {r0, r1, r7, r8, sl}
 49c:	05211705 	streq	r1, [r1, #-1797]!	; 0xfffff8fb
 4a0:	28052e0c 	stmdacs	r5, {r2, r3, r9, sl, fp, sp}
 4a4:	01040200 	mrseq	r0, R12_usr
 4a8:	001f0566 	andseq	r0, pc, r6, ror #10
 4ac:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 4b0:	052f2d05 	streq	r2, [pc, #-3333]!	; fffff7b3 <snakeObj+0xdfffeeaf>
 4b4:	1505582a 	strne	r5, [r5, #-2090]	; 0xfffff7d6
 4b8:	002a054a 	eoreq	r0, sl, sl, asr #10
 4bc:	9c020402 	cfstrsls	mvf0, [r2], {2}
 4c0:	02002005 	andeq	r2, r0, #5
 4c4:	05740104 	ldrbeq	r0, [r4, #-260]!	; 0xfffffefc
 4c8:	04020005 	streq	r0, [r2], #-5
 4cc:	0f052e01 	svceq	0x00052e01
 4d0:	2e08056b 	cfsh32cs	mvfx0, mvfx8, #59
 4d4:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
 4d8:	0e052e09 	cdpeq	14, 0, cr2, cr5, cr9, {0}
 4dc:	5805053e 	stmdapl	r5, {r1, r2, r3, r4, r5, r8, sl}
 4e0:	02002605 	andeq	r2, r0, #5242880	; 0x500000
 4e4:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
 4e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
 4ec:	2905ba03 	stmdbcs	r5, {r0, r1, r9, fp, ip, sp, pc}
 4f0:	03040200 	movweq	r0, #16896	; 0x4200
 4f4:	001f0565 	andseq	r0, pc, r5, ror #10
 4f8:	58010402 	stmdapl	r1, {r1, sl}
 4fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 500:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 504:	05bd6901 	ldreq	r6, [sp, #2305]!	; 0x901
 508:	0f054c26 	svceq	0x00054c26
 50c:	670e052e 	strvs	r0, [lr, -lr, lsr #10]
 510:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 514:	1f053d01 	svcne	0x00053d01
 518:	4c0e054c 	cfstr32mi	mvfx0, [lr], {76}	; 0x4c
 51c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 520:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
 524:	13052103 	movwne	r2, #20739	; 0x5103
 528:	03040200 	movweq	r0, #16896	; 0x4200
 52c:	00120558 	andseq	r0, r2, r8, asr r5
 530:	67030402 	strvs	r0, [r3, -r2, lsl #8]
 534:	02000905 	andeq	r0, r0, #81920	; 0x14000
 538:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 53c:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
 540:	1f053a03 	svcne	0x00053a03
 544:	01040200 	mrseq	r0, R12_usr
 548:	0005053c 	andeq	r0, r5, ip, lsr r5
 54c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 550:	02400105 	subeq	r0, r0, #1073741825	; 0x40000001
 554:	01010005 	tsteq	r1, r5
 558:	00000187 	andeq	r0, r0, r7, lsl #3
 55c:	00a50003 	adceq	r0, r5, r3
 560:	01020000 	mrseq	r0, (UNDEF: 2)
 564:	000d0efb 	strdeq	r0, [sp], -fp
 568:	01010101 	tsteq	r1, r1, lsl #2
 56c:	01000000 	mrseq	r0, (UNDEF: 0)
 570:	2f010000 	svccs	0x00010000
 574:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 578:	746f622f 	strbtvc	r6, [pc], #-559	; 580 <startup-0x1ffffa80>
 57c:	2f656c74 	svccs	0x00656c74
 580:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 584:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 588:	646f632f 	strbtvs	r6, [pc], #-815	; 590 <startup-0x1ffffa70>
 58c:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 590:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 594:	2f656b61 	svccs	0x00656b61
 598:	6b616e53 	blvs	185beec <startup-0x1e7a4114>
 59c:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
 5a0:	2f656d6f 	svccs	0x00656d6f
 5a4:	74746f62 	ldrbtvc	r6, [r4], #-3938	; 0xfffff09e
 5a8:	632f656c 			; <UNDEFINED> instruction: 0x632f656c
 5ac:	2f65646f 	svccs	0x0065646f
 5b0:	2f706f6d 	svccs	0x00706f6d
 5b4:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 5b8:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
 5bc:	616e532f 	cmnvs	lr, pc, lsr #6
 5c0:	532f656b 			; <UNDEFINED> instruction: 0x532f656b
 5c4:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 5c8:	732f2e2f 			; <UNDEFINED> instruction: 0x732f2e2f
 5cc:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
 5d0:	00007374 	andeq	r7, r0, r4, ror r3
 5d4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 5d8:	2e707574 	mrccs	5, 3, r7, cr0, cr4, {3}
 5dc:	00010063 	andeq	r0, r1, r3, rrx
 5e0:	61726700 	cmnvs	r2, r0, lsl #14
 5e4:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 5e8:	00682e73 	rsbeq	r2, r8, r3, ror lr
 5ec:	73000002 	movwvc	r0, #2
 5f0:	74697270 	strbtvc	r7, [r9], #-624	; 0xfffffd90
 5f4:	00682e65 	rsbeq	r2, r8, r5, ror #28
 5f8:	73000002 	movwvc	r0, #2
 5fc:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 600:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 604:	05000000 	streq	r0, [r0, #-0]
 608:	02050001 	andeq	r0, r5, #1
 60c:	20000000 	andcs	r0, r0, r0
 610:	13010c03 	movwne	r0, #7171	; 0x1c03
 614:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
 618:	01000302 	tsteq	r0, r2, lsl #6
 61c:	00160501 	andseq	r0, r6, r1, lsl #10
 620:	04f00205 	ldrbteq	r0, [r0], #517	; 0x205
 624:	3d032000 	stccc	0, cr2, [r3, #-0]
 628:	3d0c0501 	cfstr32cc	mvfx0, [ip, #-4]
 62c:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
 630:	0505210e 	streq	r2, [r5, #-270]	; 0xfffffef2
 634:	0007052e 	andeq	r0, r7, lr, lsr #10
 638:	21030402 	tstcs	r3, r2, lsl #8
 63c:	02002005 	andeq	r2, r0, #5
 640:	05650304 	strbeq	r0, [r5, #-772]!	; 0xfffffcfc
 644:	04020005 	streq	r0, [r2], #-5
 648:	1e053c01 	cdpne	12, 0, cr3, cr5, cr1, {0}
 64c:	02040200 	andeq	r0, r4, #0, 4
 650:	0003053b 	andeq	r0, r3, fp, lsr r5
 654:	3c010402 	cfstrscc	mvf0, [r1], {2}
 658:	05420c05 	strbeq	r0, [r2, #-3077]	; 0xfffff3fb
 65c:	0e052e03 	cdpeq	14, 0, cr2, cr5, cr3, {0}
 660:	2e050521 	cfsh32cs	mvfx0, mvfx5, #17
 664:	02000705 	andeq	r0, r0, #1310720	; 0x140000
 668:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
 66c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 670:	05056503 	streq	r6, [r5, #-1283]	; 0xfffffafd
 674:	01040200 	mrseq	r0, R12_usr
 678:	001f053c 	andseq	r0, pc, ip, lsr r5	; <UNPREDICTABLE>
 67c:	3b020402 	blcc	8168c <startup-0x1ff7e974>
 680:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
 684:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 688:	055b4101 	ldrbeq	r4, [fp, #-257]	; 0xfffffeff
 68c:	0a053e0b 	beq	14fec0 <startup-0x1feb0140>
 690:	2f1a052f 	svccs	0x001a052f
 694:	2f3d0305 	svccs	0x003d0305
 698:	3305052f 	movwcc	r0, #21807	; 0x552f
 69c:	052f0b05 	streq	r0, [pc, #-2821]!	; fffffb9f <snakeObj+0xdffff29b>
 6a0:	0b054a05 	bleq	152ebc <startup-0x1fead144>
 6a4:	4a05053d 	bmi	141ba0 <startup-0x1febe460>
 6a8:	2f0b053d 	svccs	0x000b053d
 6ac:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 6b0:	05053f09 	streq	r3, [r5, #-3849]	; 0xfffff0f7
 6b4:	03090559 	movweq	r0, #38233	; 0x9559
 6b8:	1905ba17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, ip, sp, pc}
 6bc:	3d206c03 	stccc	12, cr6, [r0, #-12]!
 6c0:	053d0905 	ldreq	r0, [sp, #-2309]!	; 0xfffff6fb
 6c4:	054b2319 	strbeq	r2, [fp, #-793]	; 0xfffffce7
 6c8:	19053d09 	stmdbne	r5, {r0, r3, r8, sl, fp, ip, sp}
 6cc:	09053d23 	stmdbeq	r5, {r0, r1, r5, r8, sl, fp, ip, sp}
 6d0:	2319053d 	tstcs	r9, #255852544	; 0xf400000
 6d4:	4b09053d 	blmi	241bd0 <startup-0x1fdbe430>
 6d8:	03050523 	movweq	r0, #21795	; 0x5523
 6dc:	08022061 	stmdaeq	r2, {r0, r5, r6, sp}
 6e0:	Address 0x00000000000006e0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	20554e47 	subscs	r4, r5, r7, asr #28
   4:	20393943 	eorscs	r3, r9, r3, asr #18
   8:	2e322e39 	mrccs	14, 1, r2, cr2, cr9, {1}
   c:	30322031 	eorscc	r2, r2, r1, lsr r0
  10:	30313931 	eorscc	r3, r1, r1, lsr r9
  14:	28203532 	stmdacs	r0!, {r1, r4, r5, r8, sl, ip, sp}
  18:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  1c:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  20:	52415b20 	subpl	r5, r1, #32, 22	; 0x8000
  24:	72612f4d 	rsbvc	r2, r1, #308	; 0x134
  28:	2d392d6d 	ldccs	13, cr2, [r9, #-436]!	; 0xfffffe4c
  2c:	6e617262 	cdpvs	2, 6, cr7, cr1, cr2, {3}
  30:	72206863 	eorvc	r6, r0, #6488064	; 0x630000
  34:	73697665 	cmnvc	r9, #105906176	; 0x6500000
  38:	206e6f69 	rsbcs	r6, lr, r9, ror #30
  3c:	35373732 	ldrcc	r3, [r7, #-1842]!	; 0xfffff8ce
  40:	205d3939 	subscs	r3, sp, r9, lsr r9
  44:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  48:	20626d75 	rsbcs	r6, r2, r5, ror sp
  4c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  50:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  54:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  58:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  5c:	616d2d20 	cmnvs	sp, r0, lsr #26
  60:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  64:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  68:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  6c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  70:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  74:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  78:	00393963 	eorseq	r3, r9, r3, ror #18
  7c:	70617267 	rsbvc	r7, r1, r7, ror #4
  80:	5f636968 	svcpl	0x00636968
  84:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
  88:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
  8c:	72670074 	rsbvc	r0, r7, #116	; 0x74
  90:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
  94:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
  98:	61697469 	cmnvs	r9, r9, ror #8
  9c:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
  a0:	61726700 	cmnvs	r2, r0, lsl #14
  a4:	63696870 	cmnvs	r9, #112, 16	; 0x700000
  a8:	7869705f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
  ac:	635f6c65 	cmpvs	pc, #25856	; 0x6500
  b0:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
  b4:	6f682f00 	svcvs	0x00682f00
  b8:	622f656d 	eorvs	r6, pc, #457179136	; 0x1b400000
  bc:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
  c0:	6f632f65 	svcvs	0x00632f65
  c4:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; ffffff3c <snakeObj+0xdffff638>
  c8:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
  cc:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
  d0:	2f657469 	svccs	0x00657469
  d4:	6b616e53 	blvs	185ba28 <startup-0x1e7a45d8>
  d8:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
  dc:	2f656b61 	svccs	0x00656b61
  e0:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
  e4:	69642f73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  e8:	616c7073 	smcvs	50947	; 0xc703
  ec:	00632e79 	rsbeq	r2, r3, r9, ror lr
  f0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3c <startup-0x1fffffc4>
  f4:	6f622f65 	svcvs	0x00622f65
  f8:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
  fc:	646f632f 	strbtvs	r6, [pc], #-815	; 104 <startup-0x1ffffefc>
 100:	6f6d2f65 	svcvs	0x006d2f65
 104:	6f632f70 	svcvs	0x00632f70
 108:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 10c:	532f6574 			; <UNDEFINED> instruction: 0x532f6574
 110:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 114:	616e532f 	cmnvs	lr, pc, lsr #6
 118:	6700656b 	strvs	r6, [r0, -fp, ror #10]
 11c:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 120:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 124:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 128:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 12c:	006e6565 	rsbeq	r6, lr, r5, ror #10
 130:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 134:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 138:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 13c:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 140:	626b0062 	rsbvs	r0, fp, #98	; 0x62
 144:	74634164 	strbtvc	r4, [r3], #-356	; 0xfffffe9c
 148:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 14c:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
 150:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 154:	63206465 			; <UNDEFINED> instruction: 0x63206465
 158:	00726168 	rsbseq	r6, r2, r8, ror #2
 15c:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
 160:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
 164:	6b007469 	blvs	1d310 <startup-0x1ffe2cf0>
 168:	65476462 	strbvs	r6, [r7, #-1122]	; 0xfffffb9e
 16c:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; ffffffa4 <snakeObj+0xdffff6a0>
 170:	6f682f00 	svcvs	0x00682f00
 174:	622f656d 	eorvs	r6, pc, #457179136	; 0x1b400000
 178:	6c74746f 	cfldrdvs	mvd7, [r4], #-444	; 0xfffffe44
 17c:	6f632f65 	svcvs	0x00632f65
 180:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; fffffff8 <snakeObj+0xdffff6f4>
 184:	632f706f 			; <UNDEFINED> instruction: 0x632f706f
 188:	6c65646f 	cfstrdvs	mvd6, [r5], #-444	; 0xfffffe44
 18c:	2f657469 	svccs	0x00657469
 190:	6b616e53 	blvs	185bae4 <startup-0x1e7a451c>
 194:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 198:	2f656b61 	svccs	0x00656b61
 19c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
 1a0:	6e692f73 	mcrvs	15, 3, r2, cr9, cr3, {3}
 1a4:	2e747570 	mrccs	5, 3, r7, cr4, cr0, {3}
 1a8:	72640063 	rsbvc	r0, r4, #99	; 0x63
 1ac:	64007761 	strvs	r7, [r0], #-1889	; 0xfffff89f
 1b0:	5f776172 	svcpl	0x00776172
 1b4:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
 1b8:	2f006574 	svccs	0x00006574
 1bc:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 1c0:	746f622f 	strbtvc	r6, [pc], #-559	; 1c8 <startup-0x1ffffe38>
 1c4:	2f656c74 	svccs	0x00656c74
 1c8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 1cc:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 1d0:	646f632f 	strbtvs	r6, [pc], #-815	; 1d8 <startup-0x1ffffe28>
 1d4:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 1d8:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 1dc:	2f656b61 	svccs	0x00656b61
 1e0:	6b616e53 	blvs	185bb34 <startup-0x1e7a44cc>
 1e4:	74732f65 	ldrbtvc	r2, [r3], #-3941	; 0xfffff09b
 1e8:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
 1ec:	70732f73 	rsbsvc	r2, r3, r3, ror pc
 1f0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 1f4:	7300632e 	movwvc	r6, #814	; 0x32e
 1f8:	78657a69 	stmdavc	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
 1fc:	7a697300 	bvc	1a5ce04 <startup-0x1e5a31fc>
 200:	50007965 	andpl	r7, r0, r5, ror #18
 204:	4d4f4547 	cfstr64mi	mvdx4, [pc, #-284]	; f0 <startup-0x1fffff10>
 208:	59525445 	ldmdbpl	r2, {r0, r2, r6, sl, ip, lr}^
 20c:	736f7000 	cmnvc	pc, #0
 210:	6c630079 	stclvs	0, cr0, [r3], #-484	; 0xfffffe1c
 214:	5f726165 	svcpl	0x00726165
 218:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
 21c:	6e006574 	cfrshl64vs	mvdx0, mvdx4, r6
 220:	6f706d75 	svcvs	0x00706d75
 224:	73746e69 	cmnvc	r4, #1680	; 0x690
 228:	424f5000 	submi	r5, pc, #0
 22c:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
 230:	494f5000 	stmdbmi	pc, {ip, lr}^	; <UNPREDICTABLE>
 234:	7000544e 	andvc	r5, r0, lr, asr #8
 238:	0078736f 	rsbseq	r7, r8, pc, ror #6
 23c:	616c6564 	cmnvs	ip, r4, ror #10
 240:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 244:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 248:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 194 <startup-0x1ffffe6c>
 24c:	6f622f65 	svcvs	0x00622f65
 250:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
 254:	646f632f 	strbtvs	r6, [pc], #-815	; 25c <startup-0x1ffffda4>
 258:	6f6d2f65 	svcvs	0x006d2f65
 25c:	6f632f70 	svcvs	0x00632f70
 260:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 264:	532f6574 			; <UNDEFINED> instruction: 0x532f6574
 268:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 26c:	616e532f 	cmnvs	lr, pc, lsr #6
 270:	752f656b 	strvc	r6, [pc, #-1387]!	; fffffd0d <snakeObj+0xdffff409>
 274:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
 278:	6c65642f 	cfstrdvs	mvd6, [r5], #-188	; 0xffffff44
 27c:	632e7961 			; <UNDEFINED> instruction: 0x632e7961
 280:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 284:	325f7961 	subscc	r7, pc, #1589248	; 0x184000
 288:	736e3035 	cmnvc	lr, #53	; 0x35
 28c:	6c656400 	cfstrdvs	mvd6, [r5], #-0
 290:	6d5f7961 	vldrvs.16	s15, [pc, #-194]	; 1d6 <startup-0x1ffffe2a>	; <UNPREDICTABLE>
 294:	6f726b69 	svcvs	0x00726b69
 298:	61726400 	cmnvs	r2, r0, lsl #8
 29c:	6e735f77 	mrcvs	15, 3, r5, cr3, cr7, {3}
 2a0:	00656b61 	rsbeq	r6, r5, r1, ror #22
 2a4:	616e5374 	smcvs	58676	; 0xe534
 2a8:	5000656b 	andpl	r6, r0, fp, ror #10
 2ac:	4b414e53 	blmi	1053c00 <startup-0x1efac400>
 2b0:	6e730045 	cdpvs	0, 7, cr0, cr3, cr5, {2}
 2b4:	47656b61 	strbmi	r6, [r5, -r1, ror #22]!
 2b8:	6f006f65 	svcvs	0x00006f65
 2bc:	7070416e 	rsbsvc	r4, r0, lr, ror #2
 2c0:	7000656c 	andvc	r6, r0, ip, ror #10
 2c4:	00687375 	rsbeq	r7, r8, r5, ror r3
 2c8:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 2cc:	616e735f 	cmnvs	lr, pc, asr r3
 2d0:	2f00656b 	svccs	0x0000656b
 2d4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 2d8:	746f622f 	strbtvc	r6, [pc], #-559	; 2e0 <startup-0x1ffffd20>
 2dc:	2f656c74 	svccs	0x00656c74
 2e0:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 2e4:	706f6d2f 	rsbvc	r6, pc, pc, lsr #26
 2e8:	646f632f 	strbtvs	r6, [pc], #-815	; 2f0 <startup-0x1ffffd10>
 2ec:	74696c65 	strbtvc	r6, [r9], #-3173	; 0xfffff39b
 2f0:	6e532f65 	cdpvs	15, 5, cr2, cr3, cr5, {3}
 2f4:	2f656b61 	svccs	0x00656b61
 2f8:	6b616e53 	blvs	185bc4c <startup-0x1e7a43b4>
 2fc:	74732f65 	ldrbtvc	r2, [r3], #-3941	; 0xfffff09b
 300:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
 304:	6e732f73 	mrcvs	15, 3, r2, cr3, cr3, {3}
 308:	2e656b61 	vnmulcs.f64	d22, d5, d17
 30c:	65740063 	ldrbvs	r0, [r4, #-99]!	; 0xffffff9d
 310:	7300706d 	movwvc	r7, #109	; 0x6d
 314:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 318:	74726150 	ldrbtvc	r6, [r2], #-336	; 0xfffffeb0
 31c:	6c630073 	stclvs	0, cr0, [r3], #-460	; 0xfffffe34
 320:	5f726165 	svcpl	0x00726165
 324:	6b616e73 	blvs	185bcf8 <startup-0x1e7a4308>
 328:	65680065 	strbvs	r0, [r8, #-101]!	; 0xffffff9b
 32c:	73006461 	movwvc	r6, #1121	; 0x461
 330:	00657a69 	rsbeq	r7, r5, r9, ror #20
 334:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
 338:	616e7300 	cmnvs	lr, r0, lsl #6
 33c:	6150656b 	cmpvs	r0, fp, ror #10
 340:	66007472 			; <UNDEFINED> instruction: 0x66007472
 344:	74697572 	strbtvc	r7, [r9], #-1394	; 0xfffffa8e
 348:	006a624f 	rsbeq	r6, sl, pc, asr #4
 34c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 298 <startup-0x1ffffd68>
 350:	6f622f65 	svcvs	0x00622f65
 354:	656c7474 	strbvs	r7, [ip, #-1140]!	; 0xfffffb8c
 358:	646f632f 	strbtvs	r6, [pc], #-815	; 360 <startup-0x1ffffca0>
 35c:	6f6d2f65 	svcvs	0x006d2f65
 360:	6f632f70 	svcvs	0x00632f70
 364:	696c6564 	stmdbvs	ip!, {r2, r5, r6, r8, sl, sp, lr}^
 368:	532f6574 			; <UNDEFINED> instruction: 0x532f6574
 36c:	656b616e 	strbvs	r6, [fp, #-366]!	; 0xfffffe92
 370:	616e532f 	cmnvs	lr, pc, lsr #6
 374:	732f656b 			; <UNDEFINED> instruction: 0x732f656b
 378:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 37c:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
 380:	61726400 	cmnvs	r2, r0, lsl #8
 384:	72675f77 	rsbvc	r5, r7, #476	; 0x1dc
 388:	66006469 	strvs	r6, [r0], -r9, ror #8
 38c:	74697572 	strbtvc	r7, [r9], #-1394	; 0xfffffa8e
 390:	75726600 	ldrbvc	r6, [r2, #-1536]!	; 0xfffffa00
 394:	65477469 	strbvs	r7, [r7, #-1129]	; 0xfffffb97
 398:	6e73006f 	cdpvs	0, 7, cr0, cr3, cr15, {3}
 39c:	4f656b61 	svcmi	0x00656b61
 3a0:	73006a62 	movwvc	r6, #2658	; 0xa62
 3a4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 3a8:	6d007075 	stcvs	0, cr7, [r0, #-468]	; 0xfffffe2c
 3ac:	006e6961 	rsbeq	r6, lr, r1, ror #18

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000000c 	andeq	r0, r0, ip
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000006 	andeq	r0, r0, r6
  20:	0000000c 	andeq	r0, r0, ip
  24:	00000000 	andeq	r0, r0, r0
  28:	20000016 	andcs	r0, r0, r6, lsl r0
  2c:	00000006 	andeq	r0, r0, r6
  30:	0000000c 	andeq	r0, r0, ip
  34:	00000000 	andeq	r0, r0, r0
  38:	2000001c 	andcs	r0, r0, ip, lsl r0
  3c:	00000006 	andeq	r0, r0, r6
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000000 	andeq	r0, r0, r0
  48:	20000022 	andcs	r0, r0, r2, lsr #32
  4c:	00000006 	andeq	r0, r0, r6
  50:	0000000c 	andeq	r0, r0, ip
  54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  58:	7c020001 	stcvc	0, cr0, [r2], {1}
  5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000050 	andeq	r0, r0, r0, asr r0
  68:	20000028 	andcs	r0, r0, r8, lsr #32
  6c:	00000050 	andeq	r0, r0, r0, asr r0
  70:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  74:	41018e02 	tstmi	r1, r2, lsl #28
  78:	0000070d 	andeq	r0, r0, sp, lsl #14
  7c:	0000001c 	andeq	r0, r0, ip, lsl r0
  80:	00000050 	andeq	r0, r0, r0, asr r0
  84:	20000078 	andcs	r0, r0, r8, ror r0
  88:	00000064 	andeq	r0, r0, r4, rrx
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  98:	00000007 	andeq	r0, r0, r7
  9c:	0000001c 	andeq	r0, r0, ip, lsl r0
  a0:	00000050 	andeq	r0, r0, r0, asr r0
  a4:	200000dc 	ldrdcs	r0, [r0], -ip
  a8:	00000054 	andeq	r0, r0, r4, asr r0
  ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  b0:	41018e02 	tstmi	r1, r2, lsl #28
  b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b8:	00000007 	andeq	r0, r0, r7
  bc:	0000001c 	andeq	r0, r0, ip, lsl r0
  c0:	00000050 	andeq	r0, r0, r0, asr r0
  c4:	20000130 	andcs	r0, r0, r0, lsr r1
  c8:	00000068 	andeq	r0, r0, r8, rrx
  cc:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  d0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  d4:	280e4101 	stmdacs	lr, {r0, r8, lr}
  d8:	00070d41 	andeq	r0, r7, r1, asr #26
  dc:	0000000c 	andeq	r0, r0, ip
  e0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  e4:	7c020001 	stcvc	0, cr0, [r2], {1}
  e8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  ec:	0000001c 	andeq	r0, r0, ip, lsl r0
  f0:	000000dc 	ldrdeq	r0, [r0], -ip
  f4:	20000198 	mulcs	r0, r8, r1
  f8:	00000068 	andeq	r0, r0, r8, rrx
  fc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 100:	41018e02 	tstmi	r1, r2, lsl #28
 104:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 108:	00000007 	andeq	r0, r0, r7
 10c:	0000001c 	andeq	r0, r0, ip, lsl r0
 110:	000000dc 	ldrdeq	r0, [r0], -ip
 114:	20000200 	andcs	r0, r0, r0, lsl #4
 118:	00000068 	andeq	r0, r0, r8, rrx
 11c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 120:	41018e02 	tstmi	r1, r2, lsl #28
 124:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 128:	00000007 	andeq	r0, r0, r7
 12c:	0000000c 	andeq	r0, r0, ip
 130:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 134:	7c020001 	stcvc	0, cr0, [r2], {1}
 138:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 13c:	00000018 	andeq	r0, r0, r8, lsl r0
 140:	0000012c 	andeq	r0, r0, ip, lsr #2
 144:	20000268 	andcs	r0, r0, r8, ror #4
 148:	00000044 	andeq	r0, r0, r4, asr #32
 14c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 150:	41018e02 	tstmi	r1, r2, lsl #28
 154:	0000070d 	andeq	r0, r0, sp, lsl #14
 158:	0000001c 	andeq	r0, r0, ip, lsl r0
 15c:	0000012c 	andeq	r0, r0, ip, lsr #2
 160:	200002ac 	andcs	r0, r0, ip, lsr #5
 164:	00000046 	andeq	r0, r0, r6, asr #32
 168:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 16c:	41018e02 	tstmi	r1, r2, lsl #28
 170:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 174:	00000007 	andeq	r0, r0, r7
 178:	0000001c 	andeq	r0, r0, ip, lsl r0
 17c:	0000012c 	andeq	r0, r0, ip, lsr #2
 180:	200002f2 	strdcs	r0, [r0], -r2
 184:	0000002a 	andeq	r0, r0, sl, lsr #32
 188:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 18c:	41018e02 	tstmi	r1, r2, lsl #28
 190:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 194:	00000007 	andeq	r0, r0, r7
 198:	0000000c 	andeq	r0, r0, ip
 19c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1a0:	7c020001 	stcvc	0, cr0, [r2], {1}
 1a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	00000198 	muleq	r0, r8, r1
 1b0:	2000031c 	andcs	r0, r0, ip, lsl r3
 1b4:	00000068 	andeq	r0, r0, r8, rrx
 1b8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1bc:	41018e02 	tstmi	r1, r2, lsl #28
 1c0:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
 1c4:	00000007 	andeq	r0, r0, r7
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	00000198 	muleq	r0, r8, r1
 1d0:	20000384 	andcs	r0, r0, r4, lsl #7
 1d4:	000000f8 	strdeq	r0, [r0], -r8
 1d8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1dc:	42018e02 	andmi	r8, r1, #2, 28
 1e0:	4104980e 	tstmi	r4, lr, lsl #16
 1e4:	0000070d 	andeq	r0, r0, sp, lsl #14
 1e8:	00000020 	andeq	r0, r0, r0, lsr #32
 1ec:	00000198 	muleq	r0, r8, r1
 1f0:	2000047c 	andcs	r0, r0, ip, ror r4
 1f4:	0000002a 	andeq	r0, r0, sl, lsr #32
 1f8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 1fc:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 200:	41018e02 	tstmi	r1, r2, lsl #28
 204:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
 208:	00000007 	andeq	r0, r0, r7
 20c:	00000020 	andeq	r0, r0, r0, lsr #32
 210:	00000198 	muleq	r0, r8, r1
 214:	200004a6 	andcs	r0, r0, r6, lsr #9
 218:	00000048 	andeq	r0, r0, r8, asr #32
 21c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 220:	87038504 	strhi	r8, [r3, -r4, lsl #10]
 224:	41018e02 	tstmi	r1, r2, lsl #28
 228:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
 22c:	00000007 	andeq	r0, r0, r7
 230:	0000000c 	andeq	r0, r0, ip
 234:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 238:	7c020001 	stcvc	0, cr0, [r2], {1}
 23c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 240:	0000000c 	andeq	r0, r0, ip
 244:	00000230 	andeq	r0, r0, r0, lsr r2
 248:	20000000 	andcs	r0, r0, r0
 24c:	0000000c 	andeq	r0, r0, ip
 250:	0000001c 	andeq	r0, r0, ip, lsl r0
 254:	00000230 	andeq	r0, r0, r0, lsr r2
 258:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 25c:	00000070 	andeq	r0, r0, r0, ror r0
 260:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 264:	41018e02 	tstmi	r1, r2, lsl #28
 268:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 26c:	00000007 	andeq	r0, r0, r7
 270:	0000001c 	andeq	r0, r0, ip, lsl r0
 274:	00000230 	andeq	r0, r0, r0, lsr r2
 278:	20000560 	andcs	r0, r0, r0, ror #10
 27c:	000000c0 	andeq	r0, r0, r0, asr #1
 280:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 284:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 288:	200e4101 	andcs	r4, lr, r1, lsl #2
 28c:	00070d41 	andeq	r0, r7, r1, asr #26
 290:	0000000c 	andeq	r0, r0, ip
 294:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 298:	7c010001 	stcvc	0, cr0, [r1], {1}
 29c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2a0:	0000000c 	andeq	r0, r0, ip
 2a4:	00000290 	muleq	r0, r0, r2
 2a8:	20000621 	andcs	r0, r0, r1, lsr #12
 2ac:	0000010a 	andeq	r0, r0, sl, lsl #2

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	200004f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
   4:	20000620 	andcs	r0, r0, r0, lsr #12
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
